{"version":3,"sources":["excalidraw/src/constants.ts","excalidraw/src/element/typeChecks.ts","excalidraw/src/math.ts","excalidraw/src/points.ts","excalidraw/src/element/bounds.ts","excalidraw/src/i18n.ts","excalidraw/src/scene/scrollbars.ts","excalidraw/src/scene/selection.ts","excalidraw/src/scene/scroll.ts","excalidraw/src/scene/comparisons.ts","excalidraw/src/scene/zoom.ts","excalidraw/src/scene/globalScene.ts","excalidraw/src/utils.ts","excalidraw/src/renderer/renderElement.ts","excalidraw/src/random.ts","excalidraw/src/element/mutateElement.ts","excalidraw/src/element/sizeHelpers.ts","excalidraw/src/groups.ts","excalidraw/src/element/newElement.ts","excalidraw/src/element/handlerRectangles.ts","excalidraw/src/element/collision.ts","excalidraw/src/element/resizeTest.ts","excalidraw/src/element/resizeElements.ts","excalidraw/src/element/dragElements.ts","excalidraw/src/keys.ts","excalidraw/src/element/textWysiwyg.tsx","excalidraw/src/element/textElement.ts","excalidraw/src/element/showSelectedShapeActions.ts","excalidraw/src/element/index.ts","excalidraw/src/appState.ts","excalidraw/src/renderer/roundRect.ts","excalidraw/src/colors.ts","excalidraw/src/clients.ts","excalidraw/src/element/linearElementEditor.ts","excalidraw/src/renderer/renderScene.ts","excalidraw/src/scene/export.ts","excalidraw/src/charts.ts","excalidraw/src/clipboard.ts","excalidraw/src/data/restore.ts","excalidraw/src/data/blob.ts","excalidraw/src/data/json.ts","excalidraw/src/data/localStorage.ts","excalidraw/src/data/index.ts","excalidraw/src/components/ContextMenu.tsx","excalidraw/src/components/Portal.tsx","excalidraw/src/shapes.tsx","excalidraw/src/history.ts","excalidraw/src/components/Popover.tsx","excalidraw/src/actions/manager.tsx","excalidraw/src/components/ToolButton.tsx","excalidraw/src/components/icons.tsx","excalidraw/src/actions/register.ts","excalidraw/src/actions/actionDeleteSelected.tsx","excalidraw/src/zindex.ts","excalidraw/src/actions/actionZindex.tsx","excalidraw/src/components/ButtonSelect.tsx","excalidraw/src/actions/actionSelectAll.ts","excalidraw/src/actions/actionDuplicateSelection.tsx","excalidraw/src/components/ColorPicker.tsx","excalidraw/src/actions/actionProperties.tsx","excalidraw/src/is-mobile.tsx","excalidraw/src/actions/actionCanvas.tsx","excalidraw/src/actions/actionFinalize.tsx","excalidraw/src/components/ProjectName.tsx","excalidraw/src/actions/actionStyles.ts","excalidraw/src/actions/actionExport.tsx","excalidraw/src/components/HelpIcon.tsx","excalidraw/src/components/Avatar.tsx","excalidraw/src/actions/actionMenu.tsx","excalidraw/src/actions/actionGroup.ts","excalidraw/src/gesture.ts","excalidraw/src/actions/actionNavigate.tsx","excalidraw/src/actions/actionHistory.tsx","excalidraw/src/components/Island.tsx","excalidraw/src/components/Stack.tsx","excalidraw/src/components/FixedSideContainer.tsx","excalidraw/src/components/UserList.tsx","excalidraw/src/components/LockIcon.tsx","excalidraw/src/components/Modal.tsx","excalidraw/src/components/Dialog.tsx","excalidraw/src/components/ExportDialog.tsx","excalidraw/src/components/LanguageList.tsx","excalidraw/src/components/HintViewer.tsx","excalidraw/src/components/Actions.tsx","excalidraw/src/components/Section.tsx","excalidraw/src/components/RoomDialog.tsx","excalidraw/src/components/LoadingMessage.tsx","excalidraw/src/components/MobileMenu.tsx","excalidraw/src/components/ErrorDialog.tsx","excalidraw/src/components/ShortcutsDialog.tsx","excalidraw/src/components/GitHubCorner.tsx","excalidraw/src/components/Tooltip.tsx","excalidraw/src/components/LayerUI.tsx","excalidraw/src/components/App.tsx","excalidraw/src/time_constants.ts","Claymate.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SCENE","EVENT","isTextElement","element","type","isLinearElement","SHIFT_LOCKING_ANGLE","Math","PI","CURSOR_TYPE","POINTER_BUTTON","ENV","BROADCAST","CLASSES","FONT_FAMILY","1","2","3","CANVAS_ONLY_ACTIONS","distanceBetweenPointAndSegment","x","y","x1","y1","x2","y2","xx","yy","C","D","lenSquare","param","dx","dy","hypot","rotate","angle","cos","sin","adjustXYWithRotation","side","deltaX1","deltaY1","deltaX2","deltaY2","isResizeFromCenter","distance2d","xd","yd","isPathALoop","points","length","firstPoint","lastPoint","onSegment","p","q","r","max","min","orientation","val","doIntersect","p1","q1","p2","q2","o1","o2","o3","o4","getGridPoint","gridSize","round","rescalePoints","dimension","nextDimensionSize","prevPoints","prevDimValues","map","point","prevMaxDimension","prevMinDimension","prevDimensionSize","dimensionScaleFactor","nextMinDimension","Infinity","scaledPoints","prevPoint","value","currentDimension","scaledValue","translation","scaledPoint","getElementAbsoluteCoords","getLinearElementAbsoluteCoords","width","height","getDiamondPoints","topX","floor","rightX","rightY","getCurvePathOps","shape","sets","set","ops","getMinMaxXYFromCurvePathOps","transformXY","currentP","reduce","limits","op","data","p3","p0","equation","t","idx","pow","minY","minX","maxX","maxY","getShapeForElement","getElementBounds","cx","cy","getLinearElementRotatedBounds","x11","y11","x12","y12","x22","y22","x21","y21","w","h","ww","hh","getCommonBounds","elements","forEach","getResizedElementAbsoluteCoords","nextWidth","nextHeight","curve","rough","generator","generateRoughOptions","getElementPointsCoords","languages","lng","label","require","rtl","currentLanguage","fallbackLanguage","setLanguage","newLng","find","language","document","documentElement","dir","languageDetector","cacheUserLanguage","getLanguage","findPartsForData","parts","i","part","undefined","path","replacement","split","Error","key","replace","LanguageDetector","init","languageUtils","formatLanguageCode","isWhitelisted","checkWhitelist","detect","getScrollBars","viewportWidth","viewportHeight","scrollX","scrollY","zoom","elementsMinX","elementsMinY","elementsMaxX","elementsMaxY","viewportWidthWithZoom","viewportHeightWithZoom","viewportWidthDiff","viewportHeightDiff","safeArea","top","parseInt","getGlobalCSSVariable","bottom","left","right","isRTL","viewportMinX","viewportMinY","viewportMaxX","viewportMaxY","sceneMinX","sceneMinY","sceneMaxX","sceneMaxY","horizontal","SCROLLBAR_MARGIN","vertical","isOverScrollBars","scrollBars","scrollBar","isOverHorizontalScrollBar","isOverVerticalScrollBar","isSomeElementSelected","appState","some","selectedElementIds","id","getSelectedElements","filter","normalizeScroll","pos","calculateScrollCenter","canvas","scale","window","devicePixelRatio","cords","sceneCoordsToViewportCoords","sceneX","sceneY","viewportX1","viewportY1","viewportX2","viewportY2","innerWidth","innerHeight","isOutsideViewPort","from","minDistance","closestElement","distance","getClosestElementBounds","viewportCoordsToSceneCoords","clientX","clientY","centerX","centerY","hasBackground","hasStroke","hasText","getElementAtPosition","hitElement","isDeleted","hitTest","getZoomOrigin","getContext","getNormalizedZoom","normalizedZoom","parseFloat","toFixed","globalSceneState","callbacks","Set","nonDeletedElements","elementsMap","this","getElement","isNonDeletedElement","nextElements","getElementMap","getNonDeletedElements","informMutation","Array","callback","cb","has","add","delete","SVG_NS","mockDateTime","getDateTime","date","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hr","getHours","getMinutes","capitalizeString","str","charAt","toUpperCase","slice","isWritableElement","target","HTMLElement","dataset","HTMLBRElement","HTMLTextAreaElement","HTMLInputElement","getFontFamilyString","fontFamily","getFontString","fontSize","measureText","text","font","line","createElement","body","style","position","whiteSpace","appendChild","innerText","offsetWidth","offsetHeight","span","display","overflow","baseline","offsetTop","removeChild","debounce","fn","timeout","lastArgs","handle","ret","args","clearTimeout","setTimeout","flush","selectNode","node","selection","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","removeSelection","abs","resetCursor","cursor","setCursorForShape","isFullScreen","fullscreenElement","nodeName","getShortcutKey","shortcut","isMac","test","navigator","platform","zoomOrigin","name","getComputedStyle","getPropertyValue","RE_RTL_CHECK","RegExp","DASHARRAY_DASHED","DASHARRAY_DOTTED","drawElementOnCanvas","rc","context","globalAlpha","opacity","draw","shouldTemporarilyAttach","isConnected","setAttribute","fillStyle","strokeColor","textAlign","lines","lineHeight","verticalOffset","horizontalOffset","fillText","remove","elementWithCanvasCache","WeakMap","shapeCache","get","invalidateShapeForElement","options","seed","strokeLineDash","strokeStyle","disableMultiStroke","strokeWidth","fillWeight","hachureGap","roughness","stroke","fill","backgroundColor","curveFitting","generateElementShape","rectangle","topY","bottomX","bottomY","leftX","leftY","polygon","ellipse","prevOp","nx","ny","arrowLength","total","px","py","minSize","xs","ys","x3","y3","getArrowPoints","x4","y4","push","generateElementWithCanvas","sceneState","prevElementWithCanvas","shouldRegenerateBecauseZoom","canvasZoom","shouldCacheIgnoreZoom","elementWithCanvas","canvasOffsetX","canvasOffsetY","CANVAS_PADDING","translate","generateElementCanvas","renderElement","renderOptimizations","fillRect","drawImage","drawElementFromCanvas","shiftX","shiftY","renderElementToSvg","rsvg","svgRoot","offsetX","offsetY","degree","group","ownerDocument","createElementNS","direction","textAnchor","textContent","random","Random","now","randomInteger","next","randomId","nanoid","mutateElement","updates","didChange","getSizeFromPoints","nextPoints","didChangePoints","nextPoint","version","versionNonce","newElementWith","isInvisiblySmallElement","getPerfectElementSize","elementType","absWidth","absHeight","lockedAngle","atan","tan","sign","getNormalizedDimensions","selectGroup","groupId","elementsInGroup","groupIds","includes","selectedGroupIds","editingGroupId","Object","fromEntries","isSelectedViaGroup","getSelectedGroupIds","entries","selectGroupsForSelectedElements","nextAppState","selectedElements","indexOfEditingGroup","indexOf","isElementInGroup","getElementsInGroup","addToGroup","prevGroupIds","newGroupId","positionOfEditingGroupId","positionToInsert","splice","_newElementBase","rest","newElement","opts","newTextElement","metrics","deepCopyElement","depth","prototype","toString","call","tmp","constructor","create","getPrototypeOf","hasOwnProperty","isArray","k","arr","duplicateElement","groupIdMapForOperation","overrides","copy","mapper","endIndex","getNewGroupIdsForDuplication","assign","handleSizes","mouse","pen","touch","OMIT_SIDES_FOR_MULTIPLE_ELEMENTS","e","s","n","rotation","OMIT_SIDES_FOR_TEXT_ELEMENT","OMIT_SIDES_FOR_LINE_SLASH","nw","se","OMIT_SIDES_FOR_LINE_BACKSLASH","ne","sw","generateHandler","handlerRectanglesFromCoords","pointerType","omitSides","size","handlerWidth","handlerHeight","handlerMarginX","handlerMarginY","dashedLineMargin","centeringOffset","handlers","minimumSizeForEightHandlers","handlerRectangles","isElementDraggableFromInside","dragFromInside","lineThreshold","tx","ty","a","b","ex","ey","rx","ry","qx","qy","relX","relY","subshape","hitTestCurveInside","hitTestRoughShape","console","warn","drawable","operation","vertices","extreme","Number","MAX_SAFE_INTEGER","count","current","isPointInPolygon","pointsOnBezierCurves","mx","my","sqrt","pointInBezierEquation","isInHandlerRect","handler","getElementWithResizeHandler","scenePointerX","scenePointerY","result","resizeHandle","rotationHandler","keys","resizeTest","getResizeHandlerFromCoords","RESIZE_CURSORS","getCursorForResizingElement","resizingElement","shouldSwapCursors","index","rotateResizeCursor","rotateSingleElement","pointerX","pointerY","isRotateWithDiscreteAngle","atan2","resizeSingleTwoPointElement","resizeArrowDirection","pointOrigin","pointEnd","rescalePointsInElement","measureFontSizeFromWH","nextFontSize","resizeSingleTextElement","rotatedX","rotatedY","nextFont","nextElementX","nextElementY","resizeSingleElement","sidesWithSameLength","scaleX","scaleY","nextX1","nextY1","nextX2","nextY2","rescaledPoints","finalX1","finalY1","finalX2","finalY2","needsRotation","flipDiffX","flipDiffY","getFlipAdjustment","isFinite","resizeMultipleElements","getNextXY","origX1","origY1","origX2","origY2","prev","origCoords","finalCoords","dragNewElement","draggingElement","originX","originY","isResizeWithSidesSameLength","isResizeCenterPoint","newX","newY","isDarwin","KEYS","isArrowKey","keyCode","getResizeCenterPointKey","event","altKey","which","getResizeWithSidesSameLengthKey","shiftKey","getRotateWithDiscreteAngleKey","trimText","trim","redrawTextBoundingBox","showSelectedShapeActions","Boolean","editingElement","acc","getDrawingVersion","el","getDefaultAppState","isLoading","errorMessage","multiElement","editingLinearElement","elementLocked","exportBackground","shouldAddWatermark","currentItemStrokeColor","oc","black","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","currentItemStrokeStyle","currentItemRoughness","currentItemOpacity","currentItemFontSize","currentItemFontFamily","currentItemTextAlign","viewBackgroundColor","white","cursorX","cursorY","cursorButton","scrolledOutside","username","isCollaborating","isResizing","isRotating","selectionElement","openMenu","lastPointerDownWith","previousSelectedElementIds","collaborators","Map","showShortcutsDialog","zenModeEnabled","cleanAppStateForExport","roundRect","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","shades","red","pink","grape","violet","indigo","blue","cyan","teal","green","lime","yellow","orange","canvasBackground","gray","elementBackground","elementStroke","getClientColors","clientId","sum","charCodeAt","backgrounds","colors","strokes","background","LinearElementEditor","elementId","activePointIndex","draggingElementPointIndex","lastUncommittedPoint","normalizePoints","getNonDeletedElement","setState","lastX","lastY","clickedPointIndex","getPointIndexUnderCursor","deltaX","deltaY","targetPoint","movePoint","history","didAddPoint","createPointAt","resumeRecording","newPoint","pointHandles","getPointsGlobalCoordinates","POINT_HANDLE_SIZE","_idx","pointIndex","targetPosition","nextCoords","prevCoords","nextCenterX","nextCenterY","prevCenterX","prevCenterY","rotated","strokeRectWithRotation","strokeRect","strokeCircle","arc","strokeGrid","origStrokeStyle","renderLinearPointHandles","lineWidth","setLineDash","renderScene","renderScrollbars","renderSelection","renderGrid","atLeastOneVisibleElement","normalizedCanvasWidth","normalizedCanvasHeight","hasTransparence","clearRect","zoomTranslationX","zoomTranslationY","ceil","visibleElements","isVisibleElement","selections","selectionColors","remoteSelectedElementIds","socketId","elementX1","elementY1","elementX2","elementY2","addSelectionForGroupId","groupElements","elementWidth","elementHeight","initialLineDash","getLineDash","lineDashOffset","dashedLinePadding","dashWidth","spaceWidth","locallySelectedElements","remotePointerViewportCoords","remotePointerUsernames","isOutOfBounds","remotePointerButton","paddingHorizontal","paddingVertical","measure","measureHeight","actualBoundingBoxDescent","actualBoundingBoxAscent","SCROLLBAR_WIDTH","exportToCanvas","exportPadding","createCanvas","tempCanvas","sceneElements","getWatermarkElement","exportToSvg","innerHTML","rect","renderSceneToSvg","svg","textWidth","tryParseNumber","match","exec","isNumericColumn","columnIndex","every","tryParseCells","cells","numCols","error","hasHeader","values","spreadsheet","yAxisLabel","labels","valueColumnIndex","labelColumnIndex","rows","row","tryParseSpreadsheet","numColsFirstLine","transposedResults","nextCells","col","nextCellRow","transposeCells","renderSpreadsheet","minYLabel","toLocaleString","maxYLabel","bars","barHeight","xLabels","labelX","BAR_HEIGHT","CLIPBOARD","PREFER_APP_CLIPBOARD","probablySupportsClipboardReadText","clipboard","probablySupportsClipboardWriteText","probablySupportsClipboardBlob","HTMLCanvasElement","copyToAppClipboard","JSON","stringify","copyTextToSystemClipboard","getAppClipboard","clipboardElements","parse","getClipboardContent","clipboardData","getData","readText","copyCanvasToClipboardAsPng","Promise","resolve","reject","toBlob","blob","write","ClipboardItem","copyCanvasToClipboardAsSvg","svgroot","writeText","outerHTML","copied","copyTextViaExecCommand","getAttribute","textarea","border","padding","margin","yPosition","pageYOffset","scrollTop","success","select","setSelectionRange","execCommand","migrateElementWithProperties","extra","base","migrateElement","fontPx","_fontFamily","fontFamilyName","getFontFamilyByName","restore","savedElements","savedState","migratedElement","scrollToContent","loadFromBlob","updateAppState","contents","defaultAppState","Blob","reader","FileReader","readAsText","onloadend","readyState","DONE","serializeAsJSON","source","location","origin","saveAsJSON","fileHandle","serialized","fileSave","fileName","description","extensions","loadFromJSON","fileOpen","mimeTypes","saveToLocalStorage","localStorage","setItem","clearAppStateForLocalStorage","restoreFromLocalStorage","getItem","contextMenuNode","byteToHex","byte","generateRandomID","Uint8Array","crypto","getRandomValues","join","generateEncryptionKey","subtle","generateKey","exportKey","createIV","getCollaborationLinkData","link","URL","hash","generateCollaborationLink","pathname","getImportedKey","usage","importKey","alg","ext","key_ops","kty","encryptAESGEM","importedKey","iv","encrypt","decryptAESGEM","decrypt","decrypted","decodedData","TextDecoder","decode","alert","exportToBackend","json","encoded","TextEncoder","encode","encrypted","exportedKey","fetch","method","response","url","href","urlString","prompt","importFromBackend","privateKey","ok","arrayBuffer","buffer","string","exportCanvas","tempSvg","loadScene","replaceState","commitToHistory","Portal","app","socket","socketInitialized","roomID","roomKey","on","emit","restoreUserName","_socketID","broadcastScene","INIT","clients","setCollaborators","close","volatile","isOpen","SHAPES","icon","viewBox","className","d","strokeLinecap","shapesShortcutKeys","flat","clearAppStatePropertiesForHistory","SceneHistory","elementCache","recording","stateHistory","redoStack","lastEntry","generateEntry","dehydrateHistoryEntry","lastCommittedPoint","dehydratedExcalidrawElement","versions","dehydratedHistoryEntry","hydrateHistoryEntry","clear","nextEntry","newEntryDehydrated","newEntry","shouldCreateEntry","clearRedoStack","entryToRestore","pop","currentEntry","state","pushEntry","Popover","children","onCloseRequest","fitInViewport","popoverRef","useRef","useLayoutEffect","getBoundingClientRect","useEffect","contains","unstable_batchedUpdates","addEventListener","removeEventListener","ref","ContextMenu","onContextMenu","preventDefault","option","onClick","ContextMenuOption","action","getContextMenuNode","div","handleClose","unmountComponentAtNode","params","of","render","ActionManager","updater","getAppState","getElementsIncludingDeleted","actions","renderAction","PanelComponent","updateData","formState","perform","registerAction","sort","keyPriority","keyTest","actionFilter","contextMenuOrder","contextItemLabel","ToolButton","React","forwardRef","props","innerRef","useImperativeHandle","sizeCn","hidden","selected","visible","title","aria-label","aria-hidden","showAriaLabel","aria-keyshortcuts","data-testid","onChange","checked","keyBindingLabel","defaultProps","ACTIVE_ELEMENT_COLOR","createIcon","mirror","focusable","role","save","saveAs","load","trash","palette","exportFile","zoomIn","zoomOut","done","menu","undo","redo","resetZoom","bringForward","sendBackward","bringToFront","sendToBack","strokeLinejoin","users","start","stop","back","marginLeft","clone","shield","register","concat","handleGroupEditingState","siblingElements","actionDeleteSelected","deleteSelectedElements","swap","indexA","indexB","moveOneLeft","indicesToMove","isSorted","moveOneRight","reversedIndicesToMove","moveAllLeft","leftMostElements","reverse","moveAllRight","rightMostElements","moveElements","func","_elements","selectedIndices","deletedIndicesCache","len","getElementIndices","ButtonSelect","code","groupIdMap","isValidColor","color","Option","keyBindings","Picker","onClose","showInput","firstItem","activeItem","gallery","colorInput","focus","aria-modal","onKeyDown","activeElement","nextIndex","toLowerCase","nativeEvent","stopImmediatePropagation","_color","currentTarget","onFocus","ColorInput","useState","innerValue","setInnerValue","inputRef","changeColor","useCallback","inputValue","getColor","spellCheck","onBlur","ColorPicker","isActive","setActive","pickerButton","Suspense","fallback","changedColor","changeProperty","getFormValue","defaultValue","attributes","getCommonAttributeOfSelectedElements","step","onWheel","stopPropagation","createContext","useIsMobile","useContext","_","confirm","KEY_CODES","actionFinalize","commonBounds","currentZoom","newZoom","zoomX","zoomY","calculateZoom","newElements","blur","multiPointElement","linePoints","ProjectName","handleFocus","handleBlur","handleKeyDown","isComposing","makeEditable","editable","contentEditable","suppressContentEditableWarning","data-type","Component","copiedStyles","catch","loadedElements","loadedAppState","then","message","ICON","pastedElement","xmlns","HelpIcon","Avatar","requestFullscreen","exitFullscreen","selectedGroupId","elementIdsInGroup","updatedElements","lastElementInGroup","lastGroupElementIndex","lastIndexOf","elementsAfterGroup","elementsBeforeGroup","updatedElement","updatedElementsInOrder","nextGroupIds","removeFromSelectedGroups","getCenter","collaborator","shortName","names","substring","firstName","lastName","getClientInitials","pointer","pointers","allCoords","coords","getDistance","array","item","writeData","prevElements","prevElementMap","nextElementMap","nextElement","prevElement","syncHistory","testUndo","shift","Island","gap","align","justifyContent","alignItems","justifyItems","FixedSideContainer","UserList","mobile","compClassName","ICONS","CHECKED","UNCHECKED","LockIcon","Modal","modalRoot","useBodyRoot","createPortal","aria-labelledby","labelledBy","tabIndex","maxWidth","maxHeight","overflowY","Dialog","islandRef","focusableElements","queryFocusableElements","currentIndex","findIndex","querySelectorAll","scales","defaultScale","ExportModal","actionManager","onExportToPng","onExportToSvg","onExportToClipboard","onExportToBackend","someElementIsSelected","setScale","exportSelected","setExportSelected","previewRef","exportedElements","previewNode","ExportDialog","modalIsShown","setModalIsShown","triggerButton","LanguageList","i18n","floating","Fragment","HintViewer","hint","multiMode","targetElement","getHints","SelectedShapeActions","targetElements","getTargetElement","isEditing","isMobile","ShapesSwitcher","setAppState","ZoomActions","marginInlineStart","Section","heading","header","RoomModal","activeRoomLink","onUsernameChange","onRoomCreate","onRoomDestroy","onPressingEnter","roomLinkInput","readOnly","onPointerDown","htmlFor","onKeyPress","RoomDialog","collaboratorCount","setActiveRoomLink","LoadingMessage","MobileMenu","exportButton","onLockToggle","marginBottom","marginRight","client","ErrorDialog","Columns","flexDirection","flexWrap","Column","ShortcutIsland","caption","Shortcut","borderTop","flex","minWidth","shortcuts","isOr","ShortcutKey","wordBreak","borderRadius","minHeight","boxSizing","Footer","marginTop","paddingTop","rel","ShortcutsDialog","GitHubCorner","memo","transformOrigin","Tooltip","toggleZenMode","renderExportDialog","createExporter","shouldRenderSelectedShapeActions","zIndex","renderFixedSideContainer","getNecessaryObj","prevAppState","withBatchedUpdates","didTapTwice","tappedTwiceTimer","isHoldingSpace","isPanning","isDraggingScrollBar","currentScrollBars","lastPointerUp","gesture","lastCenter","initialDistance","initialScale","App","portal","lastBroadcastedOrReceivedSceneVersion","broadcastedElementVersions","removeSceneCallback","unmounted","syncActionResult","res","replaceAllElements","setCurrentState","saveDebounced","onUnload","destroySocketClient","disableEvent","onFontLoaded","onSceneUpdated","initializeScene","searchParams","URLSearchParams","search","jsonMatch","isCollaborationScene","scene","initializeSocketClient","showLoadingState","onResize","beforeUnload","getElements","returnValue","queueBroadcastAllElements","throttle","UPDATE","onCut","copyAll","executeAction","onCopy","copyToClipboardAsPng","copyToClipboardAsSvg","onTapStart","resetTapTwice","touches","handleCanvasDoubleClick","onTapEnd","pasteFromClipboard","elementUnderCursor","elementFromPoint","addElementsFromPaste","addTextFromPaste","selectShapeTool","elementsCenterX","elementsCenterY","obj","removePointer","pointerId","openPortal","pushState","closePortal","toggleLock","prevState","toggleGridMode","roomMatch","initialize","initializationTimer","updateScene","decryptedData","remoteElements","payload","localElementMap","socketIOClient","default","open","encryptedData","socketID","pointerCoords","button","user","off","broadcastMouseLocation","_broadcastSocketData","sceneType","syncAll","syncableElements","syncableElement","updateCurrentCursorPosition","HTMLSelectElement","findShapeByKey","update","selectedElement","startTextEditing","ctrlKey","metaKey","onKeyUp","onGestureStart","onGestureChange","onGestureEnd","setElements","centerIfPossible","elementAtPosition","textX","textY","isExistingTextElement","centerElementX","centerElementY","snappedToCenterPosition","getTextWysiwygSnappedToCenterPosition","elementCenterX","elementCenterY","wysiwygX","wysiwygY","handleTextWysiwyg","isExistingElement","getSelectedGroupIdForElement","handleCanvasPointerMove","savePointer","center","scaleFactor","resetShouldCacheIgnoreZoomDebounced","isOverScrollBar","handlePointerMove","buttons","elementWithResizeHandler","handleCanvasPointerDown","persist","nextPastePrevented","isLinux","onPointerMove","preventNextPaste","PASTE","POINTER_UP","enableNextPaste","teardown","POINTER_MOVE","BLUR","passive","onPointerUp","originGridX","originGridY","setResizeHandle","nextResizeHandle","resizeOffsetXY","isResizingElements","draggingOccurred","dragOffsetXY","hitElementWasAddedToSelection","getResizeOffsetXY","getResizeArrowDirection","handlePointerDown","gridX","gridY","selectedElementWasDuplicated","getDragOffsetXY","resizeX","resizeY","normalizeResizeHandle","resizeElements","handlePointDragging","dragX","dragY","dragSelectedElements","elementsToAppend","duplicatedElement","originDragX","originDragY","simplify","elementsWithinSelection","selectionX1","selectionY1","selectionX2","selectionY2","getElementsWithinSelection","childEvent","handlePointerUp","_prevState","handleCanvasRef","WHEEL","handleWheel","TOUCH_START","TOUCH_END","handleCanvasOnDrop","file","dataTransfer","files","endsWith","handleCanvasContextMenu","getContextMenuItems","delta","isNaN","registerAll","undoOnce","redoOnce","createRedoAction","canvasDOMWidth","canvasDOMHeight","canvasScale","canvasWidth","canvasHeight","saveUsernameToLocalStorage","onDoubleClick","onPointerCancel","onDrop","process","bind","defineProperties","configurable","addCallback","addEventListeners","removeEventListeners","COPY","CUT","KEYDOWN","MOUSE_MOVE","KEYUP","RESIZE","UNLOAD","DRAG_OVER","DROP","GESTURE_START","GESTURE_CHANGE","GESTURE_END","BEFORE_UNLOAD","fonts","pointerViewportCoords","pointerUsernames","record","sockets","restoreUsernameFromLocalStorage","resetSelection","deleteElement","_element","updateElement","initText","onSubmit","onCancel","transform","outline","backfaceVisibility","onpaste","rangeCount","deleteFromDocument","getRangeAt","insertNode","setStart","childNodes","setEnd","oninput","onkeydown","handleSubmit","stopEvent","cleanup","isDestroyed","onblur","rebindBlur","unbindUpdate","closest","textWysiwyg","elementClickedInside","getElementContainingPosition","Preview","snapshot","ctx","putImageData","imageData","Claymate","snapshots","setSnapshots","getImageData","createSnapshot","gif","GIF","addFrame","delay","disabled","hostname","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bc191a6.chunk.js","sourcesContent":["export const DRAGGING_THRESHOLD = 10; // 10px\nexport const LINE_CONFIRM_THRESHOLD = 10; // 10px\nexport const ELEMENT_SHIFT_TRANSLATE_AMOUNT = 5;\nexport const ELEMENT_TRANSLATE_AMOUNT = 1;\nexport const TEXT_TO_CENTER_SNAP_THRESHOLD = 30;\nexport const SHIFT_LOCKING_ANGLE = Math.PI / 12;\nexport const CURSOR_TYPE = {\n  TEXT: \"text\",\n  CROSSHAIR: \"crosshair\",\n  GRABBING: \"grabbing\",\n  POINTER: \"pointer\",\n};\nexport const POINTER_BUTTON = {\n  MAIN: 0,\n  WHEEL: 1,\n  SECONDARY: 2,\n  TOUCH: -1,\n};\n\nexport enum SCENE {\n  INIT = \"SCENE_INIT\",\n  UPDATE = \"SCENE_UPDATE\",\n}\n\nexport enum EVENT {\n  COPY = \"copy\",\n  PASTE = \"paste\",\n  CUT = \"cut\",\n  KEYDOWN = \"keydown\",\n  KEYUP = \"keyup\",\n  MOUSE_MOVE = \"mousemove\",\n  RESIZE = \"resize\",\n  UNLOAD = \"unload\",\n  BLUR = \"blur\",\n  DRAG_OVER = \"dragover\",\n  DROP = \"drop\",\n  GESTURE_END = \"gestureend\",\n  BEFORE_UNLOAD = \"beforeunload\",\n  GESTURE_START = \"gesturestart\",\n  GESTURE_CHANGE = \"gesturechange\",\n  POINTER_MOVE = \"pointermove\",\n  POINTER_UP = \"pointerup\",\n  STATE_CHANGE = \"statechange\",\n  WHEEL = \"wheel\",\n  TOUCH_START = \"touchstart\",\n  TOUCH_END = \"touchend\",\n}\n\nexport const ENV = {\n  TEST: \"test\",\n  DEVELOPMENT: \"development\",\n};\n\nexport const BROADCAST = {\n  SERVER_VOLATILE: \"server-volatile-broadcast\",\n  SERVER: \"server-broadcast\",\n};\n\nexport const CLASSES = {\n  SHAPE_ACTIONS_MENU: \"App-menu__left\",\n};\n\n// 1-based in case we ever do `if(element.fontFamily)`\nexport const FONT_FAMILY = {\n  1: \"Virgil\",\n  2: \"Helvetica\",\n  3: \"Cascadia\",\n} as const;\n\nexport const CANVAS_ONLY_ACTIONS = [\"selectAll\"];\n\nexport const GRID_SIZE = 20; // TODO make it configurable?\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n} from \"./types\";\n\nexport const isTextElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElement => {\n  return element != null && element.type === \"text\";\n};\n\nexport const isLinearElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return (\n    element != null &&\n    (element.type === \"arrow\" ||\n      element.type === \"line\" ||\n      element.type === \"draw\")\n  );\n};\n\nexport const isExcalidrawElement = (element: any): boolean => {\n  return (\n    element?.type === \"text\" ||\n    element?.type === \"diamond\" ||\n    element?.type === \"rectangle\" ||\n    element?.type === \"ellipse\" ||\n    element?.type === \"arrow\" ||\n    element?.type === \"draw\" ||\n    element?.type === \"line\"\n  );\n};\n","import { Point } from \"./types\";\nimport { LINE_CONFIRM_THRESHOLD } from \"./constants\";\nimport { ExcalidrawLinearElement } from \"./element/types\";\n\n// https://stackoverflow.com/a/6853926/232122\nexport const distanceBetweenPointAndSegment = (\n  x: number,\n  y: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n) => {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const lenSquare = C * C + D * D;\n  let param = -1;\n  if (lenSquare !== 0) {\n    // in case of 0 length line\n    param = dot / lenSquare;\n  }\n\n  let xx, yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  const dx = x - xx;\n  const dy = y - yy;\n  return Math.hypot(dx, dy);\n};\n\nexport const rotate = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  angle: number,\n): [number, number] =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const adjustXYWithRotation = (\n  side: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  x: number,\n  y: number,\n  angle: number,\n  deltaX1: number,\n  deltaY1: number,\n  deltaX2: number,\n  deltaY2: number,\n  isResizeFromCenter: boolean,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  if (side === \"e\" || side === \"ne\" || side === \"se\") {\n    if (isResizeFromCenter) {\n      x += deltaX1 + deltaX2;\n    } else {\n      x += deltaX1 * (1 + cos);\n      y += deltaX1 * sin;\n      x += deltaX2 * (1 - cos);\n      y += deltaX2 * -sin;\n    }\n  }\n  if (side === \"s\" || side === \"sw\" || side === \"se\") {\n    if (isResizeFromCenter) {\n      y += deltaY1 + deltaY2;\n    } else {\n      x += deltaY1 * -sin;\n      y += deltaY1 * (1 + cos);\n      x += deltaY2 * sin;\n      y += deltaY2 * (1 - cos);\n    }\n  }\n  if (side === \"w\" || side === \"nw\" || side === \"sw\") {\n    if (isResizeFromCenter) {\n      x += deltaX1 + deltaX2;\n    } else {\n      x += deltaX1 * (1 - cos);\n      y += deltaX1 * -sin;\n      x += deltaX2 * (1 + cos);\n      y += deltaX2 * sin;\n    }\n  }\n  if (side === \"n\" || side === \"nw\" || side === \"ne\") {\n    if (isResizeFromCenter) {\n      y += deltaY1 + deltaY2;\n    } else {\n      x += deltaY1 * sin;\n      y += deltaY1 * (1 - cos);\n      x += deltaY2 * -sin;\n      y += deltaY2 * (1 + cos);\n    }\n  }\n  return [x, y];\n};\n\nexport const getFlipAdjustment = (\n  side: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  nextWidth: number,\n  nextHeight: number,\n  nextX1: number,\n  nextY1: number,\n  nextX2: number,\n  nextY2: number,\n  finalX1: number,\n  finalY1: number,\n  finalX2: number,\n  finalY2: number,\n  needsRotation: boolean,\n  angle: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  let flipDiffX = 0;\n  let flipDiffY = 0;\n  if (nextWidth < 0) {\n    if (side === \"e\" || side === \"ne\" || side === \"se\") {\n      if (needsRotation) {\n        flipDiffX += (finalX2 - nextX1) * cos;\n        flipDiffY += (finalX2 - nextX1) * sin;\n      } else {\n        flipDiffX += finalX2 - nextX1;\n      }\n    }\n    if (side === \"w\" || side === \"nw\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffX += (finalX1 - nextX2) * cos;\n        flipDiffY += (finalX1 - nextX2) * sin;\n      } else {\n        flipDiffX += finalX1 - nextX2;\n      }\n    }\n  }\n  if (nextHeight < 0) {\n    if (side === \"s\" || side === \"se\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY2 - nextY1) * cos;\n        flipDiffX += (finalY2 - nextY1) * -sin;\n      } else {\n        flipDiffY += finalY2 - nextY1;\n      }\n    }\n    if (side === \"n\" || side === \"ne\" || side === \"nw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY1 - nextY2) * cos;\n        flipDiffX += (finalY1 - nextY2) * -sin;\n      } else {\n        flipDiffY += finalY1 - nextY2;\n      }\n    }\n  }\n  return [flipDiffX, flipDiffY];\n};\n\nexport const getPointOnAPath = (point: Point, path: Point[]) => {\n  const [px, py] = point;\n  const [start, ...other] = path;\n  let [lastX, lastY] = start;\n  let kLine: number = 0;\n  let idx: number = 0;\n\n  // if any item in the array is true, it means that a point is\n  // on some segment of a line based path\n  const retVal = other.some(([x2, y2], i) => {\n    // we always take a line when dealing with line segments\n    const x1 = lastX;\n    const y1 = lastY;\n\n    lastX = x2;\n    lastY = y2;\n\n    // if a point is not within the domain of the line segment\n    // it is not on the line segment\n    if (px < x1 || px > x2) {\n      return false;\n    }\n\n    // check if all points lie on the same line\n    // y1 = kx1 + b, y2 = kx2 + b\n    // y2 - y1 = k(x2 - x2) -> k = (y2 - y1) / (x2 - x1)\n\n    // coefficient for the line (p0, p1)\n    const kL = (y2 - y1) / (x2 - x1);\n\n    // coefficient for the line segment (p0, point)\n    const kP1 = (py - y1) / (px - x1);\n\n    // coefficient for the line segment (point, p1)\n    const kP2 = (py - y2) / (px - x2);\n\n    // because we are basing both lines from the same starting point\n    // the only option for collinearity is having same coefficients\n\n    // using it for floating point comparisons\n    const epsilon = 0.3;\n\n    // if coefficient is more than an arbitrary epsilon,\n    // these lines are nor collinear\n    if (Math.abs(kP1 - kL) > epsilon && Math.abs(kP2 - kL) > epsilon) {\n      return false;\n    }\n\n    // store the coefficient because we are goint to need it\n    kLine = kL;\n    idx = i;\n\n    return true;\n  });\n\n  // Return a coordinate that is always on the line segment\n  if (retVal === true) {\n    return { x: point[0], y: kLine * point[0], segment: idx };\n  }\n\n  return null;\n};\n\nexport const distance2d = (x1: number, y1: number, x2: number, y2: number) => {\n  const xd = x2 - x1;\n  const yd = y2 - y1;\n  return Math.hypot(xd, yd);\n};\n\n// Checks if the first and last point are close enough\n// to be considered a loop\nexport const isPathALoop = (\n  points: ExcalidrawLinearElement[\"points\"],\n): boolean => {\n  if (points.length >= 3) {\n    const [firstPoint, lastPoint] = [points[0], points[points.length - 1]];\n    return (\n      distance2d(firstPoint[0], firstPoint[1], lastPoint[0], lastPoint[1]) <=\n      LINE_CONFIRM_THRESHOLD\n    );\n  }\n  return false;\n};\n\n// Draw a line from the point to the right till infiinty\n// Check how many lines of the polygon does this infinite line intersects with\n// If the number of intersections is odd, point is in the polygon\nexport const isPointInPolygon = (\n  points: Point[],\n  x: number,\n  y: number,\n): boolean => {\n  const vertices = points.length;\n\n  // There must be at least 3 vertices in polygon\n  if (vertices < 3) {\n    return false;\n  }\n  const extreme: Point = [Number.MAX_SAFE_INTEGER, y];\n  const p: Point = [x, y];\n  let count = 0;\n  for (let i = 0; i < vertices; i++) {\n    const current = points[i];\n    const next = points[(i + 1) % vertices];\n    if (doIntersect(current, next, p, extreme)) {\n      if (orientation(current, p, next) === 0) {\n        return onSegment(current, p, next);\n      }\n      count++;\n    }\n  }\n  // true if count is off\n  return count % 2 === 1;\n};\n\n// Check if q lies on the line segment pr\nconst onSegment = (p: Point, q: Point, r: Point) => {\n  return (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  );\n};\n\n// For the ordered points p, q, r, return\n// 0 if p, q, r are collinear\n// 1 if Clockwise\n// 2 if counterclickwise\nconst orientation = (p: Point, q: Point, r: Point) => {\n  const val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n  if (val === 0) {\n    return 0;\n  }\n  return val > 0 ? 1 : 2;\n};\n\n// Check is p1q1 intersects with p2q2\nconst doIntersect = (p1: Point, q1: Point, p2: Point, q2: Point) => {\n  const o1 = orientation(p1, q1, p2);\n  const o2 = orientation(p1, q1, q2);\n  const o3 = orientation(p2, q2, p1);\n  const o4 = orientation(p2, q2, q1);\n\n  if (o1 !== o2 && o3 !== o4) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n  if (o1 === 0 && onSegment(p1, p2, q1)) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and q2 lies on segment p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) {\n    return true;\n  }\n\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n  if (o3 === 0 && onSegment(p2, p1, q2)) {\n    return true;\n  }\n\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const getGridPoint = (\n  x: number,\n  y: number,\n  gridSize: number | null,\n): [number, number] => {\n  if (gridSize) {\n    return [\n      Math.round(x / gridSize) * gridSize,\n      Math.round(y / gridSize) * gridSize,\n    ];\n  }\n  return [x, y];\n};\n","import { Point } from \"./types\";\n\nexport const getSizeFromPoints = (points: readonly Point[]) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\nexport const rescalePoints = (\n  dimension: 0 | 1,\n  nextDimensionSize: number,\n  prevPoints: readonly Point[],\n): Point[] => {\n  const prevDimValues = prevPoints.map((point) => point[dimension]);\n  const prevMaxDimension = Math.max(...prevDimValues);\n  const prevMinDimension = Math.min(...prevDimValues);\n  const prevDimensionSize = prevMaxDimension - prevMinDimension;\n\n  const dimensionScaleFactor =\n    prevDimensionSize === 0 ? 1 : nextDimensionSize / prevDimensionSize;\n\n  let nextMinDimension = Infinity;\n\n  const scaledPoints = prevPoints.map(\n    (prevPoint) =>\n      prevPoint.map((value, currentDimension) => {\n        if (currentDimension !== dimension) {\n          return value;\n        }\n        const scaledValue = value * dimensionScaleFactor;\n        nextMinDimension = Math.min(scaledValue, nextMinDimension);\n        return scaledValue;\n      }) as [number, number],\n  );\n\n  if (scaledPoints.length === 2) {\n    // we don't tranlate two-point lines\n    return scaledPoints;\n  }\n\n  const translation = prevMinDimension - nextMinDimension;\n\n  const nextPoints = scaledPoints.map(\n    (scaledPoint) =>\n      scaledPoint.map((value, currentDimension) => {\n        return currentDimension === dimension ? value + translation : value;\n      }) as [number, number],\n  );\n\n  return nextPoints;\n};\n","import { ExcalidrawElement, ExcalidrawLinearElement } from \"./types\";\nimport { distance2d, rotate } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Drawable, Op } from \"roughjs/bin/core\";\nimport { Point } from \"../types\";\nimport {\n  getShapeForElement,\n  generateRoughOptions,\n} from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { rescalePoints } from \"../points\";\n\n// If the element is created from right to left, the width is going to be negative\n// This set of functions retrieves the absolute position of the 4 points.\nexport const getElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  if (isLinearElement(element)) {\n    return getLinearElementAbsoluteCoords(element);\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n  ];\n};\n\nexport const getDiamondPoints = (element: ExcalidrawElement) => {\n  // Here we add +1 to avoid these numbers to be 0\n  // otherwise rough.js will throw an error complaining about it\n  const topX = Math.floor(element.width / 2) + 1;\n  const topY = 0;\n  const rightX = element.width;\n  const rightY = Math.floor(element.height / 2) + 1;\n  const bottomX = topX;\n  const bottomY = element.height;\n  const leftX = topY;\n  const leftY = rightY;\n\n  return [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY];\n};\n\nexport const getCurvePathOps = (shape: Drawable): Op[] => {\n  for (const set of shape.sets) {\n    if (set.type === \"path\") {\n      return set.ops;\n    }\n  }\n  return shape.sets[0].ops;\n};\n\nconst getMinMaxXYFromCurvePathOps = (\n  ops: Op[],\n  transformXY?: (x: number, y: number) => [number, number],\n): [number, number, number, number] => {\n  let currentP: Point = [0, 0];\n  const { minX, minY, maxX, maxY } = ops.reduce(\n    (limits, { op, data }) => {\n      // There are only four operation types:\n      // move, bcurveTo, lineTo, and curveTo\n      if (op === \"move\") {\n        // change starting point\n        currentP = (data as unknown) as Point;\n        // move operation does not draw anything; so, it always\n        // returns false\n      } else if (op === \"bcurveTo\") {\n        // create points from bezier curve\n        // bezier curve stores data as a flattened array of three positions\n        // [x1, y1, x2, y2, x3, y3]\n        const p1 = [data[0], data[1]] as Point;\n        const p2 = [data[2], data[3]] as Point;\n        const p3 = [data[4], data[5]] as Point;\n\n        const p0 = currentP;\n        currentP = p3;\n\n        const equation = (t: number, idx: number) =>\n          Math.pow(1 - t, 3) * p3[idx] +\n          3 * t * Math.pow(1 - t, 2) * p2[idx] +\n          3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n          p0[idx] * Math.pow(t, 3);\n\n        let t = 0;\n        while (t <= 1.0) {\n          let x = equation(t, 0);\n          let y = equation(t, 1);\n          if (transformXY) {\n            [x, y] = transformXY(x, y);\n          }\n\n          limits.minY = Math.min(limits.minY, y);\n          limits.minX = Math.min(limits.minX, x);\n\n          limits.maxX = Math.max(limits.maxX, x);\n          limits.maxY = Math.max(limits.maxY, y);\n\n          t += 0.1;\n        }\n      } else if (op === \"lineTo\") {\n        // TODO: Implement this\n      } else if (op === \"qcurveTo\") {\n        // TODO: Implement this\n      }\n      return limits;\n    },\n    { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n  );\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getLinearElementAbsoluteCoords = (\n  element: ExcalidrawLinearElement,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getArrowPoints = (\n  element: ExcalidrawLinearElement,\n  shape: Drawable[],\n) => {\n  const ops = getCurvePathOps(shape[0]);\n\n  const data = ops[ops.length - 1].data;\n  const p3 = [data[4], data[5]] as Point;\n  const p2 = [data[2], data[3]] as Point;\n  const p1 = [data[0], data[1]] as Point;\n\n  // we need to find p0 of the bezier curve\n  // it is typically the last point of the previous\n  // curve; it can also be the position of moveTo operation\n  const prevOp = ops[ops.length - 2];\n  let p0: Point = [0, 0];\n  if (prevOp.op === \"move\") {\n    p0 = (prevOp.data as unknown) as Point;\n  } else if (prevOp.op === \"bcurveTo\") {\n    p0 = [prevOp.data[4], prevOp.data[5]];\n  }\n\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // we know the last point of the arrow\n  const [x2, y2] = p3;\n\n  // by using cubic bezier equation (B(t)) and the given parameters,\n  // we calculate a point that is closer to the last point\n  // The value 0.3 is chosen arbitrarily and it works best for all\n  // the tested cases\n  const [x1, y1] = [equation(0.3, 0), equation(0.3, 1)];\n\n  // find the normalized direction vector based on the\n  // previously calculated points\n  const distance = Math.hypot(x2 - x1, y2 - y1);\n  const nx = (x2 - x1) / distance;\n  const ny = (y2 - y1) / distance;\n\n  const size = 30; // pixels\n  const arrowLength = element.points.reduce((total, [cx, cy], idx, points) => {\n    const [px, py] = idx > 0 ? points[idx - 1] : [0, 0];\n    return total + Math.hypot(cx - px, cy - py);\n  }, 0);\n\n  // Scale down the arrow until we hit a certain size so that it doesn't look weird\n  // This value is selected by minizing a minmum size with the whole length of the arrow\n  // intead of last segment of the arrow\n  const minSize = Math.min(size, arrowLength / 2);\n  const xs = x2 - nx * minSize;\n  const ys = y2 - ny * minSize;\n\n  const angle = 20; // degrees\n  const [x3, y3] = rotate(xs, ys, x2, y2, (-angle * Math.PI) / 180);\n  const [x4, y4] = rotate(xs, ys, x2, y2, (angle * Math.PI) / 180);\n\n  return [x2, y2, x3, y3, x4, y4];\n};\n\nconst getLinearElementRotatedBounds = (\n  element: ExcalidrawLinearElement,\n  cx: number,\n  cy: number,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        [x, y] = rotate(element.x + x, element.y + y, cx, cy, element.angle);\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [minX, minY, maxX, maxY];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const transformXY = (x: number, y: number) =>\n    rotate(element.x + x, element.y + y, cx, cy, element.angle);\n  return getMinMaxXYFromCurvePathOps(ops, transformXY);\n};\n\nexport const getElementBounds = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  if (isLinearElement(element)) {\n    return getLinearElementRotatedBounds(element, cx, cy);\n  }\n  if (element.type === \"diamond\") {\n    const [x11, y11] = rotate(cx, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(cx, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x1, cy, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, cy, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    return [minX, minY, maxX, maxY];\n  }\n  if (element.type === \"ellipse\") {\n    const w = (x2 - x1) / 2;\n    const h = (y2 - y1) / 2;\n    const cos = Math.cos(element.angle);\n    const sin = Math.sin(element.angle);\n    const ww = Math.hypot(w * cos, h * sin);\n    const hh = Math.hypot(h * cos, w * sin);\n    return [cx - ww, cy - hh, cx + ww, cy + hh];\n  }\n  const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n  const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n  const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n  const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n  const minX = Math.min(x11, x12, x22, x21);\n  const minY = Math.min(y11, y12, y22, y21);\n  const maxX = Math.max(x11, x12, x22, x21);\n  const maxY = Math.max(y11, y12, y22, y21);\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getCommonBounds = (\n  elements: readonly ExcalidrawElement[],\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getResizedElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n  nextWidth: number,\n  nextHeight: number,\n): [number, number, number, number] => {\n  if (!isLinearElement(element)) {\n    return [\n      element.x,\n      element.y,\n      element.x + nextWidth,\n      element.y + nextHeight,\n    ];\n  }\n\n  const points = rescalePoints(\n    0,\n    nextWidth,\n    rescalePoints(1, nextHeight, element.points),\n  );\n\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getElementPointsCoords = (\n  element: ExcalidrawLinearElement,\n  points: readonly (readonly [number, number])[],\n): [number, number, number, number] => {\n  // This might be computationally heavey\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getClosestElementBounds = (\n  elements: readonly ExcalidrawElement[],\n  from: { x: number; y: number },\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minDistance = Infinity;\n  let closestElement = elements[0];\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    const distance = distance2d((x1 + x2) / 2, (y1 + y2) / 2, from.x, from.y);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestElement = element;\n    }\n  });\n\n  return getElementBounds(closestElement);\n};\n","import LanguageDetector from \"i18next-browser-languagedetector\";\n\nexport const languages = [\n  { lng: \"en\", label: \"English\", data: require(\"./locales/en.json\") },\n  { lng: \"bg-BG\", label: \"Български\", data: require(\"./locales/bg-BG.json\") },\n  { lng: \"nb-No\", label: \"Bokmål\", data: require(\"./locales/nb-NO.json\") },\n  { lng: \"de-DE\", label: \"Deutsch\", data: require(\"./locales/de-DE.json\") },\n  { lng: \"es-ES\", label: \"Español\", data: require(\"./locales/es-ES.json\") },\n  { lng: \"ca-ES\", label: \"Catalan\", data: require(\"./locales/ca-ES.json\") },\n  { lng: \"el-GR\", label: \"Ελληνικά\", data: require(\"./locales/el-GR.json\") },\n  { lng: \"fr-FR\", label: \"Français\", data: require(\"./locales/fr-FR.json\") },\n  {\n    lng: \"id-ID\",\n    label: \"Bahasa Indonesia\",\n    data: require(\"./locales/id-ID.json\"),\n  },\n  { lng: \"it-IT\", label: \"Italiano\", data: require(\"./locales/it-IT.json\") },\n  { lng: \"hu-HU\", label: \"Magyar\", data: require(\"./locales/hu-HU.json\") },\n  { lng: \"nl-NL\", label: \"Nederlands\", data: require(\"./locales/nl-NL.json\") },\n  { lng: \"pl-PL\", label: \"Polski\", data: require(\"./locales/pl-PL.json\") },\n  { lng: \"pt-PT\", label: \"Português\", data: require(\"./locales/pt-PT.json\") },\n  { lng: \"ru-RU\", label: \"Русский\", data: require(\"./locales/ru-RU.json\") },\n  { lng: \"uk-UA\", label: \"Українська\", data: require(\"./locales/uk-UA.json\") },\n  { lng: \"fi-FI\", label: \"Suomi\", data: require(\"./locales/fi-FI.json\") },\n  { lng: \"tr-TR\", label: \"Türkçe\", data: require(\"./locales/tr-TR.json\") },\n  { lng: \"ja-JP\", label: \"日本語\", data: require(\"./locales/ja-JP.json\") },\n  { lng: \"ko-KR\", label: \"한국어\", data: require(\"./locales/ko-KR.json\") },\n  { lng: \"zh-TW\", label: \"繁體中文\", data: require(\"./locales/zh-TW.json\") },\n  { lng: \"zh-CN\", label: \"简体中文\", data: require(\"./locales/zh-CN.json\") },\n  {\n    lng: \"ar-SA\",\n    label: \"العربية\",\n    data: require(\"./locales/ar-SA.json\"),\n    rtl: true,\n  },\n  {\n    lng: \"he-IL\",\n    label: \"עברית\",\n    data: require(\"./locales/he-IL.json\"),\n    rtl: true,\n  },\n];\n\nlet currentLanguage = languages[0];\nconst fallbackLanguage = languages[0];\n\nexport const setLanguage = (newLng: string | undefined) => {\n  currentLanguage =\n    languages.find((language) => language.lng === newLng) || fallbackLanguage;\n\n  document.documentElement.dir = currentLanguage.rtl ? \"rtl\" : \"ltr\";\n\n  languageDetector.cacheUserLanguage(currentLanguage.lng);\n};\n\nexport const getLanguage = () => currentLanguage;\n\nconst findPartsForData = (data: any, parts: string[]) => {\n  for (var i = 0; i < parts.length; ++i) {\n    const part = parts[i];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n};\n\nexport const t = (path: string, replacement?: { [key: string]: string }) => {\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLanguage.data, parts) ||\n    findPartsForData(fallbackLanguage.data, parts);\n  if (translation === undefined) {\n    throw new Error(`Can't find translation for ${path}`);\n  }\n\n  if (replacement) {\n    for (var key in replacement) {\n      translation = translation.replace(`{{${key}}}`, replacement[key]);\n    }\n  }\n  return translation;\n};\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.init({\n  languageUtils: {\n    formatLanguageCode: (lng: string) => lng,\n    isWhitelisted: () => true,\n  },\n  checkWhitelist: false,\n});\n\nsetLanguage(languageDetector.detect());\n","import { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\nimport { FlooredNumber } from \"../types\";\nimport { ScrollBars } from \"./types\";\nimport { getGlobalCSSVariable } from \"../utils\";\nimport { getLanguage } from \"../i18n\";\n\nexport const SCROLLBAR_MARGIN = 4;\nexport const SCROLLBAR_WIDTH = 6;\nexport const SCROLLBAR_COLOR = \"rgba(0,0,0,0.3)\";\n\nexport const getScrollBars = (\n  elements: readonly ExcalidrawElement[],\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n): ScrollBars => {\n  // This is the bounding box of all the elements\n  const [\n    elementsMinX,\n    elementsMinY,\n    elementsMaxX,\n    elementsMaxY,\n  ] = getCommonBounds(elements);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  const safeArea = {\n    top: parseInt(getGlobalCSSVariable(\"sat\")),\n    bottom: parseInt(getGlobalCSSVariable(\"sab\")),\n    left: parseInt(getGlobalCSSVariable(\"sal\")),\n    right: parseInt(getGlobalCSSVariable(\"sar\")),\n  };\n\n  const isRTL = getLanguage().rtl;\n\n  // The viewport is the rectangle currently visible for the user\n  const viewportMinX = -scrollX + viewportWidthDiff / 2 + safeArea.left;\n  const viewportMinY = -scrollY + viewportHeightDiff / 2 + safeArea.top;\n  const viewportMaxX = viewportMinX + viewportWidthWithZoom - safeArea.right;\n  const viewportMaxY = viewportMinY + viewportHeightWithZoom - safeArea.bottom;\n\n  // The scene is the bounding box of both the elements and viewport\n  const sceneMinX = Math.min(elementsMinX, viewportMinX);\n  const sceneMinY = Math.min(elementsMinY, viewportMinY);\n  const sceneMaxX = Math.max(elementsMaxX, viewportMaxX);\n  const sceneMaxY = Math.max(elementsMaxY, viewportMaxY);\n\n  // The scrollbar represents where the viewport is in relationship to the scene\n\n  return {\n    horizontal:\n      viewportMinX === sceneMinX && viewportMaxX === sceneMaxX\n        ? null\n        : {\n            x:\n              Math.max(safeArea.left, SCROLLBAR_MARGIN) +\n              ((viewportMinX - sceneMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth,\n            y:\n              viewportHeight -\n              SCROLLBAR_WIDTH -\n              Math.max(SCROLLBAR_MARGIN, safeArea.bottom),\n            width:\n              ((viewportMaxX - viewportMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.left + safeArea.right),\n            height: SCROLLBAR_WIDTH,\n          },\n    vertical:\n      viewportMinY === sceneMinY && viewportMaxY === sceneMaxY\n        ? null\n        : {\n            x: isRTL\n              ? Math.max(safeArea.left, SCROLLBAR_MARGIN)\n              : viewportWidth -\n                SCROLLBAR_WIDTH -\n                Math.max(safeArea.right, SCROLLBAR_MARGIN),\n            y:\n              ((viewportMinY - sceneMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight +\n              Math.max(safeArea.top, SCROLLBAR_MARGIN),\n            width: SCROLLBAR_WIDTH,\n            height:\n              ((viewportMaxY - viewportMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.top + safeArea.bottom),\n          },\n  };\n};\n\nexport const isOverScrollBars = (\n  scrollBars: ScrollBars,\n  x: number,\n  y: number,\n) => {\n  const [isOverHorizontalScrollBar, isOverVerticalScrollBar] = [\n    scrollBars.horizontal,\n    scrollBars.vertical,\n  ].map((scrollBar) => {\n    return (\n      scrollBar &&\n      scrollBar.x <= x &&\n      x <= scrollBar.x + scrollBar.width &&\n      scrollBar.y <= y &&\n      y <= scrollBar.y + scrollBar.height\n    );\n  });\n\n  return {\n    isOverHorizontalScrollBar,\n    isOverVerticalScrollBar,\n  };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getElementAbsoluteCoords, getElementBounds } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const getElementsWithinSelection = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  selection: NonDeletedExcalidrawElement,\n) => {\n  const [\n    selectionX1,\n    selectionY1,\n    selectionX2,\n    selectionY2,\n  ] = getElementAbsoluteCoords(selection);\n  return elements.filter((element) => {\n    const [elementX1, elementY1, elementX2, elementY2] = getElementBounds(\n      element,\n    );\n\n    return (\n      element.type !== \"selection\" &&\n      selectionX1 <= elementX1 &&\n      selectionY1 <= elementY1 &&\n      selectionX2 >= elementX2 &&\n      selectionY2 >= elementY2\n    );\n  });\n};\n\nexport const isSomeElementSelected = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n): boolean => {\n  return elements.some((element) => appState.selectedElementIds[element.id]);\n};\n\n/**\n * Returns common attribute (picked by `getAttribute` callback) of selected\n *  elements. If elements don't share the same value, returns `null`.\n */\nexport const getCommonAttributeOfSelectedElements = <T>(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n): T | null => {\n  const attributes = Array.from(\n    new Set(\n      getSelectedElements(elements, appState).map((element) =>\n        getAttribute(element),\n      ),\n    ),\n  );\n  return attributes.length === 1 ? attributes[0] : null;\n};\n\nexport const getSelectedElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  return elements.filter((element) => appState.selectedElementIds[element.id]);\n};\n\nexport const getTargetElement = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  return appState.editingElement\n    ? [appState.editingElement]\n    : getSelectedElements(elements, appState);\n};\n","import { AppState, FlooredNumber } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds, getClosestElementBounds } from \"../element\";\n\nimport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n} from \"../utils\";\n\nexport const normalizeScroll = (pos: number) =>\n  Math.floor(pos) as FlooredNumber;\n\nfunction isOutsideViewPort(\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n  cords: Array<number>,\n) {\n  const [x1, y1, x2, y2] = cords;\n  const { x: viewportX1, y: viewportY1 } = sceneCoordsToViewportCoords(\n    { sceneX: x1, sceneY: y1 },\n    appState,\n    canvas,\n    window.devicePixelRatio,\n  );\n  const { x: viewportX2, y: viewportY2 } = sceneCoordsToViewportCoords(\n    { sceneX: x2, sceneY: y2 },\n    appState,\n    canvas,\n    window.devicePixelRatio,\n  );\n  return (\n    viewportX2 - viewportX1 > window.innerWidth ||\n    viewportY2 - viewportY1 > window.innerHeight\n  );\n}\n\nexport const calculateScrollCenter = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n): { scrollX: FlooredNumber; scrollY: FlooredNumber } => {\n  if (!elements.length) {\n    return {\n      scrollX: normalizeScroll(0),\n      scrollY: normalizeScroll(0),\n    };\n  }\n  const scale = window.devicePixelRatio;\n  let [x1, y1, x2, y2] = getCommonBounds(elements);\n  if (isOutsideViewPort(appState, canvas, [x1, y1, x2, y2])) {\n    [x1, y1, x2, y2] = getClosestElementBounds(\n      elements,\n      viewportCoordsToSceneCoords(\n        { clientX: appState.scrollX, clientY: appState.scrollY },\n        appState,\n        canvas,\n        scale,\n      ),\n    );\n  }\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return {\n    scrollX: normalizeScroll(window.innerWidth / 2 - centerX),\n    scrollY: normalizeScroll(window.innerHeight / 2 - centerY),\n  };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getElementAbsoluteCoords, hitTest } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const hasBackground = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasStroke = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"arrow\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasText = (type: string) => type === \"text\";\n\nexport const getElementAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    if (hitTest(elements[i], appState, x, y, zoom)) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n\n  return hitElement;\n};\n\nexport const getElementContainingPosition = (\n  elements: readonly ExcalidrawElement[],\n  x: number,\n  y: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(elements[i]);\n    if (x1 < x && x < x2 && y1 < y && y < y2) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n  return hitElement;\n};\n","export const getZoomOrigin = (\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  if (canvas === null) {\n    return { x: 0, y: 0 };\n  }\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    return { x: 0, y: 0 };\n  }\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  return {\n    x: normalizedCanvasWidth / 2,\n    y: normalizedCanvasHeight / 2,\n  };\n};\n\nexport const getNormalizedZoom = (zoom: number): number => {\n  const normalizedZoom = parseFloat(zoom.toFixed(2));\n  const clampedZoom = Math.max(0.1, Math.min(normalizedZoom, 2));\n  return clampedZoom;\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"../element/types\";\nimport {\n  getNonDeletedElements,\n  isNonDeletedElement,\n  getElementMap,\n} from \"../element\";\n\nexport interface SceneStateCallback {\n  (): void;\n}\n\nexport interface SceneStateCallbackRemover {\n  (): void;\n}\n\nclass GlobalScene {\n  private callbacks: Set<SceneStateCallback> = new Set();\n\n  private nonDeletedElements: readonly NonDeletedExcalidrawElement[] = [];\n  private elements: readonly ExcalidrawElement[] = [];\n  private elementsMap: {\n    [id: string]: ExcalidrawElement;\n  } = {};\n\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n\n  getElements(): readonly NonDeletedExcalidrawElement[] {\n    return this.nonDeletedElements;\n  }\n\n  getElement(id: ExcalidrawElement[\"id\"]): ExcalidrawElement | null {\n    return this.elementsMap[id] || null;\n  }\n\n  getNonDeletedElement(\n    id: ExcalidrawElement[\"id\"],\n  ): NonDeleted<ExcalidrawElement> | null {\n    const element = this.getElement(id);\n    if (element && isNonDeletedElement(element)) {\n      return element;\n    }\n    return null;\n  }\n\n  replaceAllElements(nextElements: readonly ExcalidrawElement[]) {\n    this.elements = nextElements;\n    this.elementsMap = getElementMap(nextElements);\n    this.nonDeletedElements = getNonDeletedElements(this.elements);\n    this.informMutation();\n  }\n\n  informMutation() {\n    for (const callback of Array.from(this.callbacks)) {\n      callback();\n    }\n  }\n\n  addCallback(cb: SceneStateCallback): SceneStateCallbackRemover {\n    if (this.callbacks.has(cb)) {\n      throw new Error();\n    }\n\n    this.callbacks.add(cb);\n\n    return () => {\n      if (!this.callbacks.has(cb)) {\n        throw new Error();\n      }\n      this.callbacks.delete(cb);\n    };\n  }\n}\n\nexport const globalSceneState = new GlobalScene();\n","import { FlooredNumber } from \"./types\";\nimport { getZoomOrigin } from \"./scene\";\nimport { CURSOR_TYPE, FONT_FAMILY } from \"./constants\";\nimport { FontFamily, FontString } from \"./element/types\";\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nlet mockDateTime: string | null = null;\n\nexport const setDateTimeForTests = (dateTime: string) => {\n  mockDateTime = dateTime;\n};\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport const capitalizeString = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const isToolIcon = (\n  target: Element | EventTarget | null,\n): target is HTMLElement =>\n  target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n\nexport const isInputLike = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLInputElement ||\n  target instanceof HTMLTextAreaElement ||\n  target instanceof HTMLSelectElement;\n\nexport const isWritableElement = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLTextAreaElement ||\n  (target instanceof HTMLInputElement &&\n    (target.type === \"text\" || target.type === \"number\"));\n\nexport const getFontFamilyString = ({\n  fontFamily,\n}: {\n  fontFamily: FontFamily;\n}) => {\n  return FONT_FAMILY[fontFamily];\n};\n\n/** returns fontSize+fontFamily string for assignment to DOM elements */\nexport const getFontString = ({\n  fontSize,\n  fontFamily,\n}: {\n  fontSize: number;\n  fontFamily: FontFamily;\n}) => {\n  return `${fontSize}px ${getFontFamilyString({ fontFamily })}` as FontString;\n};\n\n// https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\nexport const measureText = (text: string, font: FontString) => {\n  const line = document.createElement(\"div\");\n  const body = document.body;\n  line.style.position = \"absolute\";\n  line.style.whiteSpace = \"pre\";\n  line.style.font = font;\n  body.appendChild(line);\n  // Now we can measure width and height of the letter\n  line.innerText = text;\n  const width = line.offsetWidth;\n  const height = line.offsetHeight;\n  // Now creating 1px sized item that will be aligned to baseline\n  // to calculate baseline shift\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  line.appendChild(span);\n  // Baseline is important for positioning text on canvas\n  const baseline = span.offsetTop + span.offsetHeight;\n  document.body.removeChild(line);\n\n  return { width, height, baseline };\n};\n\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) => {\n  let handle = 0;\n  let lastArgs: T;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => fn(...args), timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    fn(...lastArgs);\n  };\n  return ret;\n};\n\nexport const selectNode = (node: Element) => {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\n\nexport const distance = (x: number, y: number) => Math.abs(x - y);\n\nexport const resetCursor = () => {\n  document.documentElement.style.cursor = \"\";\n};\n\nexport const setCursorForShape = (shape: string) => {\n  if (shape === \"selection\") {\n    resetCursor();\n  } else {\n    document.documentElement.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n};\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  const isMac = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n  if (isMac) {\n    return `${shortcut\n      .replace(/\\bCtrlOrCmd\\b/i, \"Cmd\")\n      .replace(/\\bAlt\\b/i, \"Option\")\n      .replace(/\\bDel\\b/i, \"Delete\")\n      .replace(/\\b(Enter|Return)\\b/i, \"Enter\")}`;\n  }\n  return `${shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Ctrl\")}`;\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const clientXWithZoom = zoomOrigin.x + (clientX - zoomOrigin.x) / zoom;\n  const clientYWithZoom = zoomOrigin.y + (clientY - zoomOrigin.y) / zoom;\n\n  const x = clientXWithZoom - scrollX;\n  const y = clientYWithZoom - scrollY;\n\n  return { x, y };\n};\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const sceneXWithZoomAndScroll =\n    zoomOrigin.x - (zoomOrigin.x - sceneX - scrollX) * zoom;\n  const sceneYWithZoomAndScroll =\n    zoomOrigin.y - (zoomOrigin.y - sceneY - scrollY) * zoom;\n\n  const x = sceneXWithZoomAndScroll;\n  const y = sceneYWithZoomAndScroll;\n\n  return { x, y };\n};\n\nexport const getGlobalCSSVariable = (name: string) =>\n  getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\n\nconst RS_LTR_CHARS =\n  \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\n  \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\";\nconst RS_RTL_CHARS = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\n/**\n * Checks whether first directional character is RTL. Meaning whether it starts\n *  with RTL characters, or indeterminate (numbers etc.) characters followed by\n *  RTL.\n * See https://github.com/excalidraw/excalidraw/pull/1722#discussion_r436340171\n */\nexport const isRTL = (text: string) => {\n  return RE_RTL_CHECK.test(text);\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { isTextElement, isLinearElement } from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getArrowPoints,\n  getElementAbsoluteCoords,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  SVG_NS,\n  distance,\n  getFontString,\n  getFontFamilyString,\n  isRTL,\n} from \"../utils\";\nimport { isPathALoop } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\n\nconst CANVAS_PADDING = 20;\n\nconst DASHARRAY_DASHED = [12, 8];\nconst DASHARRAY_DOTTED = [3, 6];\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  canvasZoom: number;\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n}\n\nconst generateElementCanvas = (\n  element: NonDeletedExcalidrawElement,\n  zoom: number,\n): ExcalidrawElementWithCanvas => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element)) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n\n    canvasOffsetX =\n      element.x > x1\n        ? Math.floor(distance(element.x, x1)) * window.devicePixelRatio\n        : 0;\n    canvasOffsetY =\n      element.y > y1\n        ? Math.floor(distance(element.y, y1)) * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX * zoom, canvasOffsetY * zoom);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n  }\n\n  context.translate(CANVAS_PADDING, CANVAS_PADDING);\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  const rc = rough.canvas(canvas);\n  drawElementOnCanvas(element, rc, context);\n  context.translate(-CANVAS_PADDING, -CANVAS_PADDING);\n  context.scale(\n    1 / (window.devicePixelRatio * zoom),\n    1 / (window.devicePixelRatio * zoom),\n  );\n  return { element, canvas, canvasZoom: zoom, canvasOffsetX, canvasOffsetY };\n};\n\nconst drawElementOnCanvas = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      rc.draw(getShapeForElement(element) as Drawable);\n      break;\n    }\n    case \"arrow\":\n    case \"draw\":\n    case \"line\": {\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const rtl = isRTL(element.text);\n        const shouldTemporarilyAttach = rtl && !context.canvas.isConnected;\n        if (shouldTemporarilyAttach) {\n          // to correctly render RTL text mixed with LTR, we have to append it\n          //  to the DOM\n          document.body.appendChild(context.canvas);\n        }\n        context.canvas.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\n        const font = context.font;\n        context.font = getFontString(element);\n        const fillStyle = context.fillStyle;\n        context.fillStyle = element.strokeColor;\n        const textAlign = context.textAlign;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        for (let i = 0; i < lines.length; i++) {\n          context.fillText(\n            lines[i],\n            horizontalOffset,\n            (i + 1) * lineHeight - verticalOffset,\n          );\n        }\n        context.fillStyle = fillStyle;\n        context.font = font;\n        context.textAlign = textAlign;\n        if (shouldTemporarilyAttach) {\n          context.canvas.remove();\n        }\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<\n  ExcalidrawElement,\n  Drawable | Drawable[] | null\n>();\n\nexport const getShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.get(element);\n\nexport const invalidateShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.delete(element);\n\nexport const generateRoughOptions = (element: ExcalidrawElement): Options => {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? DASHARRAY_DASHED\n        : element.strokeStyle === \"dotted\"\n        ? DASHARRAY_DOTTED\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    //  dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    //  similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    //  hachureGap because if not specified, roughjs uses strokeWidth to\n    //  calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\":\n    case \"draw\": {\n      // If shape is a line and is a closed shape,\n      // fill the shape if a color is set.\n      if (isPathALoop(element.points)) {\n        options.fillStyle = element.fillStyle;\n        options.fill =\n          element.backgroundColor === \"transparent\"\n            ? undefined\n            : element.backgroundColor;\n      }\n      return options;\n    }\n    case \"arrow\":\n      return options;\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst generateElementShape = (\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n) => {\n  let shape = shapeCache.get(element) || null;\n  if (!shape) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        shape = generator.rectangle(\n          0,\n          0,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n\n        break;\n      case \"diamond\": {\n        const [\n          topX,\n          topY,\n          rightX,\n          rightY,\n          bottomX,\n          bottomY,\n          leftX,\n          leftY,\n        ] = getDiamondPoints(element);\n        shape = generator.polygon(\n          [\n            [topX, topY],\n            [rightX, rightY],\n            [bottomX, bottomY],\n            [leftX, leftY],\n          ],\n          generateRoughOptions(element),\n        );\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        break;\n      case \"line\":\n      case \"draw\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        shape = [generator.curve(points as [number, number][], options)];\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const [x2, y2, x3, y3, x4, y4] = getArrowPoints(element, shape);\n          // for dotted arrows caps, reduce gap to make it more legible\n          if (element.strokeStyle === \"dotted\") {\n            options.strokeLineDash = [3, 4];\n            // for solid/dashed, keep solid arrow cap\n          } else {\n            delete options.strokeLineDash;\n          }\n          shape.push(\n            ...[\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ],\n          );\n        }\n        break;\n      }\n      case \"text\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        shape = [];\n        break;\n      }\n    }\n    shapeCache.set(element, shape);\n  }\n};\n\nconst generateElementWithCanvas = (\n  element: NonDeletedExcalidrawElement,\n  sceneState?: SceneState,\n) => {\n  const zoom = sceneState ? sceneState.zoom : 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.canvasZoom !== zoom &&\n    !sceneState?.shouldCacheIgnoreZoom;\n  if (!prevElementWithCanvas || shouldRegenerateBecauseZoom) {\n    const elementWithCanvas = generateElementCanvas(element, zoom);\n    elementWithCanvasCache.set(element, elementWithCanvas);\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\n\nconst drawElementFromCanvas = (\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n) => {\n  const element = elementWithCanvas.element;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = ((x1 + x2) / 2 + sceneState.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + sceneState.scrollY) * window.devicePixelRatio;\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.rotate(element.angle);\n  context.drawImage(\n    elementWithCanvas.canvas!,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.height / elementWithCanvas.canvasZoom,\n  );\n  context.rotate(-element.angle);\n  context.translate(-cx, -cy);\n  context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  // Clear the nested element we appended to the DOM\n};\n\nexport const renderElement = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderOptimizations: boolean,\n  sceneState: SceneState,\n) => {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      context.translate(\n        element.x + sceneState.scrollX,\n        element.y + sceneState.scrollY,\n      );\n      const fillStyle = context.fillStyle;\n      context.fillStyle = \"rgba(0, 0, 255, 0.10)\";\n      context.fillRect(0, 0, element.width, element.height);\n      context.fillStyle = fillStyle;\n      context.translate(\n        -element.x - sceneState.scrollX,\n        -element.y - sceneState.scrollY,\n      );\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"draw\":\n    case \"arrow\":\n    case \"text\": {\n      generateElementShape(element, generator);\n      if (renderOptimizations) {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          sceneState,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, sceneState);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + sceneState.scrollX;\n        const cy = (y1 + y2) / 2 + sceneState.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context);\n        context.translate(shiftX, shiftY);\n        context.rotate(-element.angle);\n        context.translate(-cx, -cy);\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nexport const renderElementToSvg = (\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  offsetX?: number,\n  offsetY?: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2 - (element.x - x1);\n  const cy = (y2 - y1) / 2 - (element.y - y1);\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElementShape(element, generator);\n      const node = rsvg.draw(getShapeForElement(element) as Drawable);\n      const opacity = element.opacity / 100;\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      svgRoot.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"draw\":\n    case \"arrow\": {\n      generateElementShape(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      const opacity = element.opacity / 100;\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        const node = rsvg.draw(shape);\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          (element.type === \"line\" || element.type === \"draw\") &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n      svgRoot.appendChild(group);\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const opacity = element.opacity / 100;\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const direction = isRTL(element.text) ? \"rtl\" : \"ltr\";\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\" || direction === \"rtl\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${(i + 1) * lineHeight - verticalOffset}`);\n          text.setAttribute(\"font-family\", getFontFamilyString(element));\n          text.setAttribute(\"font-size\", `${element.fontSize}px`);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          text.setAttribute(\"direction\", direction);\n          node.appendChild(text);\n        }\n        svgRoot.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n","import { Random } from \"roughjs/bin/math\";\nimport nanoid from \"nanoid\";\n\nlet random = new Random(Date.now());\nlet testIdBase = 0;\n\nexport const randomInteger = () => Math.floor(random.next() * 2 ** 31);\n\nexport const reseed = (seed: number) => {\n  random = new Random(seed);\n  testIdBase = 0;\n};\n\nexport const randomId = () =>\n  process.env.NODE_ENV === \"test\" ? `id${testIdBase++}` : nanoid();\n","import { ExcalidrawElement } from \"./types\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { globalSceneState } from \"../scene\";\nimport { getSizeFromPoints } from \"../points\";\nimport { randomInteger } from \"../random\";\nimport { Point } from \"../types\";\n\ntype ElementUpdate<TElement extends ExcalidrawElement> = Omit<\n  Partial<TElement>,\n  \"id\" | \"seed\" | \"version\" | \"versionNonce\"\n>;\n\n// This function tracks updates of text elements for the purposes for collaboration.\n// The version is used to compare updates when more than one user is working in\n// the same drawing. Note: this will trigger the component to update. Make sure you\n// are calling it either from a React event handler or within unstable_batchedUpdates().\nexport const mutateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n) => {\n  let didChange = false;\n\n  // casting to any because can't use `in` operator\n  // (see https://github.com/microsoft/TypeScript/issues/21732)\n  const { points } = updates as any;\n\n  if (typeof points !== \"undefined\") {\n    updates = { ...getSizeFromPoints(points), ...updates };\n  }\n\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (element as any)[key] === value &&\n        // if object, always update in case its deep prop was mutated\n        (typeof value !== \"object\" || value === null || key === \"groupIds\")\n      ) {\n        continue;\n      }\n\n      if (key === \"points\") {\n        const prevPoints = (element as any)[key];\n        const nextPoints = value;\n        if (prevPoints.length === nextPoints.length) {\n          let didChangePoints = false;\n          let i = prevPoints.length;\n          while (--i) {\n            const prevPoint: Point = prevPoints[i];\n            const nextPoint: Point = nextPoints[i];\n            if (\n              prevPoint[0] !== nextPoint[0] ||\n              prevPoint[1] !== nextPoint[1]\n            ) {\n              didChangePoints = true;\n              break;\n            }\n          }\n          if (!didChangePoints) {\n            continue;\n          }\n        }\n      }\n\n      (element as any)[key] = value;\n      didChange = true;\n    }\n  }\n\n  if (!didChange) {\n    return;\n  }\n\n  if (\n    typeof updates.height !== \"undefined\" ||\n    typeof updates.width !== \"undefined\" ||\n    typeof points !== \"undefined\"\n  ) {\n    invalidateShapeForElement(element);\n  }\n\n  element.version++;\n  element.versionNonce = randomInteger();\n\n  globalSceneState.informMutation();\n};\n\nexport const newElementWith = <TElement extends ExcalidrawElement>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n): TElement => ({\n  ...element,\n  ...updates,\n  version: element.version + 1,\n  versionNonce: randomInteger(),\n});\n","import { ExcalidrawElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { SHIFT_LOCKING_ANGLE } from \"../constants\";\n\nexport const isInvisiblySmallElement = (\n  element: ExcalidrawElement,\n): boolean => {\n  if (isLinearElement(element)) {\n    return element.points.length < 2;\n  }\n  return element.width === 0 && element.height === 0;\n};\n\n/**\n * Makes a perfect shape or diagonal/horizontal/vertical line\n */\nexport const getPerfectElementSize = (\n  elementType: string,\n  width: number,\n  height: number,\n): { width: number; height: number } => {\n  const absWidth = Math.abs(width);\n  const absHeight = Math.abs(height);\n\n  if (\n    elementType === \"line\" ||\n    elementType === \"arrow\" ||\n    elementType === \"draw\"\n  ) {\n    const lockedAngle =\n      Math.round(Math.atan(absHeight / absWidth) / SHIFT_LOCKING_ANGLE) *\n      SHIFT_LOCKING_ANGLE;\n    if (lockedAngle === 0) {\n      height = 0;\n    } else if (lockedAngle === Math.PI / 2) {\n      width = 0;\n    } else {\n      height =\n        Math.round(absWidth * Math.tan(lockedAngle)) * Math.sign(height) ||\n        height;\n    }\n  } else if (elementType !== \"selection\") {\n    height = absWidth * Math.sign(height);\n  }\n  return { width, height };\n};\n\nexport const resizePerfectLineForNWHandler = (\n  element: ExcalidrawElement,\n  x: number,\n  y: number,\n) => {\n  const anchorX = element.x + element.width;\n  const anchorY = element.y + element.height;\n  const distanceToAnchorX = x - anchorX;\n  const distanceToAnchorY = y - anchorY;\n  if (Math.abs(distanceToAnchorX) < Math.abs(distanceToAnchorY) / 2) {\n    mutateElement(element, {\n      x: anchorX,\n      width: 0,\n      y,\n      height: -distanceToAnchorY,\n    });\n  } else if (Math.abs(distanceToAnchorY) < Math.abs(element.width) / 2) {\n    mutateElement(element, {\n      y: anchorY,\n      height: 0,\n    });\n  } else {\n    const nextHeight =\n      Math.sign(distanceToAnchorY) *\n      Math.sign(distanceToAnchorX) *\n      element.width;\n    mutateElement(element, {\n      x,\n      y: anchorY - nextHeight,\n      width: -distanceToAnchorX,\n      height: nextHeight,\n    });\n  }\n};\n\nexport const getNormalizedDimensions = (\n  element: Pick<ExcalidrawElement, \"width\" | \"height\" | \"x\" | \"y\">,\n): {\n  width: ExcalidrawElement[\"width\"];\n  height: ExcalidrawElement[\"height\"];\n  x: ExcalidrawElement[\"x\"];\n  y: ExcalidrawElement[\"y\"];\n} => {\n  const ret = {\n    width: element.width,\n    height: element.height,\n    x: element.x,\n    y: element.y,\n  };\n\n  if (element.width < 0) {\n    const nextWidth = Math.abs(element.width);\n    ret.width = nextWidth;\n    ret.x = element.x - nextWidth;\n  }\n\n  if (element.height < 0) {\n    const nextHeight = Math.abs(element.height);\n    ret.height = nextHeight;\n    ret.y = element.y - nextHeight;\n  }\n\n  return ret;\n};\n","import { GroupId, ExcalidrawElement, NonDeleted } from \"./element/types\";\nimport { AppState } from \"./types\";\nimport { getSelectedElements } from \"./scene\";\n\nexport function selectGroup(\n  groupId: GroupId,\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState {\n  const elementsInGroup = elements.filter((element) =>\n    element.groupIds.includes(groupId),\n  );\n\n  if (elementsInGroup.length < 2) {\n    if (\n      appState.selectedGroupIds[groupId] ||\n      appState.editingGroupId === groupId\n    ) {\n      return {\n        ...appState,\n        selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: false },\n        editingGroupId: null,\n      };\n    }\n    return appState;\n  }\n\n  return {\n    ...appState,\n    selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: true },\n    selectedElementIds: {\n      ...appState.selectedElementIds,\n      ...Object.fromEntries(\n        elementsInGroup.map((element) => [element.id, true]),\n      ),\n    },\n  };\n}\n\n/**\n * If the element's group is selected, don't render an individual\n * selection border around it.\n */\nexport function isSelectedViaGroup(\n  appState: AppState,\n  element: ExcalidrawElement,\n) {\n  return !!element.groupIds\n    .filter((groupId) => groupId !== appState.editingGroupId)\n    .find((groupId) => appState.selectedGroupIds[groupId]);\n}\n\nexport function getSelectedGroupIds(appState: AppState): GroupId[] {\n  return Object.entries(appState.selectedGroupIds)\n    .filter(([groupId, isSelected]) => isSelected)\n    .map(([groupId, isSelected]) => groupId);\n}\n\n/**\n * When you select an element, you often want to actually select the whole group it's in, unless\n * you're currently editing that group.\n */\nexport function selectGroupsForSelectedElements(\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState {\n  let nextAppState = { ...appState };\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  for (const selectedElement of selectedElements) {\n    let groupIds = selectedElement.groupIds;\n    if (appState.editingGroupId) {\n      // handle the case where a group is nested within a group\n      const indexOfEditingGroup = groupIds.indexOf(appState.editingGroupId);\n      if (indexOfEditingGroup > -1) {\n        groupIds = groupIds.slice(0, indexOfEditingGroup);\n      }\n    }\n    if (groupIds.length > 0) {\n      const groupId = groupIds[groupIds.length - 1];\n      nextAppState = selectGroup(groupId, nextAppState, elements);\n    }\n  }\n\n  return nextAppState;\n}\n\nexport function isElementInGroup(element: ExcalidrawElement, groupId: string) {\n  return element.groupIds.includes(groupId);\n}\n\nexport function getElementsInGroup(\n  elements: readonly ExcalidrawElement[],\n  groupId: string,\n) {\n  return elements.filter((element) => isElementInGroup(element, groupId));\n}\n\nexport function getSelectedGroupIdForElement(\n  element: ExcalidrawElement,\n  selectedGroupIds: { [groupId: string]: boolean },\n) {\n  return element.groupIds.find((groupId) => selectedGroupIds[groupId]);\n}\n\nexport function getNewGroupIdsForDuplication(\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  editingGroupId: AppState[\"editingGroupId\"],\n  mapper: (groupId: GroupId) => GroupId,\n) {\n  const copy = [...groupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const endIndex =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  for (let i = 0; i < endIndex; i++) {\n    copy[i] = mapper(copy[i]);\n  }\n\n  return copy;\n}\n\nexport function addToGroup(\n  prevGroupIds: ExcalidrawElement[\"groupIds\"],\n  newGroupId: GroupId,\n  editingGroupId: AppState[\"editingGroupId\"],\n) {\n  // insert before the editingGroupId, or push to the end.\n  const groupIds = [...prevGroupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const positionToInsert =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  groupIds.splice(positionToInsert, 0, newGroupId);\n  return groupIds;\n}\n\nexport function removeFromSelectedGroups(\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  selectedGroupIds: { [groupId: string]: boolean },\n) {\n  return groupIds.filter((groupId) => !selectedGroupIds[groupId]);\n}\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawGenericElement,\n  NonDeleted,\n  TextAlign,\n  FontFamily,\n  GroupId,\n} from \"../element/types\";\nimport { measureText, getFontString } from \"../utils\";\nimport { randomInteger, randomId } from \"../random\";\nimport { newElementWith } from \"./mutateElement\";\nimport { getNewGroupIdsForDuplication } from \"../groups\";\nimport { AppState } from \"../types\";\n\ntype ElementConstructorOpts = MarkOptional<\n  Omit<ExcalidrawGenericElement, \"id\" | \"type\" | \"isDeleted\">,\n  | \"width\"\n  | \"height\"\n  | \"angle\"\n  | \"groupIds\"\n  | \"seed\"\n  | \"version\"\n  | \"versionNonce\"\n>;\n\nconst _newElementBase = <T extends ExcalidrawElement>(\n  type: T[\"type\"],\n  {\n    x,\n    y,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    width = 0,\n    height = 0,\n    angle = 0,\n    groupIds = [],\n    ...rest\n  }: ElementConstructorOpts & Omit<Partial<ExcalidrawGenericElement>, \"type\">,\n) => ({\n  id: rest.id || randomId(),\n  type,\n  x,\n  y,\n  width,\n  height,\n  angle,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth,\n  strokeStyle,\n  roughness,\n  opacity,\n  groupIds,\n  seed: rest.seed ?? randomInteger(),\n  version: rest.version || 1,\n  versionNonce: rest.versionNonce ?? 0,\n  isDeleted: false as false,\n});\n\nexport const newElement = (\n  opts: {\n    type: ExcalidrawGenericElement[\"type\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawGenericElement> =>\n  _newElementBase<ExcalidrawGenericElement>(opts.type, opts);\n\nexport const newTextElement = (\n  opts: {\n    text: string;\n    fontSize: number;\n    fontFamily: FontFamily;\n    textAlign: TextAlign;\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawTextElement> => {\n  const metrics = measureText(opts.text, getFontString(opts));\n  const textElement = newElementWith(\n    {\n      ..._newElementBase<ExcalidrawTextElement>(\"text\", opts),\n      text: opts.text,\n      fontSize: opts.fontSize,\n      fontFamily: opts.fontFamily,\n      textAlign: opts.textAlign,\n      // Center the text\n      x: opts.x - metrics.width / 2,\n      y: opts.y - metrics.height / 2,\n      width: metrics.width,\n      height: metrics.height,\n      baseline: metrics.baseline,\n    },\n    {},\n  );\n\n  return textElement;\n};\n\nexport const newLinearElement = (\n  opts: {\n    type: ExcalidrawLinearElement[\"type\"];\n    lastCommittedPoint?: ExcalidrawLinearElement[\"lastCommittedPoint\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawLinearElement> => {\n  return {\n    ..._newElementBase<ExcalidrawLinearElement>(opts.type, opts),\n    points: [],\n    lastCommittedPoint: opts.lastCommittedPoint || null,\n  };\n};\n\n// Simplified deep clone for the purpose of cloning ExcalidrawElement only\n//  (doesn't clone Date, RegExp, Map, Set, Typed arrays etc.)\n//\n// Adapted from https://github.com/lukeed/klona\nexport const deepCopyElement = (val: any, depth: number = 0) => {\n  if (val == null || typeof val !== \"object\") {\n    return val;\n  }\n\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    const tmp =\n      typeof val.constructor === \"function\"\n        ? Object.create(Object.getPrototypeOf(val))\n        : {};\n    for (const key in val) {\n      if (val.hasOwnProperty(key)) {\n        // don't copy top-level shape property, which we want to regenerate\n        if (depth === 0 && (key === \"shape\" || key === \"canvas\")) {\n          continue;\n        }\n        tmp[key] = deepCopyElement(val[key], depth + 1);\n      }\n    }\n    return tmp;\n  }\n\n  if (Array.isArray(val)) {\n    let k = val.length;\n    const arr = new Array(k);\n    while (k--) {\n      arr[k] = deepCopyElement(val[k], depth + 1);\n    }\n    return arr;\n  }\n\n  return val;\n};\n\n/**\n * Duplicate an element, often used in the alt-drag operation.\n * Note that this method has gotten a bit complicated since the\n * introduction of gruoping/ungrouping elements.\n * @param editingGroupId The current group being edited. The new\n *                       element will inherit this group and its\n *                       parents.\n * @param groupIdMapForOperation A Map that maps old group IDs to\n *                               duplicated ones. If you are duplicating\n *                               multiple elements at once, share this map\n *                               amongst all of them\n * @param element Element to duplicate\n * @param overrides Any element properties to override\n */\nexport const duplicateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  editingGroupId: AppState[\"editingGroupId\"],\n  groupIdMapForOperation: Map<GroupId, GroupId>,\n  element: TElement,\n  overrides?: Partial<TElement>,\n): TElement => {\n  let copy: TElement = deepCopyElement(element);\n  copy.id = randomId();\n  copy.seed = randomInteger();\n  copy.groupIds = getNewGroupIdsForDuplication(\n    copy.groupIds,\n    editingGroupId,\n    (groupId) => {\n      if (!groupIdMapForOperation.has(groupId)) {\n        groupIdMapForOperation.set(groupId, randomId());\n      }\n      return groupIdMapForOperation.get(groupId)!;\n    },\n  );\n  if (overrides) {\n    copy = Object.assign(copy, overrides);\n  }\n  return copy;\n};\n","import { ExcalidrawElement, PointerType } from \"./types\";\n\nimport { getElementAbsoluteCoords } from \"./bounds\";\nimport { rotate } from \"../math\";\n\ntype Sides = \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\" | \"rotation\";\n\nconst handleSizes: { [k in PointerType]: number } = {\n  mouse: 8,\n  pen: 16,\n  touch: 28,\n};\n\nconst ROTATION_HANDLER_GAP = 16;\n\nexport const OMIT_SIDES_FOR_MULTIPLE_ELEMENTS = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_TEXT_ELEMENT = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_SLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  nw: true,\n  se: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_BACKSLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  ne: true,\n  sw: true,\n  rotation: true,\n};\n\nconst generateHandler = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n): [number, number, number, number] => {\n  const [xx, yy] = rotate(x + width / 2, y + height / 2, cx, cy, angle);\n  return [xx - width / 2, yy - height / 2, width, height];\n};\n\nexport const handlerRectanglesFromCoords = (\n  [x1, y1, x2, y2]: [number, number, number, number],\n  angle: number,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n  omitSides: { [T in Sides]?: boolean } = {},\n): Partial<{ [T in Sides]: [number, number, number, number] }> => {\n  const size = handleSizes[pointerType];\n  const handlerWidth = size / zoom;\n  const handlerHeight = size / zoom;\n\n  const handlerMarginX = size / zoom;\n  const handlerMarginY = size / zoom;\n\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n\n  const dashedLineMargin = 4 / zoom;\n\n  const centeringOffset = (size - 8) / (2 * zoom);\n\n  const handlers: Partial<\n    { [T in Sides]: [number, number, number, number] }\n  > = {\n    nw: omitSides[\"nw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    ne: omitSides[\"ne\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    sw: omitSides[\"sw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    se: omitSides[\"se\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    rotation: omitSides[\"rotation\"]\n      ? undefined\n      : generateHandler(\n          x1 + width / 2 - handlerWidth / 2,\n          y1 -\n            dashedLineMargin -\n            handlerMarginY +\n            centeringOffset -\n            ROTATION_HANDLER_GAP / zoom,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n  };\n\n  // We only want to show height handlers (all cardinal directions)  above a certain size\n  const minimumSizeForEightHandlers = (5 * size) / zoom;\n  if (Math.abs(width) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"n\"]) {\n      handlers[\"n\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"s\"]) {\n      handlers[\"s\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y2 + dashedLineMargin - centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n  if (Math.abs(height) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"w\"]) {\n      handlers[\"w\"] = generateHandler(\n        x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"e\"]) {\n      handlers[\"e\"] = generateHandler(\n        x2 + dashedLineMargin - centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n\n  return handlers;\n};\n\nexport const handlerRectangles = (\n  element: ExcalidrawElement,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n) => {\n  let omitSides: { [T in Sides]?: boolean } = {};\n  if (\n    element.type === \"arrow\" ||\n    element.type === \"line\" ||\n    element.type === \"draw\"\n  ) {\n    if (element.points.length === 2) {\n      // only check the last point because starting point is always (0,0)\n      const [, p1] = element.points;\n      if (p1[0] === 0 || p1[1] === 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] > 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] > 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] < 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] < 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      }\n    }\n  } else if (element.type === \"text\") {\n    omitSides = OMIT_SIDES_FOR_TEXT_ELEMENT;\n  }\n\n  return handlerRectanglesFromCoords(\n    getElementAbsoluteCoords(element),\n    element.angle,\n    zoom,\n    pointerType,\n    omitSides,\n  );\n};\n","import {\n  distanceBetweenPointAndSegment,\n  isPathALoop,\n  rotate,\n  isPointInPolygon,\n} from \"../math\";\nimport { pointsOnBezierCurves } from \"points-on-curve\";\n\nimport { NonDeletedExcalidrawElement } from \"./types\";\n\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getCurvePathOps,\n} from \"./bounds\";\nimport { Point } from \"../types\";\nimport { Drawable } from \"roughjs/bin/core\";\nimport { AppState } from \"../types\";\nimport { getShapeForElement } from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\n\nconst isElementDraggableFromInside = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n): boolean => {\n  if (element.type === \"arrow\") {\n    return false;\n  }\n  const dragFromInside =\n    element.backgroundColor !== \"transparent\" ||\n    appState.selectedElementIds[element.id];\n  if (element.type === \"line\" || element.type === \"draw\") {\n    return dragFromInside && isPathALoop(element.points);\n  }\n  return dragFromInside;\n};\n\nexport const hitTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n): boolean => {\n  // For shapes that are composed of lines, we only enable point-selection when the distance\n  // of the click is less than x pixels of any of the lines that the shape is composed of\n  const lineThreshold = 10 / zoom;\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // reverse rotate the pointer\n  [x, y] = rotate(x, y, cx, cy, -element.angle);\n\n  if (element.type === \"ellipse\") {\n    // https://stackoverflow.com/a/46007540/232122\n    const px = Math.abs(x - element.x - element.width / 2);\n    const py = Math.abs(y - element.y - element.height / 2);\n\n    let tx = 0.707;\n    let ty = 0.707;\n\n    const a = Math.abs(element.width) / 2;\n    const b = Math.abs(element.height) / 2;\n\n    [0, 1, 2, 3].forEach((x) => {\n      const xx = a * tx;\n      const yy = b * ty;\n\n      const ex = ((a * a - b * b) * tx ** 3) / a;\n      const ey = ((b * b - a * a) * ty ** 3) / b;\n\n      const rx = xx - ex;\n      const ry = yy - ey;\n\n      const qx = px - ex;\n      const qy = py - ey;\n\n      const r = Math.hypot(ry, rx);\n      const q = Math.hypot(qy, qx);\n\n      tx = Math.min(1, Math.max(0, ((qx * r) / q + ex) / a));\n      ty = Math.min(1, Math.max(0, ((qy * r) / q + ey) / b));\n      const t = Math.hypot(ty, tx);\n      tx /= t;\n      ty /= t;\n    });\n\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        a * tx - (px - lineThreshold) >= 0 && b * ty - (py - lineThreshold) >= 0\n      );\n    }\n    return Math.hypot(a * tx - px, b * ty - py) < lineThreshold;\n  } else if (element.type === \"rectangle\") {\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        x > x1 - lineThreshold &&\n        x < x2 + lineThreshold &&\n        y > y1 - lineThreshold &&\n        y < y2 + lineThreshold\n      );\n    }\n\n    // (x1, y1) --A-- (x2, y1)\n    //    |D             |B\n    // (x1, y2) --C-- (x2, y2)\n    return (\n      distanceBetweenPointAndSegment(x, y, x1, y1, x2, y1) < lineThreshold || // A\n      distanceBetweenPointAndSegment(x, y, x2, y1, x2, y2) < lineThreshold || // B\n      distanceBetweenPointAndSegment(x, y, x2, y2, x1, y2) < lineThreshold || // C\n      distanceBetweenPointAndSegment(x, y, x1, y2, x1, y1) < lineThreshold // D\n    );\n  } else if (element.type === \"diamond\") {\n    x -= element.x;\n    y -= element.y;\n    let [\n      topX,\n      topY,\n      rightX,\n      rightY,\n      bottomX,\n      bottomY,\n      leftX,\n      leftY,\n    ] = getDiamondPoints(element);\n\n    if (isElementDraggableFromInside(element, appState)) {\n      // TODO: remove this when we normalize coordinates globally\n      if (topY > bottomY) {\n        [bottomY, topY] = [topY, bottomY];\n      }\n      if (rightX < leftX) {\n        [leftX, rightX] = [rightX, leftX];\n      }\n\n      topY -= lineThreshold;\n      bottomY += lineThreshold;\n      leftX -= lineThreshold;\n      rightX += lineThreshold;\n\n      // all deltas should be < 0. Delta > 0 indicates it's on the outside side\n      //  of the line.\n      //\n      //          (topX, topY)\n      //     D  /             \\ A\n      //      /               \\\n      //  (leftX, leftY)  (rightX, rightY)\n      //    C \\               / B\n      //      \\              /\n      //      (bottomX, bottomY)\n      //\n      // https://stackoverflow.com/a/2752753/927631\n      return (\n        // delta from line D\n        (leftX - topX) * (y - leftY) - (leftX - x) * (topY - leftY) <= 0 &&\n        // delta from line A\n        (topX - rightX) * (y - rightY) - (x - rightX) * (topY - rightY) <= 0 &&\n        // delta from line B\n        (rightX - bottomX) * (y - bottomY) -\n          (x - bottomX) * (rightY - bottomY) <=\n          0 &&\n        // delta from line C\n        (bottomX - leftX) * (y - leftY) - (x - leftX) * (bottomY - leftY) <= 0\n      );\n    }\n\n    return (\n      distanceBetweenPointAndSegment(x, y, topX, topY, rightX, rightY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, rightX, rightY, bottomX, bottomY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, bottomX, bottomY, leftX, leftY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, leftX, leftY, topX, topY) <\n        lineThreshold\n    );\n  } else if (isLinearElement(element)) {\n    if (!getShapeForElement(element)) {\n      return false;\n    }\n    const shape = getShapeForElement(element) as Drawable[];\n\n    if (\n      x < x1 - lineThreshold ||\n      y < y1 - lineThreshold ||\n      x > x2 + lineThreshold ||\n      y > y2 + lineThreshold\n    ) {\n      return false;\n    }\n\n    const relX = x - element.x;\n    const relY = y - element.y;\n\n    if (isElementDraggableFromInside(element, appState)) {\n      const hit = shape.some((subshape) =>\n        hitTestCurveInside(subshape, relX, relY, lineThreshold),\n      );\n      if (hit) {\n        return true;\n      }\n    }\n\n    // hit thest all \"subshapes\" of the linear element\n    return shape.some((subshape) =>\n      hitTestRoughShape(subshape, relX, relY, lineThreshold),\n    );\n  } else if (element.type === \"text\") {\n    return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n  } else if (element.type === \"selection\") {\n    console.warn(\"This should not happen, we need to investigate why it does.\");\n    return false;\n  }\n  throw new Error(`Unimplemented type ${element.type}`);\n};\n\nconst pointInBezierEquation = (\n  p0: Point,\n  p1: Point,\n  p2: Point,\n  p3: Point,\n  [mx, my]: Point,\n  lineThreshold: number,\n) => {\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // go through t in increments of 0.01\n  let t = 0;\n  while (t <= 1.0) {\n    const tx = equation(t, 0);\n    const ty = equation(t, 1);\n\n    const diff = Math.sqrt(Math.pow(tx - mx, 2) + Math.pow(ty - my, 2));\n\n    if (diff < lineThreshold) {\n      return true;\n    }\n\n    t += 0.01;\n  }\n\n  return false;\n};\n\nconst hitTestCurveInside = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  const ops = getCurvePathOps(drawable);\n  const points: Point[] = [];\n  for (const operation of ops) {\n    if (operation.op === \"move\") {\n      if (points.length) {\n        break;\n      }\n      points.push([operation.data[0], operation.data[1]]);\n    } else if (operation.op === \"bcurveTo\") {\n      points.push([operation.data[0], operation.data[1]]);\n      points.push([operation.data[2], operation.data[3]]);\n      points.push([operation.data[4], operation.data[5]]);\n    }\n  }\n  if (points.length >= 4) {\n    const polygonPoints = pointsOnBezierCurves(points as any, 10, 5);\n    return isPointInPolygon(polygonPoints, x, y);\n  }\n  return false;\n};\n\nconst hitTestRoughShape = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  // read operations from first opSet\n  const ops = getCurvePathOps(drawable);\n\n  // set start position as (0,0) just in case\n  // move operation does not exist (unlikely but it is worth safekeeping it)\n  let currentP: Point = [0, 0];\n\n  return ops.some(({ op, data }, idx) => {\n    // There are only four operation types:\n    // move, bcurveTo, lineTo, and curveTo\n    if (op === \"move\") {\n      // change starting point\n      currentP = (data as unknown) as Point;\n      // move operation does not draw anything; so, it always\n      // returns false\n    } else if (op === \"bcurveTo\") {\n      // create points from bezier curve\n      // bezier curve stores data as a flattened array of three positions\n      // [x1, y1, x2, y2, x3, y3]\n      const p1 = [data[0], data[1]] as Point;\n      const p2 = [data[2], data[3]] as Point;\n      const p3 = [data[4], data[5]] as Point;\n\n      const p0 = currentP;\n      currentP = p3;\n\n      // check if points are on the curve\n      // cubic bezier curves require four parameters\n      // the first parameter is the last stored position (p0)\n      const retVal = pointInBezierEquation(\n        p0,\n        p1,\n        p2,\n        p3,\n        [x, y],\n        lineThreshold,\n      );\n\n      // set end point of bezier curve as the new starting point for\n      // upcoming operations as each operation is based on the last drawn\n      // position of the previous operation\n      return retVal;\n    } else if (op === \"lineTo\") {\n      // TODO: Implement this\n    } else if (op === \"qcurveTo\") {\n      // TODO: Implement this\n    }\n\n    return false;\n  });\n};\n","import {\n  ExcalidrawElement,\n  PointerType,\n  NonDeletedExcalidrawElement,\n} from \"./types\";\n\nimport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nimport { AppState } from \"../types\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nconst isInHandlerRect = (\n  handler: [number, number, number, number],\n  x: number,\n  y: number,\n) =>\n  x >= handler[0] &&\n  x <= handler[0] + handler[2] &&\n  y >= handler[1] &&\n  y <= handler[1] + handler[3];\n\nexport const resizeTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n  pointerType: PointerType,\n): HandlerRectanglesRet | false => {\n  if (!appState.selectedElementIds[element.id]) {\n    return false;\n  }\n\n  const { rotation: rotationHandler, ...handlers } = handlerRectangles(\n    element,\n    zoom,\n    pointerType,\n  );\n\n  if (rotationHandler && isInHandlerRect(rotationHandler, x, y)) {\n    return \"rotation\" as HandlerRectanglesRet;\n  }\n\n  const filter = Object.keys(handlers).filter((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    if (!handler) {\n      return false;\n    }\n    return isInHandlerRect(handler, x, y);\n  });\n\n  if (filter.length > 0) {\n    return filter[0] as HandlerRectanglesRet;\n  }\n\n  return false;\n};\n\nexport const getElementWithResizeHandler = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: number,\n  pointerType: PointerType,\n) => {\n  return elements.reduce((result, element) => {\n    if (result) {\n      return result;\n    }\n    const resizeHandle = resizeTest(\n      element,\n      appState,\n      scenePointerX,\n      scenePointerY,\n      zoom,\n      pointerType,\n    );\n    return resizeHandle ? { element, resizeHandle } : null;\n  }, null as { element: NonDeletedExcalidrawElement; resizeHandle: ReturnType<typeof resizeTest> } | null);\n};\n\nexport const getResizeHandlerFromCoords = (\n  [x1, y1, x2, y2]: readonly [number, number, number, number],\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: number,\n  pointerType: PointerType,\n) => {\n  const handlers = handlerRectanglesFromCoords(\n    [x1, y1, x2, y2],\n    0,\n    zoom,\n    pointerType,\n    OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  );\n\n  const found = Object.keys(handlers).find((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    return handler && isInHandlerRect(handler, scenePointerX, scenePointerY);\n  });\n  return (found || false) as HandlerRectanglesRet;\n};\n\nconst RESIZE_CURSORS = [\"ns\", \"nesw\", \"ew\", \"nwse\"];\nconst rotateResizeCursor = (cursor: string, angle: number) => {\n  const index = RESIZE_CURSORS.indexOf(cursor);\n  if (index >= 0) {\n    const a = Math.round(angle / (Math.PI / 4));\n    cursor = RESIZE_CURSORS[(index + a) % RESIZE_CURSORS.length];\n  }\n  return cursor;\n};\n\n/*\n * Returns bi-directional cursor for the element being resized\n */\nexport const getCursorForResizingElement = (resizingElement: {\n  element?: ExcalidrawElement;\n  resizeHandle: ReturnType<typeof resizeTest>;\n}): string => {\n  const { element, resizeHandle } = resizingElement;\n  const shouldSwapCursors =\n    element && Math.sign(element.height) * Math.sign(element.width) === -1;\n  let cursor = null;\n\n  switch (resizeHandle) {\n    case \"n\":\n    case \"s\":\n      cursor = \"ns\";\n      break;\n    case \"w\":\n    case \"e\":\n      cursor = \"ew\";\n      break;\n    case \"nw\":\n    case \"se\":\n      if (shouldSwapCursors) {\n        cursor = \"nesw\";\n      } else {\n        cursor = \"nwse\";\n      }\n      break;\n    case \"ne\":\n    case \"sw\":\n      if (shouldSwapCursors) {\n        cursor = \"nwse\";\n      } else {\n        cursor = \"nesw\";\n      }\n      break;\n    case \"rotation\":\n      return \"grab\";\n  }\n\n  if (cursor && element) {\n    cursor = rotateResizeCursor(cursor, element.angle);\n  }\n\n  return cursor ? `${cursor}-resize` : \"\";\n};\n\nexport const normalizeResizeHandle = (\n  element: ExcalidrawElement,\n  resizeHandle: HandlerRectanglesRet,\n): HandlerRectanglesRet => {\n  if (element.width >= 0 && element.height >= 0) {\n    return resizeHandle;\n  }\n\n  if (element.width < 0 && element.height < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"se\";\n      case \"ne\":\n        return \"sw\";\n      case \"se\":\n        return \"nw\";\n      case \"sw\":\n        return \"ne\";\n    }\n  } else if (element.width < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"ne\";\n      case \"ne\":\n        return \"nw\";\n      case \"se\":\n        return \"sw\";\n      case \"sw\":\n        return \"se\";\n      case \"e\":\n        return \"w\";\n      case \"w\":\n        return \"e\";\n    }\n  } else {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"sw\";\n      case \"ne\":\n        return \"se\";\n      case \"se\":\n        return \"ne\";\n      case \"sw\":\n        return \"nw\";\n      case \"n\":\n        return \"s\";\n      case \"s\":\n        return \"n\";\n    }\n  }\n\n  return resizeHandle;\n};\n","import { SHIFT_LOCKING_ANGLE } from \"../constants\";\nimport { rescalePoints } from \"../points\";\n\nimport { rotate, adjustXYWithRotation, getFlipAdjustment } from \"../math\";\nimport {\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport {\n  getElementAbsoluteCoords,\n  getCommonBounds,\n  getResizedElementAbsoluteCoords,\n} from \"./bounds\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n} from \"./resizeTest\";\nimport { measureText, getFontString } from \"../utils\";\n\ntype ResizeTestType = ReturnType<typeof resizeTest>;\n\nexport const resizeElements = (\n  resizeHandle: ResizeTestType,\n  setResizeHandle: (nextResizeHandle: ResizeTestType) => void,\n  selectedElements: NonDeletedExcalidrawElement[],\n  resizeArrowDirection: \"origin\" | \"end\",\n  isRotateWithDiscreteAngle: boolean,\n  isResizeWithSidesSameLength: boolean,\n  isResizeCenterPoint: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  if (selectedElements.length === 1) {\n    const [element] = selectedElements;\n    if (resizeHandle === \"rotation\") {\n      rotateSingleElement(\n        element,\n        pointerX,\n        pointerY,\n        isRotateWithDiscreteAngle,\n      );\n    } else if (\n      isLinearElement(element) &&\n      element.points.length === 2 &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTwoPointElement(\n        element,\n        resizeArrowDirection,\n        isRotateWithDiscreteAngle,\n        pointerX,\n        pointerY,\n      );\n    } else if (\n      element.type === \"text\" &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTextElement(\n        element,\n        resizeHandle,\n        isResizeCenterPoint,\n        pointerX,\n        pointerY,\n      );\n    } else if (resizeHandle) {\n      resizeSingleElement(\n        element,\n        resizeHandle,\n        isResizeWithSidesSameLength,\n        isResizeCenterPoint,\n        pointerX,\n        pointerY,\n      );\n      setResizeHandle(normalizeResizeHandle(element, resizeHandle));\n      if (element.width < 0) {\n        mutateElement(element, { width: -element.width });\n      }\n      if (element.height < 0) {\n        mutateElement(element, { height: -element.height });\n      }\n    }\n\n    // update cursor\n    // FIXME it is not very nice to have this here\n    document.documentElement.style.cursor = getCursorForResizingElement({\n      element,\n      resizeHandle,\n    });\n\n    return true;\n  } else if (\n    selectedElements.length > 1 &&\n    (resizeHandle === \"nw\" ||\n      resizeHandle === \"ne\" ||\n      resizeHandle === \"sw\" ||\n      resizeHandle === \"se\")\n  ) {\n    resizeMultipleElements(selectedElements, resizeHandle, pointerX, pointerY);\n    return true;\n  }\n  return false;\n};\n\nconst rotateSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  pointerX: number,\n  pointerY: number,\n  isRotateWithDiscreteAngle: boolean,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  let angle = (5 * Math.PI) / 2 + Math.atan2(pointerY - cy, pointerX - cx);\n  if (isRotateWithDiscreteAngle) {\n    angle += SHIFT_LOCKING_ANGLE / 2;\n    angle -= angle % SHIFT_LOCKING_ANGLE;\n  }\n  if (angle >= 2 * Math.PI) {\n    angle -= 2 * Math.PI;\n  }\n  mutateElement(element, { angle });\n};\n\nconst resizeSingleTwoPointElement = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n  resizeArrowDirection: \"origin\" | \"end\",\n  isRotateWithDiscreteAngle: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const pointOrigin = element.points[0]; // can assume always [0, 0]?\n  const pointEnd = element.points[1];\n  if (resizeArrowDirection === \"end\") {\n    if (isRotateWithDiscreteAngle) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        pointerX - element.x,\n        pointerY - element.y,\n      );\n      mutateElement(element, {\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        points: [\n          pointOrigin,\n          [\n            pointerX - pointOrigin[0] - element.x,\n            pointerY - pointOrigin[1] - element.y,\n          ],\n        ],\n      });\n    }\n  } else {\n    // resizeArrowDirection === \"origin\"\n    if (isRotateWithDiscreteAngle) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        element.x + pointEnd[0] - pointOrigin[0] - pointerX,\n        element.y + pointEnd[1] - pointOrigin[1] - pointerY,\n      );\n      mutateElement(element, {\n        x: element.x + pointEnd[0] - pointOrigin[0] - width,\n        y: element.y + pointEnd[1] - pointOrigin[1] - height,\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        x: pointerX,\n        y: pointerY,\n        points: [\n          pointOrigin,\n          [\n            pointEnd[0] - (pointerX - pointOrigin[0] - element.x),\n            pointEnd[1] - (pointerY - pointOrigin[1] - element.y),\n          ],\n        ],\n      });\n    }\n  }\n};\n\nconst rescalePointsInElement = (\n  element: NonDeletedExcalidrawElement,\n  width: number,\n  height: number,\n) =>\n  isLinearElement(element)\n    ? {\n        points: rescalePoints(\n          0,\n          width,\n          rescalePoints(1, height, element.points),\n        ),\n      }\n    : {};\n\n// This is not computationally ideal, but can't be helped.\nconst measureFontSizeFromWH = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  nextWidth: number,\n  nextHeight: number,\n): { size: number; baseline: number } | null => {\n  let scale = Math.min(nextWidth / element.width, nextHeight / element.height);\n  let nextFontSize = element.fontSize * scale;\n  let metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n  );\n  if (metrics.width - nextWidth < 1 && metrics.height - nextHeight < 1) {\n    return { size: nextFontSize, baseline: metrics.baseline };\n  }\n  // second measurement\n  scale = Math.min(\n    Math.min(nextWidth, metrics.width) / element.width,\n    Math.min(nextHeight, metrics.height) / element.height,\n  );\n  nextFontSize = element.fontSize * scale;\n  metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n  );\n  if (metrics.width - nextWidth < 1 && metrics.height - nextHeight < 1) {\n    return { size: nextFontSize, baseline: metrics.baseline };\n  }\n  // third measurement\n  scale *= 0.99; // just heuristics\n  nextFontSize = element.fontSize * scale;\n  metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n  );\n  if (metrics.width - nextWidth < 1 && metrics.height - nextHeight < 1) {\n    return { size: nextFontSize, baseline: metrics.baseline };\n  }\n  return null;\n};\n\nconst resizeSingleTextElement = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scale;\n  switch (resizeHandle) {\n    case \"se\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n  }\n  if (scale > 0) {\n    const nextWidth = element.width * scale;\n    const nextHeight = element.height * scale;\n    const nextFont = measureFontSizeFromWH(element, nextWidth, nextHeight);\n    if (nextFont === null) {\n      return;\n    }\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n    const [nextElementX, nextElementY] = adjustXYWithRotation(\n      resizeHandle,\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n      isResizeFromCenter,\n    );\n    mutateElement(element, {\n      fontSize: nextFont.size,\n      width: nextWidth,\n      height: nextHeight,\n      baseline: nextFont.baseline,\n      x: nextElementX,\n      y: nextElementY,\n    });\n  }\n};\n\nconst resizeSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  resizeHandle: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  sidesWithSameLength: boolean,\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scaleX = 1;\n  let scaleY = 1;\n  if (resizeHandle === \"e\" || resizeHandle === \"ne\" || resizeHandle === \"se\") {\n    scaleX = (rotatedX - x1) / (x2 - x1);\n  }\n  if (resizeHandle === \"s\" || resizeHandle === \"sw\" || resizeHandle === \"se\") {\n    scaleY = (rotatedY - y1) / (y2 - y1);\n  }\n  if (resizeHandle === \"w\" || resizeHandle === \"nw\" || resizeHandle === \"sw\") {\n    scaleX = (x2 - rotatedX) / (x2 - x1);\n  }\n  if (resizeHandle === \"n\" || resizeHandle === \"nw\" || resizeHandle === \"ne\") {\n    scaleY = (y2 - rotatedY) / (y2 - y1);\n  }\n  let nextWidth = element.width * scaleX;\n  let nextHeight = element.height * scaleY;\n  if (sidesWithSameLength) {\n    nextWidth = nextHeight = Math.max(nextWidth, nextHeight);\n  }\n  const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n    element,\n    nextWidth,\n    nextHeight,\n  );\n  const deltaX1 = (x1 - nextX1) / 2;\n  const deltaY1 = (y1 - nextY1) / 2;\n  const deltaX2 = (x2 - nextX2) / 2;\n  const deltaY2 = (y2 - nextY2) / 2;\n  const rescaledPoints = rescalePointsInElement(element, nextWidth, nextHeight);\n  const [finalX1, finalY1, finalX2, finalY2] = getResizedElementAbsoluteCoords(\n    {\n      ...element,\n      ...rescaledPoints,\n    },\n    Math.abs(nextWidth),\n    Math.abs(nextHeight),\n  );\n  const [flipDiffX, flipDiffY] = getFlipAdjustment(\n    resizeHandle,\n    nextWidth,\n    nextHeight,\n    nextX1,\n    nextY1,\n    nextX2,\n    nextY2,\n    finalX1,\n    finalY1,\n    finalX2,\n    finalY2,\n    isLinearElement(element),\n    element.angle,\n  );\n  const [nextElementX, nextElementY] = adjustXYWithRotation(\n    resizeHandle,\n    element.x - flipDiffX,\n    element.y - flipDiffY,\n    element.angle,\n    deltaX1,\n    deltaY1,\n    deltaX2,\n    deltaY2,\n    isResizeFromCenter,\n  );\n  if (\n    nextWidth !== 0 &&\n    nextHeight !== 0 &&\n    Number.isFinite(nextElementX) &&\n    Number.isFinite(nextElementY)\n  ) {\n    mutateElement(element, {\n      width: nextWidth,\n      height: nextHeight,\n      x: nextElementX,\n      y: nextElementY,\n      ...rescaledPoints,\n    });\n  }\n};\n\nconst resizeMultipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n  let scale: number;\n  let getNextXY: (\n    element: NonDeletedExcalidrawElement,\n    origCoords: readonly [number, number, number, number],\n    finalCoords: readonly [number, number, number, number],\n  ) => { x: number; y: number };\n  switch (resizeHandle) {\n    case \"se\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, origY1], [finalX1, finalY1]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [, , origX2, origY2], [, , finalX2, finalY2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, , , origY2], [finalX1, , , finalY2]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [, origY1, origX2], [, finalY1, finalX2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n  }\n  if (scale > 0) {\n    const updates = elements.reduce(\n      (prev, element) => {\n        if (!prev) {\n          return prev;\n        }\n        const width = element.width * scale;\n        const height = element.height * scale;\n        let font: { fontSize?: number; baseline?: number } = {};\n        if (element.type === \"text\") {\n          const nextFont = measureFontSizeFromWH(element, width, height);\n          if (nextFont === null) {\n            return null;\n          }\n          font = { fontSize: nextFont.size, baseline: nextFont.baseline };\n        }\n        const origCoords = getElementAbsoluteCoords(element);\n        const rescaledPoints = rescalePointsInElement(element, width, height);\n        const finalCoords = getResizedElementAbsoluteCoords(\n          {\n            ...element,\n            ...rescaledPoints,\n          },\n          width,\n          height,\n        );\n        const { x, y } = getNextXY(element, origCoords, finalCoords);\n        return [...prev, { width, height, x, y, ...rescaledPoints, ...font }];\n      },\n      [] as\n        | {\n            width: number;\n            height: number;\n            x: number;\n            y: number;\n            points?: (readonly [number, number])[];\n            fontSize?: number;\n            baseline?: number;\n          }[]\n        | null,\n    );\n    if (updates) {\n      elements.forEach((element, index) => {\n        mutateElement(element, updates[index]);\n      });\n    }\n  }\n};\n\nexport const getResizeOffsetXY = (\n  resizeHandle: ResizeTestType,\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1, x2, y2] =\n    selectedElements.length === 1\n      ? getElementAbsoluteCoords(selectedElements[0])\n      : getCommonBounds(selectedElements);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  const angle = selectedElements.length === 1 ? selectedElements[0].angle : 0;\n  [x, y] = rotate(x, y, cx, cy, -angle);\n  switch (resizeHandle) {\n    case \"n\":\n      return rotate(x - (x1 + x2) / 2, y - y1, 0, 0, angle);\n    case \"s\":\n      return rotate(x - (x1 + x2) / 2, y - y2, 0, 0, angle);\n    case \"w\":\n      return rotate(x - x1, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"e\":\n      return rotate(x - x2, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"nw\":\n      return rotate(x - x1, y - y1, 0, 0, angle);\n    case \"ne\":\n      return rotate(x - x2, y - y1, 0, 0, angle);\n    case \"sw\":\n      return rotate(x - x1, y - y2, 0, 0, angle);\n    case \"se\":\n      return rotate(x - x2, y - y2, 0, 0, angle);\n    default:\n      return [0, 0];\n  }\n};\n\nexport const getResizeArrowDirection = (\n  resizeHandle: ResizeTestType,\n  element: NonDeleted<ExcalidrawLinearElement>,\n): \"origin\" | \"end\" => {\n  const [, [px, py]] = element.points;\n  const isResizeEnd =\n    (resizeHandle === \"nw\" && (px < 0 || py < 0)) ||\n    (resizeHandle === \"ne\" && px >= 0) ||\n    (resizeHandle === \"sw\" && px <= 0) ||\n    (resizeHandle === \"se\" && (px > 0 || py > 0));\n  return isResizeEnd ? \"end\" : \"origin\";\n};\n","import { NonDeletedExcalidrawElement } from \"./types\";\nimport { getCommonBounds } from \"./bounds\";\nimport { mutateElement } from \"./mutateElement\";\nimport { SHAPES } from \"../shapes\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\n\nexport const dragSelectedElements = (\n  selectedElements: NonDeletedExcalidrawElement[],\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  selectedElements.forEach((element) => {\n    mutateElement(element, {\n      x: pointerX + element.x - x1,\n      y: pointerY + element.y - y1,\n    });\n  });\n};\n\nexport const getDragOffsetXY = (\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  return [x - x1, y - y1];\n};\n\nexport const dragNewElement = (\n  draggingElement: NonDeletedExcalidrawElement,\n  elementType: typeof SHAPES[number][\"value\"],\n  originX: number,\n  originY: number,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  isResizeWithSidesSameLength: boolean,\n  isResizeCenterPoint: boolean,\n) => {\n  if (isResizeWithSidesSameLength) {\n    ({ width, height } = getPerfectElementSize(\n      elementType,\n      width,\n      y < originY ? -height : height,\n    ));\n\n    if (height < 0) {\n      height = -height;\n    }\n  }\n\n  let newX = x < originX ? originX - width : originX;\n  let newY = y < originY ? originY - height : originY;\n\n  if (isResizeCenterPoint) {\n    width += width;\n    height += height;\n    newX = originX - width / 2;\n    newY = originY - height / 2;\n  }\n\n  if (width !== 0 && height !== 0) {\n    mutateElement(draggingElement, {\n      x: newX,\n      y: newY,\n      width: width,\n      height: height,\n    });\n  }\n};\n","export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport const KEYS = {\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  DELETE: \"Delete\",\n  BACKSPACE: \"Backspace\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  TAB: \"Tab\",\n  SPACE: \" \",\n  QUESTION_MARK: \"?\",\n  F_KEY_CODE: 70,\n  ALT_KEY_CODE: 18,\n  Z_KEY_CODE: 90,\n  GRID_KEY_CODE: 222,\n  G_KEY_CODE: 71,\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport const isArrowKey = (keyCode: string) =>\n  keyCode === KEYS.ARROW_LEFT ||\n  keyCode === KEYS.ARROW_RIGHT ||\n  keyCode === KEYS.ARROW_DOWN ||\n  keyCode === KEYS.ARROW_UP;\n\nexport const getResizeCenterPointKey = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey || event.which === KEYS.ALT_KEY_CODE;\n\nexport const getResizeWithSidesSameLengthKey = (event: MouseEvent) =>\n  event.shiftKey;\n\nexport const getRotateWithDiscreteAngleKey = (event: MouseEvent) =>\n  event.shiftKey;\n","import { KEYS } from \"../keys\";\nimport { selectNode, isWritableElement, getFontString } from \"../utils\";\nimport { globalSceneState } from \"../scene\";\nimport { isTextElement } from \"./typeChecks\";\nimport { CLASSES } from \"../constants\";\nimport { FontFamily } from \"./types\";\n\nconst trimText = (text: string) => {\n  // whitespace only → trim all because we'd end up inserting invisible element\n  if (!text.trim()) {\n    return \"\";\n  }\n  // replace leading/trailing newlines (only) otherwise it messes up bounding\n  //  box calculation (there's also a bug in FF which inserts trailing newline\n  //  for multiline texts)\n  return text.replace(/^\\n+|\\n+$/g, \"\");\n};\n\ntype TextWysiwygParams = {\n  id: string;\n  initText: string;\n  x: number;\n  y: number;\n  strokeColor: string;\n  fontSize: number;\n  fontFamily: FontFamily;\n  opacity: number;\n  zoom: number;\n  angle: number;\n  textAlign: string;\n  onChange?: (text: string) => void;\n  onSubmit: (text: string) => void;\n  onCancel: () => void;\n};\n\nexport const textWysiwyg = ({\n  id,\n  initText,\n  x,\n  y,\n  strokeColor,\n  fontSize,\n  fontFamily,\n  opacity,\n  zoom,\n  angle,\n  onChange,\n  textAlign,\n  onSubmit,\n  onCancel,\n}: TextWysiwygParams) => {\n  const editable = document.createElement(\"div\");\n  try {\n    editable.contentEditable = \"plaintext-only\";\n  } catch {\n    editable.contentEditable = \"true\";\n  }\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.innerText = initText;\n  editable.dataset.type = \"wysiwyg\";\n\n  const degree = (180 * angle) / Math.PI;\n\n  Object.assign(editable.style, {\n    color: strokeColor,\n    position: \"fixed\",\n    opacity: opacity / 100,\n    top: `${y}px`,\n    left: `${x}px`,\n    transform: `translate(-50%, -50%) scale(${zoom}) rotate(${degree}deg)`,\n    textAlign: textAlign,\n    display: \"inline-block\",\n    font: getFontString({ fontSize, fontFamily }),\n    padding: \"4px\",\n    // This needs to have \"1px solid\" otherwise the carret doesn't show up\n    // the first time on Safari and Chrome!\n    outline: \"1px solid transparent\",\n    whiteSpace: \"nowrap\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n  });\n\n  editable.onpaste = (event) => {\n    try {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) {\n        return;\n      }\n      selection.deleteFromDocument();\n\n      const text = event.clipboardData!.getData(\"text\").replace(/\\r\\n?/g, \"\\n\");\n\n      const span = document.createElement(\"span\");\n      span.innerText = text;\n      const range = selection.getRangeAt(0);\n      range.insertNode(span);\n\n      // deselect\n      window.getSelection()!.removeAllRanges();\n      range.setStart(span, span.childNodes.length);\n      range.setEnd(span, span.childNodes.length);\n      selection.addRange(range);\n\n      event.preventDefault();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (onChange) {\n    editable.oninput = () => {\n      onChange(trimText(editable.innerText));\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && !event.altKey) {\n      event.stopPropagation();\n    }\n  };\n\n  const stopEvent = (event: Event) => {\n    event.stopPropagation();\n  };\n\n  const handleSubmit = () => {\n    if (editable.innerText) {\n      onSubmit(trimText(editable.innerText));\n    } else {\n      onCancel();\n    }\n    cleanup();\n  };\n\n  const cleanup = () => {\n    if (isDestroyed) {\n      return;\n    }\n    isDestroyed = true;\n    // remove events to ensure they don't late-fire\n    editable.onblur = null;\n    editable.onpaste = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    window.removeEventListener(\"pointerdown\", onPointerDown);\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    window.removeEventListener(\"blur\", handleSubmit);\n\n    unbindUpdate();\n\n    document.body.removeChild(editable);\n  };\n\n  const rebindBlur = () => {\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    // deferred to guard against focus traps on various UIs that steal focus\n    //  upon pointerUp\n    setTimeout(() => {\n      editable.onblur = handleSubmit;\n      // case: clicking on the same property → no change → no update → no focus\n      editable.focus();\n    });\n  };\n\n  // prevent blur when changing properties from the menu\n  const onPointerDown = (event: MouseEvent) => {\n    if (\n      event.target instanceof HTMLElement &&\n      event.target.closest(`.${CLASSES.SHAPE_ACTIONS_MENU}`) &&\n      !isWritableElement(event.target)\n    ) {\n      editable.onblur = null;\n      window.addEventListener(\"pointerup\", rebindBlur);\n      // handle edge-case where pointerup doesn't fire e.g. due to user\n      //  alt-tabbing away\n      window.addEventListener(\"blur\", handleSubmit);\n    }\n  };\n\n  // handle updates of textElement properties of editing element\n  const unbindUpdate = globalSceneState.addCallback(() => {\n    const editingElement = globalSceneState\n      .getElementsIncludingDeleted()\n      .find((element) => element.id === id);\n    if (editingElement && isTextElement(editingElement)) {\n      Object.assign(editable.style, {\n        font: getFontString(editingElement),\n        textAlign: editingElement.textAlign,\n        color: editingElement.strokeColor,\n        opacity: editingElement.opacity / 100,\n      });\n    }\n    editable.focus();\n  });\n\n  let isDestroyed = false;\n\n  editable.onblur = handleSubmit;\n  window.addEventListener(\"pointerdown\", onPointerDown);\n  window.addEventListener(\"wheel\", stopEvent, true);\n  document.body.appendChild(editable);\n  editable.focus();\n  selectNode(editable);\n};\n","import { measureText, getFontString } from \"../utils\";\nimport { ExcalidrawTextElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\n\nexport const redrawTextBoundingBox = (element: ExcalidrawTextElement) => {\n  const metrics = measureText(element.text, getFontString(element));\n  mutateElement(element, {\n    width: metrics.width,\n    height: metrics.height,\n    baseline: metrics.baseline,\n  });\n};\n","import { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { getSelectedElements } from \"../scene\";\n\nexport const showSelectedShapeActions = (\n  appState: AppState,\n  elements: readonly NonDeletedExcalidrawElement[],\n) =>\n  Boolean(\n    appState.editingElement ||\n      getSelectedElements(elements, appState).length ||\n      appState.elementType !== \"selection\",\n  );\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport { isInvisiblySmallElement } from \"./sizeHelpers\";\n\nexport {\n  newElement,\n  newTextElement,\n  newLinearElement,\n  duplicateElement,\n} from \"./newElement\";\nexport {\n  getElementAbsoluteCoords,\n  getElementBounds,\n  getCommonBounds,\n  getDiamondPoints,\n  getArrowPoints,\n  getClosestElementBounds,\n} from \"./bounds\";\n\nexport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nexport { hitTest } from \"./collision\";\nexport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n  getElementWithResizeHandler,\n  getResizeHandlerFromCoords,\n} from \"./resizeTest\";\nexport {\n  resizeElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n} from \"./resizeElements\";\nexport {\n  dragSelectedElements,\n  getDragOffsetXY,\n  dragNewElement,\n} from \"./dragElements\";\nexport { isTextElement, isExcalidrawElement } from \"./typeChecks\";\nexport { textWysiwyg } from \"./textWysiwyg\";\nexport { redrawTextBoundingBox } from \"./textElement\";\nexport {\n  getPerfectElementSize,\n  isInvisiblySmallElement,\n  resizePerfectLineForNWHandler,\n  getNormalizedDimensions,\n} from \"./sizeHelpers\";\nexport { showSelectedShapeActions } from \"./showSelectedShapeActions\";\n\nexport const getSyncableElements = (\n  elements: readonly ExcalidrawElement[], // There are places in Excalidraw where synthetic invisibly small elements are added and removed.\n) =>\n  // It's probably best to keep those local otherwise there might be a race condition that\n  // gets the app into an invalid state. I've never seen it happen but I'm worried about it :)\n  elements.filter((el) => el.isDeleted || !isInvisiblySmallElement(el));\n\nexport const getElementMap = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce(\n    (acc: { [key: string]: ExcalidrawElement }, element: ExcalidrawElement) => {\n      acc[element.id] = element;\n      return acc;\n    },\n    {},\n  );\n\nexport const getDrawingVersion = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce((acc, el) => acc + el.version, 0);\n\nexport const getNonDeletedElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter(\n    (element) => !element.isDeleted,\n  ) as readonly NonDeletedExcalidrawElement[];\n\nexport const isNonDeletedElement = <T extends ExcalidrawElement>(\n  element: T,\n): element is NonDeleted<T> => !element.isDeleted;\n","import oc from \"open-color\";\nimport { AppState, FlooredNumber } from \"./types\";\nimport { getDateTime } from \"./utils\";\nimport { t } from \"./i18n\";\nimport { FontFamily } from \"./element/types\";\n\nexport const DEFAULT_FONT_SIZE = 20;\nexport const DEFAULT_FONT_FAMILY: FontFamily = 1;\nexport const DEFAULT_TEXT_ALIGN = \"left\";\n\nexport const getDefaultAppState = (): AppState => {\n  return {\n    isLoading: false,\n    errorMessage: null,\n    draggingElement: null,\n    resizingElement: null,\n    multiElement: null,\n    editingElement: null,\n    editingLinearElement: null,\n    elementType: \"selection\",\n    elementLocked: false,\n    exportBackground: true,\n    shouldAddWatermark: false,\n    currentItemStrokeColor: oc.black,\n    currentItemBackgroundColor: \"transparent\",\n    currentItemFillStyle: \"hachure\",\n    currentItemStrokeWidth: 1,\n    currentItemStrokeStyle: \"solid\",\n    currentItemRoughness: 1,\n    currentItemOpacity: 100,\n    currentItemFontSize: DEFAULT_FONT_SIZE,\n    currentItemFontFamily: DEFAULT_FONT_FAMILY,\n    currentItemTextAlign: DEFAULT_TEXT_ALIGN,\n    viewBackgroundColor: oc.white,\n    scrollX: 0 as FlooredNumber,\n    scrollY: 0 as FlooredNumber,\n    cursorX: 0,\n    cursorY: 0,\n    cursorButton: \"up\",\n    scrolledOutside: false,\n    name: `${t(\"labels.untitled\")}-${getDateTime()}`,\n    username: \"\",\n    isCollaborating: false,\n    isResizing: false,\n    isRotating: false,\n    selectionElement: null,\n    zoom: 1,\n    openMenu: null,\n    lastPointerDownWith: \"mouse\",\n    selectedElementIds: {},\n    previousSelectedElementIds: {},\n    collaborators: new Map(),\n    shouldCacheIgnoreZoom: false,\n    showShortcutsDialog: false,\n    zenModeEnabled: false,\n    gridSize: null,\n    editingGroupId: null,\n    selectedGroupIds: {},\n  };\n};\n\nexport const clearAppStateForLocalStorage = (appState: AppState) => {\n  const {\n    draggingElement,\n    resizingElement,\n    multiElement,\n    editingElement,\n    selectionElement,\n    isResizing,\n    isRotating,\n    collaborators,\n    isCollaborating,\n    isLoading,\n    errorMessage,\n    showShortcutsDialog,\n    editingLinearElement,\n    ...exportedState\n  } = appState;\n  return exportedState;\n};\n\nexport const cleanAppStateForExport = (appState: AppState) => {\n  return {\n    viewBackgroundColor: appState.viewBackgroundColor,\n    gridSize: appState.gridSize,\n  };\n};\n","/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  context.stroke();\n};\n","import oc from \"open-color\";\n\nconst shades = (i: number) => [\n  oc.red[i],\n  oc.pink[i],\n  oc.grape[i],\n  oc.violet[i],\n  oc.indigo[i],\n  oc.blue[i],\n  oc.cyan[i],\n  oc.teal[i],\n  oc.green[i],\n  oc.lime[i],\n  oc.yellow[i],\n  oc.orange[i],\n];\n\nexport default {\n  canvasBackground: [oc.white, oc.gray[0], oc.gray[1], ...shades(0)],\n  elementBackground: [\"transparent\", oc.gray[4], oc.gray[6], ...shades(6)],\n  elementStroke: [oc.black, oc.gray[8], oc.gray[7], ...shades(9)],\n};\n","import colors from \"./colors\";\n\nexport const getClientColors = (clientId: string) => {\n  // Naive way of getting an integer out of the clientId\n  const sum = clientId.split(\"\").reduce((a, str) => a + str.charCodeAt(0), 0);\n\n  // Skip transparent background.\n  const backgrounds = colors.elementBackground.slice(1);\n  const strokes = colors.elementStroke.slice(1);\n  return {\n    background: backgrounds[sum % backgrounds.length],\n    stroke: strokes[sum % strokes.length],\n  };\n};\n\nexport const getClientInitials = (username?: string | null) => {\n  if (!username) {\n    return \"?\";\n  }\n  const names = username.trim().split(\" \");\n\n  if (names.length < 2) {\n    return names[0].substring(0, 2).toUpperCase();\n  }\n\n  const firstName = names[0];\n  const lastName = names[names.length - 1];\n\n  return (firstName[0] + lastName[0]).toUpperCase();\n};\n","import {\n  NonDeleted,\n  ExcalidrawLinearElement,\n  ExcalidrawElement,\n} from \"./types\";\nimport { distance2d, rotate, isPathALoop } from \"../math\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { getElementPointsCoords } from \"./bounds\";\nimport { Point, AppState } from \"../types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { SceneHistory } from \"../history\";\nimport { globalSceneState } from \"../scene\";\n\nexport class LinearElementEditor {\n  public elementId: ExcalidrawElement[\"id\"];\n  public activePointIndex: number | null;\n  public draggingElementPointIndex: number | null;\n  public lastUncommittedPoint: Point | null;\n\n  constructor(element: NonDeleted<ExcalidrawLinearElement>) {\n    LinearElementEditor.normalizePoints(element);\n\n    this.elementId = element.id;\n    this.activePointIndex = null;\n    this.lastUncommittedPoint = null;\n    this.draggingElementPointIndex = null;\n  }\n\n  // ---------------------------------------------------------------------------\n  // static methods\n  // ---------------------------------------------------------------------------\n\n  static POINT_HANDLE_SIZE = 20;\n\n  static getElement(id: ExcalidrawElement[\"id\"]) {\n    const element = globalSceneState.getNonDeletedElement(id);\n    if (element) {\n      return element as NonDeleted<ExcalidrawLinearElement>;\n    }\n    return null;\n  }\n\n  /** @returns whether point was dragged */\n  static handlePointDragging(\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    scenePointerX: number,\n    scenePointerY: number,\n    lastX: number,\n    lastY: number,\n  ): boolean {\n    if (!appState.editingLinearElement) {\n      return false;\n    }\n    const { editingLinearElement } = appState;\n    let { draggingElementPointIndex, elementId } = editingLinearElement;\n\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return false;\n    }\n\n    const clickedPointIndex =\n      draggingElementPointIndex ??\n      LinearElementEditor.getPointIndexUnderCursor(\n        element,\n        appState.zoom,\n        scenePointerX,\n        scenePointerY,\n      );\n\n    draggingElementPointIndex = draggingElementPointIndex ?? clickedPointIndex;\n    if (draggingElementPointIndex > -1) {\n      if (\n        editingLinearElement.draggingElementPointIndex !==\n          draggingElementPointIndex ||\n        editingLinearElement.activePointIndex !== clickedPointIndex\n      ) {\n        setState({\n          editingLinearElement: {\n            ...editingLinearElement,\n            draggingElementPointIndex,\n            activePointIndex: clickedPointIndex,\n          },\n        });\n      }\n\n      const [deltaX, deltaY] = rotate(\n        scenePointerX - lastX,\n        scenePointerY - lastY,\n        0,\n        0,\n        -element.angle,\n      );\n      const targetPoint = element.points[clickedPointIndex];\n      LinearElementEditor.movePoint(element, clickedPointIndex, [\n        targetPoint[0] + deltaX,\n        targetPoint[1] + deltaY,\n      ]);\n      return true;\n    }\n    return false;\n  }\n\n  static handlePointerUp(\n    editingLinearElement: LinearElementEditor,\n  ): LinearElementEditor {\n    const { elementId, draggingElementPointIndex } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    if (\n      draggingElementPointIndex !== null &&\n      (draggingElementPointIndex === 0 ||\n        draggingElementPointIndex === element.points.length - 1) &&\n      isPathALoop(element.points)\n    ) {\n      LinearElementEditor.movePoint(\n        element,\n        draggingElementPointIndex,\n        draggingElementPointIndex === 0\n          ? element.points[element.points.length - 1]\n          : element.points[0],\n      );\n    }\n    if (draggingElementPointIndex !== null) {\n      return {\n        ...editingLinearElement,\n        draggingElementPointIndex: null,\n      };\n    }\n    return editingLinearElement;\n  }\n\n  static handlePointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    history: SceneHistory,\n    scenePointerX: number,\n    scenePointerY: number,\n  ): {\n    didAddPoint: boolean;\n    hitElement: ExcalidrawElement | null;\n  } {\n    const ret: ReturnType<typeof LinearElementEditor[\"handlePointerDown\"]> = {\n      didAddPoint: false,\n      hitElement: null,\n    };\n\n    if (!appState.editingLinearElement) {\n      return ret;\n    }\n\n    const { elementId } = appState.editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n\n    if (!element) {\n      return ret;\n    }\n\n    if (event.altKey) {\n      if (!appState.editingLinearElement.lastUncommittedPoint) {\n        mutateElement(element, {\n          points: [\n            ...element.points,\n            LinearElementEditor.createPointAt(\n              element,\n              scenePointerX,\n              scenePointerY,\n            ),\n          ],\n        });\n      }\n      history.resumeRecording();\n      setState({\n        editingLinearElement: {\n          ...appState.editingLinearElement,\n          activePointIndex: element.points.length - 1,\n          lastUncommittedPoint: null,\n        },\n      });\n      ret.didAddPoint = true;\n      return ret;\n    }\n\n    const clickedPointIndex = LinearElementEditor.getPointIndexUnderCursor(\n      element,\n      appState.zoom,\n      scenePointerX,\n      scenePointerY,\n    );\n\n    // if we clicked on a point, set the element as hitElement otherwise\n    //  it would get deselected if the point is outside the hitbox area\n    if (clickedPointIndex > -1) {\n      ret.hitElement = element;\n    }\n\n    setState({\n      editingLinearElement: {\n        ...appState.editingLinearElement,\n        activePointIndex: clickedPointIndex > -1 ? clickedPointIndex : null,\n      },\n    });\n    return ret;\n  }\n\n  static handlePointerMove(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n    editingLinearElement: LinearElementEditor,\n  ): LinearElementEditor {\n    const { elementId, lastUncommittedPoint } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    const { points } = element;\n    const lastPoint = points[points.length - 1];\n\n    if (!event.altKey) {\n      if (lastPoint === lastUncommittedPoint) {\n        LinearElementEditor.movePoint(element, points.length - 1, \"delete\");\n      }\n      return editingLinearElement;\n    }\n\n    const newPoint = LinearElementEditor.createPointAt(\n      element,\n      scenePointerX,\n      scenePointerY,\n    );\n\n    if (lastPoint === lastUncommittedPoint) {\n      LinearElementEditor.movePoint(\n        element,\n        element.points.length - 1,\n        newPoint,\n      );\n    } else {\n      LinearElementEditor.movePoint(element, \"new\", newPoint);\n    }\n\n    return {\n      ...editingLinearElement,\n      lastUncommittedPoint: element.points[element.points.length - 1],\n    };\n  }\n\n  static getPointsGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n  ) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    return element.points.map((point) => {\n      let { x, y } = element;\n      [x, y] = rotate(x + point[0], y + point[1], cx, cy, element.angle);\n      return [x, y];\n    });\n  }\n\n  static getPointIndexUnderCursor(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    zoom: AppState[\"zoom\"],\n    x: number,\n    y: number,\n  ) {\n    const pointHandles = this.getPointsGlobalCoordinates(element);\n    let idx = pointHandles.length;\n    // loop from right to left because points on the right are rendered over\n    //  points on the left, thus should take precedence when clicking, if they\n    //  overlap\n    while (--idx > -1) {\n      const point = pointHandles[idx];\n      if (\n        distance2d(x, y, point[0], point[1]) * zoom <\n        // +1px to account for outline stroke\n        this.POINT_HANDLE_SIZE / 2 + 1\n      ) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  static createPointAt(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n  ): Point {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const [rotatedX, rotatedY] = rotate(\n      scenePointerX,\n      scenePointerY,\n      cx,\n      cy,\n      -element.angle,\n    );\n\n    return [rotatedX - element.x, rotatedY - element.y];\n  }\n\n  // element-mutating methods\n  // ---------------------------------------------------------------------------\n\n  /**\n   * Normalizes line points so that the start point is at [0,0]. This is\n   *  expected in various parts of the codebase.\n   */\n  static normalizePoints(element: NonDeleted<ExcalidrawLinearElement>) {\n    const { points } = element;\n\n    const offsetX = points[0][0];\n    const offsetY = points[0][1];\n\n    mutateElement(element, {\n      points: points.map((point, _idx) => {\n        return [point[0] - offsetX, point[1] - offsetY] as const;\n      }),\n      x: element.x + offsetX,\n      y: element.y + offsetY,\n    });\n  }\n\n  static movePoint(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    pointIndex: number | \"new\",\n    targetPosition: Point | \"delete\",\n  ) {\n    const { points } = element;\n\n    // in case we're moving start point, instead of modifying its position\n    //  which would break the invariant of it being at [0,0], we move\n    //  all the other points in the opposite direction by delta to\n    //  offset it. We do the same with actual element.x/y position, so\n    //  this hacks are completely transparent to the user.\n    let offsetX = 0;\n    let offsetY = 0;\n\n    let nextPoints: (readonly [number, number])[];\n    if (targetPosition === \"delete\") {\n      // remove point\n      if (pointIndex === \"new\") {\n        throw new Error(\"invalid args in movePoint\");\n      }\n      nextPoints = points.slice();\n      nextPoints.splice(pointIndex, 1);\n      if (pointIndex === 0) {\n        // if deleting first point, make the next to be [0,0] and recalculate\n        //  positions of the rest with respect to it\n        offsetX = nextPoints[0][0];\n        offsetY = nextPoints[0][1];\n        nextPoints = nextPoints.map((point, idx) => {\n          if (idx === 0) {\n            return [0, 0];\n          }\n          return [point[0] - offsetX, point[1] - offsetY];\n        });\n      }\n    } else if (pointIndex === \"new\") {\n      nextPoints = [...points, targetPosition];\n    } else {\n      const deltaX = targetPosition[0] - points[pointIndex][0];\n      const deltaY = targetPosition[1] - points[pointIndex][1];\n      nextPoints = points.map((point, idx) => {\n        if (idx === pointIndex) {\n          if (idx === 0) {\n            offsetX = deltaX;\n            offsetY = deltaY;\n            return point;\n          }\n          offsetX = 0;\n          offsetY = 0;\n\n          return [point[0] + deltaX, point[1] + deltaY] as const;\n        }\n        return offsetX || offsetY\n          ? ([point[0] - offsetX, point[1] - offsetY] as const)\n          : point;\n      });\n    }\n\n    const nextCoords = getElementPointsCoords(element, nextPoints);\n    const prevCoords = getElementPointsCoords(element, points);\n    const nextCenterX = (nextCoords[0] + nextCoords[2]) / 2;\n    const nextCenterY = (nextCoords[1] + nextCoords[3]) / 2;\n    const prevCenterX = (prevCoords[0] + prevCoords[2]) / 2;\n    const prevCenterY = (prevCoords[1] + prevCoords[3]) / 2;\n    const dX = prevCenterX - nextCenterX;\n    const dY = prevCenterY - nextCenterY;\n    const rotated = rotate(offsetX, offsetY, dX, dY, element.angle);\n\n    mutateElement(element, {\n      points: nextPoints,\n      x: element.x + rotated[0],\n      y: element.y + rotated[1],\n    });\n  }\n}\n","import { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport oc from \"open-color\";\n\nimport { FlooredNumber, AppState } from \"../types\";\nimport {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  ExcalidrawLinearElement,\n  NonDeleted,\n  GroupId,\n} from \"../element/types\";\nimport {\n  getElementAbsoluteCoords,\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n  getElementBounds,\n  getCommonBounds,\n} from \"../element\";\n\nimport { roundRect } from \"./roundRect\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  getScrollBars,\n  SCROLLBAR_COLOR,\n  SCROLLBAR_WIDTH,\n} from \"../scene/scrollbars\";\nimport { getSelectedElements } from \"../scene/selection\";\n\nimport { renderElement, renderElementToSvg } from \"./renderElement\";\nimport { getClientColors } from \"../clients\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  isSelectedViaGroup,\n  getSelectedGroupIds,\n  getElementsInGroup,\n} from \"../groups\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nconst strokeRectWithRotation = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n  fill?: boolean,\n) => {\n  context.translate(cx, cy);\n  context.rotate(angle);\n  if (fill) {\n    context.fillRect(x - cx, y - cy, width, height);\n  }\n  context.strokeRect(x - cx, y - cy, width, height);\n  context.rotate(-angle);\n  context.translate(-cx, -cy);\n};\n\nconst strokeCircle = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) => {\n  context.beginPath();\n  context.arc(x + width / 2, y + height / 2, width / 2, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n};\n\nconst strokeGrid = (\n  context: CanvasRenderingContext2D,\n  gridSize: number,\n  offsetX: number,\n  offsetY: number,\n  width: number,\n  height: number,\n) => {\n  const origStrokeStyle = context.strokeStyle;\n  context.strokeStyle = \"rgba(0,0,0,0.1)\";\n  context.beginPath();\n  for (let x = offsetX; x < offsetX + width + gridSize * 2; x += gridSize) {\n    context.moveTo(x, offsetY - gridSize);\n    context.lineTo(x, offsetY + height + gridSize * 2);\n  }\n  for (let y = offsetY; y < offsetY + height + gridSize * 2; y += gridSize) {\n    context.moveTo(offsetX - gridSize, y);\n    context.lineTo(offsetX + width + gridSize * 2, y);\n  }\n  context.stroke();\n  context.strokeStyle = origStrokeStyle;\n};\n\nconst renderLinearPointHandles = (\n  context: CanvasRenderingContext2D,\n  appState: AppState,\n  sceneState: SceneState,\n  element: NonDeleted<ExcalidrawLinearElement>,\n) => {\n  context.translate(sceneState.scrollX, sceneState.scrollY);\n  const origStrokeStyle = context.strokeStyle;\n  const lineWidth = context.lineWidth;\n  context.lineWidth = 1 / sceneState.zoom;\n\n  LinearElementEditor.getPointsGlobalCoordinates(element).forEach(\n    (point, idx) => {\n      context.strokeStyle = \"red\";\n      context.setLineDash([]);\n      context.fillStyle =\n        appState.editingLinearElement?.activePointIndex === idx\n          ? \"rgba(255, 127, 127, 0.9)\"\n          : \"rgba(255, 255, 255, 0.9)\";\n      const { POINT_HANDLE_SIZE } = LinearElementEditor;\n      strokeCircle(\n        context,\n        point[0] - POINT_HANDLE_SIZE / 2 / sceneState.zoom,\n        point[1] - POINT_HANDLE_SIZE / 2 / sceneState.zoom,\n        POINT_HANDLE_SIZE / sceneState.zoom,\n        POINT_HANDLE_SIZE / sceneState.zoom,\n      );\n    },\n  );\n  context.setLineDash([]);\n  context.lineWidth = lineWidth;\n  context.translate(-sceneState.scrollX, -sceneState.scrollY);\n  context.strokeStyle = origStrokeStyle;\n};\n\nexport const renderScene = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  selectionElement: NonDeletedExcalidrawElement | null,\n  scale: number,\n  rc: RoughCanvas,\n  canvas: HTMLCanvasElement,\n  sceneState: SceneState,\n  // extra options, currently passed by export helper\n  {\n    renderScrollbars = true,\n    renderSelection = true,\n    // Whether to employ render optimizations to improve performance.\n    // Should not be turned on for export operations and similar, because it\n    //  doesn't guarantee pixel-perfect output.\n    renderOptimizations = false,\n    renderGrid = true,\n  }: {\n    renderScrollbars?: boolean;\n    renderSelection?: boolean;\n    renderOptimizations?: boolean;\n    renderGrid?: boolean;\n  } = {},\n) => {\n  if (!canvas) {\n    return { atLeastOneVisibleElement: false };\n  }\n\n  const context = canvas.getContext(\"2d\")!;\n  context.scale(scale, scale);\n\n  // When doing calculations based on canvas width we should used normalized one\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  // Paint background\n  if (typeof sceneState.viewBackgroundColor === \"string\") {\n    const hasTransparence =\n      sceneState.viewBackgroundColor === \"transparent\" ||\n      sceneState.viewBackgroundColor.length === 5 || // #RGBA\n      sceneState.viewBackgroundColor.length === 9 || // #RRGGBBA\n      /(hsla|rgba)\\(/.test(sceneState.viewBackgroundColor);\n    if (hasTransparence) {\n      context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    }\n    const fillStyle = context.fillStyle;\n    context.fillStyle = sceneState.viewBackgroundColor;\n    context.fillRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    context.fillStyle = fillStyle;\n  } else {\n    context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n  }\n\n  // Apply zoom\n  const zoomTranslationX = (-normalizedCanvasWidth * (sceneState.zoom - 1)) / 2;\n  const zoomTranslationY =\n    (-normalizedCanvasHeight * (sceneState.zoom - 1)) / 2;\n  context.translate(zoomTranslationX, zoomTranslationY);\n  context.scale(sceneState.zoom, sceneState.zoom);\n\n  // Grid\n  if (renderGrid && appState.gridSize) {\n    strokeGrid(\n      context,\n      appState.gridSize,\n      -Math.ceil(zoomTranslationX / sceneState.zoom / appState.gridSize) *\n        appState.gridSize +\n        (sceneState.scrollX % appState.gridSize),\n      -Math.ceil(zoomTranslationY / sceneState.zoom / appState.gridSize) *\n        appState.gridSize +\n        (sceneState.scrollY % appState.gridSize),\n      normalizedCanvasWidth / sceneState.zoom,\n      normalizedCanvasHeight / sceneState.zoom,\n    );\n  }\n\n  // Paint visible elements\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(\n      element,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    ),\n  );\n\n  visibleElements.forEach((element) => {\n    renderElement(element, rc, context, renderOptimizations, sceneState);\n    if (\n      isLinearElement(element) &&\n      appState.editingLinearElement &&\n      appState.editingLinearElement.elementId === element.id\n    ) {\n      renderLinearPointHandles(context, appState, sceneState, element);\n    }\n  });\n\n  // Paint selection element\n  if (selectionElement) {\n    renderElement(\n      selectionElement,\n      rc,\n      context,\n      renderOptimizations,\n      sceneState,\n    );\n  }\n\n  // Paint selected elements\n  if (\n    renderSelection &&\n    !appState.multiElement &&\n    !appState.editingLinearElement\n  ) {\n    context.translate(sceneState.scrollX, sceneState.scrollY);\n\n    const selections = elements.reduce((acc, element) => {\n      const selectionColors = [];\n      // local user\n      if (\n        appState.selectedElementIds[element.id] &&\n        !isSelectedViaGroup(appState, element)\n      ) {\n        selectionColors.push(oc.black);\n      }\n      // remote users\n      if (sceneState.remoteSelectedElementIds[element.id]) {\n        selectionColors.push(\n          ...sceneState.remoteSelectedElementIds[element.id].map((socketId) => {\n            const { background } = getClientColors(socketId);\n            return background;\n          }),\n        );\n      }\n      if (selectionColors.length) {\n        const [\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n        ] = getElementAbsoluteCoords(element);\n        acc.push({\n          angle: element.angle,\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n          selectionColors,\n        });\n      }\n      return acc;\n    }, [] as { angle: number; elementX1: number; elementY1: number; elementX2: number; elementY2: number; selectionColors: string[] }[]);\n\n    function addSelectionForGroupId(groupId: GroupId) {\n      const groupElements = getElementsInGroup(elements, groupId);\n      const [elementX1, elementY1, elementX2, elementY2] = getCommonBounds(\n        groupElements,\n      );\n      selections.push({\n        angle: 0,\n        elementX1,\n        elementX2,\n        elementY1,\n        elementY2,\n        selectionColors: [oc.black],\n      });\n    }\n\n    for (const groupId of getSelectedGroupIds(appState)) {\n      // TODO: support multiplayer selected group IDs\n      addSelectionForGroupId(groupId);\n    }\n\n    if (appState.editingGroupId) {\n      addSelectionForGroupId(appState.editingGroupId);\n    }\n\n    selections.forEach(\n      ({\n        angle,\n        elementX1,\n        elementY1,\n        elementX2,\n        elementY2,\n        selectionColors,\n      }) => {\n        const elementWidth = elementX2 - elementX1;\n        const elementHeight = elementY2 - elementY1;\n\n        const initialLineDash = context.getLineDash();\n        const lineWidth = context.lineWidth;\n        const lineDashOffset = context.lineDashOffset;\n        const strokeStyle = context.strokeStyle;\n\n        const dashedLinePadding = 4 / sceneState.zoom;\n        const dashWidth = 8 / sceneState.zoom;\n        const spaceWidth = 4 / sceneState.zoom;\n\n        context.lineWidth = 1 / sceneState.zoom;\n\n        const count = selectionColors.length;\n        for (var i = 0; i < count; ++i) {\n          context.strokeStyle = selectionColors[i];\n          context.setLineDash([\n            dashWidth,\n            spaceWidth + (dashWidth + spaceWidth) * (count - 1),\n          ]);\n          context.lineDashOffset = (dashWidth + spaceWidth) * i;\n          strokeRectWithRotation(\n            context,\n            elementX1 - dashedLinePadding,\n            elementY1 - dashedLinePadding,\n            elementWidth + dashedLinePadding * 2,\n            elementHeight + dashedLinePadding * 2,\n            elementX1 + elementWidth / 2,\n            elementY1 + elementHeight / 2,\n            angle,\n          );\n        }\n        context.lineDashOffset = lineDashOffset;\n        context.strokeStyle = strokeStyle;\n        context.lineWidth = lineWidth;\n        context.setLineDash(initialLineDash);\n      },\n    );\n    context.translate(-sceneState.scrollX, -sceneState.scrollY);\n\n    const locallySelectedElements = getSelectedElements(elements, appState);\n\n    // Paint resize handlers\n    if (locallySelectedElements.length === 1) {\n      context.translate(sceneState.scrollX, sceneState.scrollY);\n      context.fillStyle = oc.white;\n      const handlers = handlerRectangles(\n        locallySelectedElements[0],\n        sceneState.zoom,\n      );\n      Object.keys(handlers).forEach((key) => {\n        const handler = handlers[key as HandlerRectanglesRet];\n        if (handler !== undefined) {\n          const lineWidth = context.lineWidth;\n          context.lineWidth = 1 / sceneState.zoom;\n          if (key === \"rotation\") {\n            strokeCircle(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n            );\n          } else {\n            strokeRectWithRotation(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n              handler[0] + handler[2] / 2,\n              handler[1] + handler[3] / 2,\n              locallySelectedElements[0].angle,\n              true, // fill before stroke\n            );\n          }\n          context.lineWidth = lineWidth;\n        }\n      });\n      context.translate(-sceneState.scrollX, -sceneState.scrollY);\n    } else if (locallySelectedElements.length > 1) {\n      const dashedLinePadding = 4 / sceneState.zoom;\n      context.translate(sceneState.scrollX, sceneState.scrollY);\n      context.fillStyle = oc.white;\n      const [x1, y1, x2, y2] = getCommonBounds(locallySelectedElements);\n      const initialLineDash = context.getLineDash();\n      context.setLineDash([2 / sceneState.zoom]);\n      const lineWidth = context.lineWidth;\n      context.lineWidth = 1 / sceneState.zoom;\n      strokeRectWithRotation(\n        context,\n        x1 - dashedLinePadding,\n        y1 - dashedLinePadding,\n        x2 - x1 + dashedLinePadding * 2,\n        y2 - y1 + dashedLinePadding * 2,\n        (x1 + x2) / 2,\n        (y1 + y2) / 2,\n        0,\n      );\n      context.lineWidth = lineWidth;\n      context.setLineDash(initialLineDash);\n      const handlers = handlerRectanglesFromCoords(\n        [x1, y1, x2, y2],\n        0,\n        sceneState.zoom,\n        undefined,\n        OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n      );\n      Object.keys(handlers).forEach((key) => {\n        const handler = handlers[key as HandlerRectanglesRet];\n        if (handler !== undefined) {\n          const lineWidth = context.lineWidth;\n          context.lineWidth = 1 / sceneState.zoom;\n          strokeRectWithRotation(\n            context,\n            handler[0],\n            handler[1],\n            handler[2],\n            handler[3],\n            handler[0] + handler[2] / 2,\n            handler[1] + handler[3] / 2,\n            0,\n            true, // fill before stroke\n          );\n          context.lineWidth = lineWidth;\n        }\n      });\n      context.translate(-sceneState.scrollX, -sceneState.scrollY);\n    }\n  }\n\n  // Reset zoom\n  context.scale(1 / sceneState.zoom, 1 / sceneState.zoom);\n  context.translate(-zoomTranslationX, -zoomTranslationY);\n\n  // Paint remote pointers\n  for (const clientId in sceneState.remotePointerViewportCoords) {\n    let { x, y } = sceneState.remotePointerViewportCoords[clientId];\n    const username = sceneState.remotePointerUsernames[clientId];\n\n    const width = 9;\n    const height = 14;\n\n    const isOutOfBounds =\n      x < 0 ||\n      x > normalizedCanvasWidth - width ||\n      y < 0 ||\n      y > normalizedCanvasHeight - height;\n\n    x = Math.max(x, 0);\n    x = Math.min(x, normalizedCanvasWidth - width);\n    y = Math.max(y, 0);\n    y = Math.min(y, normalizedCanvasHeight - height);\n\n    const { background, stroke } = getClientColors(clientId);\n\n    const strokeStyle = context.strokeStyle;\n    const fillStyle = context.fillStyle;\n    const globalAlpha = context.globalAlpha;\n    context.strokeStyle = stroke;\n    context.fillStyle = background;\n    if (isOutOfBounds) {\n      context.globalAlpha = 0.2;\n    }\n\n    if (\n      sceneState.remotePointerButton &&\n      sceneState.remotePointerButton[clientId] === \"down\"\n    ) {\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 3;\n      context.strokeStyle = \"#ffffff88\";\n      context.stroke();\n      context.closePath();\n\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 1;\n      context.strokeStyle = stroke;\n      context.stroke();\n      context.closePath();\n    }\n\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x + 1, y + 14);\n    context.lineTo(x + 4, y + 9);\n    context.lineTo(x + 9, y + 10);\n    context.lineTo(x, y);\n    context.fill();\n    context.stroke();\n\n    if (!isOutOfBounds && username) {\n      const offsetX = x + width;\n      const offsetY = y + height;\n      const paddingHorizontal = 4;\n      const paddingVertical = 4;\n      const measure = context.measureText(username);\n      const measureHeight =\n        measure.actualBoundingBoxDescent + measure.actualBoundingBoxAscent;\n\n      // Border\n      context.fillStyle = stroke;\n      context.globalAlpha = globalAlpha;\n      context.fillRect(\n        offsetX - 1,\n        offsetY - 1,\n        measure.width + 2 * paddingHorizontal + 2,\n        measureHeight + 2 * paddingVertical + 2,\n      );\n      // Background\n      context.fillStyle = background;\n      context.fillRect(\n        offsetX,\n        offsetY,\n        measure.width + 2 * paddingHorizontal,\n        measureHeight + 2 * paddingVertical,\n      );\n      context.fillStyle = oc.white;\n      context.fillText(\n        username,\n        offsetX + paddingHorizontal,\n        offsetY + paddingVertical + measure.actualBoundingBoxAscent,\n      );\n    }\n\n    context.strokeStyle = strokeStyle;\n    context.fillStyle = fillStyle;\n    context.globalAlpha = globalAlpha;\n    context.closePath();\n  }\n\n  // Paint scrollbars\n  let scrollBars;\n  if (renderScrollbars) {\n    scrollBars = getScrollBars(\n      elements,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    );\n\n    const fillStyle = context.fillStyle;\n    const strokeStyle = context.strokeStyle;\n    context.fillStyle = SCROLLBAR_COLOR;\n    context.strokeStyle = \"rgba(255,255,255,0.8)\";\n    [scrollBars.horizontal, scrollBars.vertical].forEach((scrollBar) => {\n      if (scrollBar) {\n        roundRect(\n          context,\n          scrollBar.x,\n          scrollBar.y,\n          scrollBar.width,\n          scrollBar.height,\n          SCROLLBAR_WIDTH / 2,\n        );\n      }\n    });\n    context.fillStyle = fillStyle;\n    context.strokeStyle = strokeStyle;\n  }\n\n  context.scale(1 / scale, 1 / scale);\n\n  return { atLeastOneVisibleElement: visibleElements.length > 0, scrollBars };\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  return (\n    x2 + scrollX - viewportWidthDiff / 2 >= 0 &&\n    x1 + scrollX - viewportWidthDiff / 2 <= viewportWidthWithZoom &&\n    y2 + scrollY - viewportHeightDiff / 2 >= 0 &&\n    y1 + scrollY - viewportHeightDiff / 2 <= viewportHeightWithZoom\n  );\n};\n\n// This should be only called for exporting purposes\nexport const renderSceneToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  {\n    offsetX = 0,\n    offsetY = 0,\n  }: {\n    offsetX?: number;\n    offsetY?: number;\n  } = {},\n) => {\n  if (!svgRoot) {\n    return;\n  }\n  // render elements\n  elements.forEach((element) => {\n    if (!element.isDeleted) {\n      renderElementToSvg(\n        element,\n        rsvg,\n        svgRoot,\n        element.x + offsetX,\n        element.y + offsetY,\n      );\n    }\n  });\n};\n","import rough from \"roughjs/bin/rough\";\nimport oc from \"open-color\";\nimport { newTextElement } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { renderScene, renderSceneToSvg } from \"../renderer/renderScene\";\nimport { distance, SVG_NS, measureText, getFontString } from \"../utils\";\nimport { normalizeScroll } from \"./scroll\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { DEFAULT_FONT_FAMILY } from \"../appState\";\n\nexport const SVG_EXPORT_TAG = `<!-- svg-source:excalidraw -->`;\n\nexport const exportToCanvas = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    scale?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n  createCanvas: (width: number, height: number) => any = (width, height) => {\n    const tempCanvas = document.createElement(\"canvas\");\n    tempCanvas.width = width * scale;\n    tempCanvas.height = height * scale;\n    return tempCanvas;\n  },\n) => {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate smallest area to fit the contents in\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  const tempCanvas: any = createCanvas(width, height);\n\n  renderScene(\n    sceneElements,\n    appState,\n    null,\n    scale,\n    rough.canvas(tempCanvas),\n    tempCanvas,\n    {\n      viewBackgroundColor: exportBackground ? viewBackgroundColor : null,\n      scrollX: normalizeScroll(-minX + exportPadding),\n      scrollY: normalizeScroll(-minY + exportPadding),\n      zoom: 1,\n      remotePointerViewportCoords: {},\n      remoteSelectedElementIds: {},\n      shouldCacheIgnoreZoom: false,\n      remotePointerUsernames: {},\n    },\n    {\n      renderScrollbars: false,\n      renderSelection: false,\n      renderOptimizations: false,\n      renderGrid: false,\n    },\n  );\n\n  return tempCanvas;\n};\n\nexport const exportToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n): SVGSVGElement => {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate canvas dimensions\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  // initialze SVG root\n  const svgRoot = document.createElementNS(SVG_NS, \"svg\");\n  svgRoot.setAttribute(\"version\", \"1.1\");\n  svgRoot.setAttribute(\"xmlns\", SVG_NS);\n  svgRoot.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n  svgRoot.innerHTML = `\n  ${SVG_EXPORT_TAG}\n  <defs>\n    <style>\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://excalidraw.com/FG_Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n      }\n    </style>\n  </defs>\n  `;\n\n  // render backgroiund rect\n  if (exportBackground && viewBackgroundColor) {\n    const rect = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"width\", `${width}`);\n    rect.setAttribute(\"height\", `${height}`);\n    rect.setAttribute(\"fill\", viewBackgroundColor);\n    svgRoot.appendChild(rect);\n  }\n\n  const rsvg = rough.svg(svgRoot);\n  renderSceneToSvg(sceneElements, rsvg, svgRoot, {\n    offsetX: -minX + exportPadding,\n    offsetY: -minY + exportPadding,\n  });\n\n  return svgRoot;\n};\n\nconst getWatermarkElement = (maxX: number, maxY: number) => {\n  const text = t(\"labels.madeWithExcalidraw\");\n  const fontSize = 16;\n  const fontFamily = DEFAULT_FONT_FAMILY;\n  const { width: textWidth } = measureText(\n    text,\n    getFontString({ fontSize, fontFamily }),\n  );\n\n  return newTextElement({\n    text,\n    fontSize,\n    fontFamily,\n    textAlign: \"center\",\n    x: maxX - textWidth / 2,\n    y: maxY + 16,\n    strokeColor: oc.gray[5],\n    backgroundColor: \"transparent\",\n    fillStyle: \"hachure\",\n    strokeWidth: 1,\n    strokeStyle: \"solid\",\n    roughness: 1,\n    opacity: 100,\n  });\n};\n","import { ExcalidrawElement } from \"./element/types\";\nimport { newElement, newTextElement } from \"./element\";\nimport { AppState } from \"./types\";\nimport { t } from \"./i18n\";\n\ninterface Spreadsheet {\n  yAxisLabel: string | null;\n  labels: string[] | null;\n  values: number[];\n}\n\ntype ParseSpreadsheetResult =\n  | {\n      type: \"not a spreadsheet\";\n    }\n  | { type: \"spreadsheet\"; spreadsheet: Spreadsheet }\n  | {\n      type: \"malformed spreadsheet\";\n      error: string;\n    };\n\nfunction tryParseNumber(s: string): number | null {\n  const match = /^[$€£¥₩]?([0-9]+(\\.[0-9]+)?)$/.exec(s);\n  if (!match) {\n    return null;\n  }\n  return parseFloat(match[1]);\n}\n\nfunction isNumericColumn(lines: string[][], columnIndex: number) {\n  return lines\n    .slice(1)\n    .every((line) => tryParseNumber(line[columnIndex]) !== null);\n}\n\nfunction tryParseCells(cells: string[][]): ParseSpreadsheetResult {\n  const numCols = cells[0].length;\n\n  if (numCols > 2) {\n    return { type: \"malformed spreadsheet\", error: t(\"charts.tooManyColumns\") };\n  }\n\n  if (numCols === 1) {\n    if (!isNumericColumn(cells, 0)) {\n      return { type: \"not a spreadsheet\" };\n    }\n\n    const hasHeader = tryParseNumber(cells[0][0]) === null;\n    const values = (hasHeader ? cells.slice(1) : cells).map((line) =>\n      tryParseNumber(line[0]),\n    );\n\n    if (values.length < 2) {\n      return { type: \"not a spreadsheet\" };\n    }\n\n    return {\n      type: \"spreadsheet\",\n      spreadsheet: {\n        yAxisLabel: hasHeader ? cells[0][0] : null,\n        labels: null,\n        values: values as number[],\n      },\n    };\n  }\n\n  const valueColumnIndex = isNumericColumn(cells, 0) ? 0 : 1;\n\n  if (!isNumericColumn(cells, valueColumnIndex)) {\n    return {\n      type: \"malformed spreadsheet\",\n      error: t(\"charts.noNumericColumn\"),\n    };\n  }\n\n  const labelColumnIndex = (valueColumnIndex + 1) % 2;\n  const hasHeader = tryParseNumber(cells[0][valueColumnIndex]) === null;\n  const rows = hasHeader ? cells.slice(1) : cells;\n\n  if (rows.length < 2) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  return {\n    type: \"spreadsheet\",\n    spreadsheet: {\n      yAxisLabel: hasHeader ? cells[0][valueColumnIndex] : null,\n      labels: rows.map((row) => row[labelColumnIndex]),\n      values: rows.map((row) => tryParseNumber(row[valueColumnIndex])!),\n    },\n  };\n}\n\nfunction transposeCells(cells: string[][]) {\n  const nextCells: string[][] = [];\n  for (let col = 0; col < cells[0].length; col++) {\n    const nextCellRow: string[] = [];\n    for (let row = 0; row < cells.length; row++) {\n      nextCellRow.push(cells[row][col]);\n    }\n    nextCells.push(nextCellRow);\n  }\n\n  return nextCells;\n}\n\nexport function tryParseSpreadsheet(text: string): ParseSpreadsheetResult {\n  // copy/paste from excel, in-browser excel, and google sheets is tsv\n  // for now we only accept 2 columns with an optional header\n  const lines = text\n    .trim()\n    .split(\"\\n\")\n    .map((line) => line.trim().split(\"\\t\"));\n\n  if (lines.length === 0) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  const numColsFirstLine = lines[0].length;\n  const isASpreadsheet = lines.every(\n    (line) => line.length === numColsFirstLine,\n  );\n\n  if (!isASpreadsheet) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  const result = tryParseCells(lines);\n  if (result.type !== \"spreadsheet\") {\n    const transposedResults = tryParseCells(transposeCells(lines));\n    if (transposedResults.type === \"spreadsheet\") {\n      return transposedResults;\n    }\n  }\n\n  return result;\n}\n\nconst BAR_WIDTH = 32;\nconst BAR_SPACING = 12;\nconst BAR_HEIGHT = 192;\nconst LABEL_SPACING = 3 * BAR_SPACING;\nconst Y_AXIS_LABEL_SPACING = LABEL_SPACING;\nconst ANGLE = 5.87;\n\nexport function renderSpreadsheet(\n  appState: AppState,\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ExcalidrawElement[] {\n  const max = Math.max(...spreadsheet.values);\n  const min = Math.min(0, ...spreadsheet.values);\n  const range = max - min;\n\n  const minYLabel = newTextElement({\n    x: x,\n    y: y + BAR_HEIGHT,\n    strokeColor: appState.currentItemStrokeColor,\n    backgroundColor: appState.currentItemBackgroundColor,\n    fillStyle: appState.currentItemFillStyle,\n    strokeWidth: appState.currentItemStrokeWidth,\n    strokeStyle: appState.currentItemStrokeStyle,\n    roughness: appState.currentItemRoughness,\n    opacity: appState.currentItemOpacity,\n    text: min.toLocaleString(),\n    fontSize: 16,\n    fontFamily: appState.currentItemFontFamily,\n    textAlign: appState.currentItemTextAlign,\n  });\n\n  const maxYLabel = newTextElement({\n    x: x,\n    y: y,\n    strokeColor: appState.currentItemStrokeColor,\n    backgroundColor: appState.currentItemBackgroundColor,\n    fillStyle: appState.currentItemFillStyle,\n    strokeWidth: appState.currentItemStrokeWidth,\n    strokeStyle: appState.currentItemStrokeStyle,\n    roughness: appState.currentItemRoughness,\n    opacity: appState.currentItemOpacity,\n    text: max.toLocaleString(),\n    fontSize: 16,\n    fontFamily: appState.currentItemFontFamily,\n    textAlign: appState.currentItemTextAlign,\n  });\n\n  const bars = spreadsheet.values.map((value, i) => {\n    const valueBarHeight = value - min;\n    const percentBarHeight = valueBarHeight / range;\n    const barHeight = percentBarHeight * BAR_HEIGHT;\n    const barX = i * (BAR_WIDTH + BAR_SPACING) + LABEL_SPACING;\n    const barY = BAR_HEIGHT - barHeight;\n    return newElement({\n      type: \"rectangle\",\n      x: barX + x,\n      y: barY + y,\n      width: BAR_WIDTH,\n      height: barHeight,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: appState.currentItemStrokeStyle,\n      roughness: appState.currentItemRoughness,\n      opacity: appState.currentItemOpacity,\n    });\n  });\n\n  const xLabels =\n    spreadsheet.labels?.map((label, i) => {\n      const labelX =\n        i * (BAR_WIDTH + BAR_SPACING) + LABEL_SPACING + BAR_SPACING;\n      const labelY = BAR_HEIGHT + BAR_SPACING;\n      return newTextElement({\n        text: label.length > 8 ? `${label.slice(0, 5)}...` : label,\n        x: x + labelX,\n        y: y + labelY,\n        strokeColor: appState.currentItemStrokeColor,\n        backgroundColor: appState.currentItemBackgroundColor,\n        fillStyle: appState.currentItemFillStyle,\n        strokeWidth: appState.currentItemStrokeWidth,\n        strokeStyle: appState.currentItemStrokeStyle,\n        roughness: appState.currentItemRoughness,\n        opacity: appState.currentItemOpacity,\n        fontSize: 16,\n        fontFamily: appState.currentItemFontFamily,\n        textAlign: \"center\",\n        width: BAR_WIDTH,\n        angle: ANGLE,\n      });\n    }) || [];\n\n  const yAxisLabel = spreadsheet.yAxisLabel\n    ? newTextElement({\n        text: spreadsheet.yAxisLabel,\n        x: x - Y_AXIS_LABEL_SPACING,\n        y: y + BAR_HEIGHT / 2 - 10,\n        strokeColor: appState.currentItemStrokeColor,\n        backgroundColor: appState.currentItemBackgroundColor,\n        fillStyle: appState.currentItemFillStyle,\n        strokeWidth: appState.currentItemStrokeWidth,\n        strokeStyle: appState.currentItemStrokeStyle,\n        roughness: appState.currentItemRoughness,\n        opacity: appState.currentItemOpacity,\n        fontSize: 20,\n        fontFamily: appState.currentItemFontFamily,\n        textAlign: \"center\",\n        width: BAR_WIDTH,\n        angle: ANGLE,\n      })\n    : null;\n\n  return [...bars, yAxisLabel, minYLabel, maxYLabel, ...xLabels].filter(\n    (element) => element !== null,\n  ) as ExcalidrawElement[];\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"./element/types\";\nimport { getSelectedElements } from \"./scene\";\nimport { AppState } from \"./types\";\nimport { SVG_EXPORT_TAG } from \"./scene/export\";\nimport { tryParseSpreadsheet, renderSpreadsheet } from \"./charts\";\n\nlet CLIPBOARD = \"\";\nlet PREFER_APP_CLIPBOARD = false;\n\nexport const probablySupportsClipboardReadText =\n  \"clipboard\" in navigator && \"readText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardWriteText =\n  \"clipboard\" in navigator && \"writeText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardBlob =\n  \"clipboard\" in navigator &&\n  \"write\" in navigator.clipboard &&\n  \"ClipboardItem\" in window &&\n  \"toBlob\" in HTMLCanvasElement.prototype;\n\nexport const copyToAppClipboard = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  CLIPBOARD = JSON.stringify(getSelectedElements(elements, appState));\n  try {\n    // when copying to in-app clipboard, clear system clipboard so that if\n    //  system clip contains text on paste we know it was copied *after* user\n    //  copied elements, and thus we should prefer the text content.\n    await copyTextToSystemClipboard(null);\n    PREFER_APP_CLIPBOARD = false;\n  } catch {\n    // if clearing system clipboard didn't work, we should prefer in-app\n    //  clipboard even if there's text in system clipboard on paste, because\n    //  we can't be sure of the order of copy operations\n    PREFER_APP_CLIPBOARD = true;\n  }\n};\n\nexport const getAppClipboard = (): {\n  elements?: readonly ExcalidrawElement[];\n} => {\n  if (!CLIPBOARD) {\n    return {};\n  }\n\n  try {\n    const clipboardElements = JSON.parse(CLIPBOARD);\n\n    if (\n      Array.isArray(clipboardElements) &&\n      clipboardElements.length > 0 &&\n      clipboardElements[0].type // need to implement a better check here...\n    ) {\n      return { elements: clipboardElements };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return {};\n};\n\nexport const getClipboardContent = async (\n  appState: AppState,\n  cursorX: number,\n  cursorY: number,\n  event: ClipboardEvent | null,\n): Promise<{\n  text?: string;\n  elements?: readonly ExcalidrawElement[];\n  error?: string;\n}> => {\n  try {\n    const text = event\n      ? event.clipboardData?.getData(\"text/plain\").trim()\n      : probablySupportsClipboardReadText &&\n        (await navigator.clipboard.readText());\n\n    if (text && !PREFER_APP_CLIPBOARD && !text.includes(SVG_EXPORT_TAG)) {\n      const result = tryParseSpreadsheet(text);\n      if (result.type === \"spreadsheet\") {\n        return {\n          elements: renderSpreadsheet(\n            appState,\n            result.spreadsheet,\n            cursorX,\n            cursorY,\n          ),\n        };\n      } else if (result.type === \"malformed spreadsheet\") {\n        return { error: result.error };\n      }\n      return { text };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return getAppClipboard();\n};\n\nexport const copyCanvasToClipboardAsPng = async (canvas: HTMLCanvasElement) =>\n  new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob(async (blob: any) => {\n        try {\n          await navigator.clipboard.write([\n            new window.ClipboardItem({ \"image/png\": blob }),\n          ]);\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n\nexport const copyCanvasToClipboardAsSvg = async (svgroot: SVGSVGElement) => {\n  try {\n    await navigator.clipboard.writeText(svgroot.outerHTML);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const copyTextToSystemClipboard = async (text: string | null) => {\n  let copied = false;\n  if (probablySupportsClipboardWriteText) {\n    try {\n      // NOTE: doesn't work on FF on non-HTTPS domains, or when document\n      //  not focused\n      await navigator.clipboard.writeText(text || \"\");\n      copied = true;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Note that execCommand doesn't allow copying empty strings, so if we're\n  //  clearing clipboard using this API, we must copy at least an empty char\n  if (!copied && !copyTextViaExecCommand(text || \" \")) {\n    throw new Error(\"couldn't copy\");\n  }\n};\n\n// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nconst copyTextViaExecCommand = (text: string) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const textarea = document.createElement(\"textarea\");\n\n  textarea.style.border = \"0\";\n  textarea.style.padding = \"0\";\n  textarea.style.margin = \"0\";\n  textarea.style.position = \"absolute\";\n  textarea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\";\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  textarea.style.top = `${yPosition}px`;\n  // Prevent zooming on iOS\n  textarea.style.fontSize = \"12pt\";\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n\n  document.body.appendChild(textarea);\n\n  let success = false;\n\n  try {\n    textarea.select();\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    success = document.execCommand(\"copy\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  textarea.remove();\n\n  return success;\n};\n","import {\n  ExcalidrawElement,\n  FontFamily,\n  ExcalidrawSelectionElement,\n} from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { DataState } from \"./types\";\nimport { isInvisiblySmallElement, getNormalizedDimensions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { randomId } from \"../random\";\nimport { DEFAULT_TEXT_ALIGN, DEFAULT_FONT_FAMILY } from \"../appState\";\nimport { FONT_FAMILY } from \"../constants\";\n\nconst getFontFamilyByName = (fontFamilyName: string): FontFamily => {\n  for (const [id, fontFamilyString] of Object.entries(FONT_FAMILY)) {\n    if (fontFamilyString.includes(fontFamilyName)) {\n      return parseInt(id) as FontFamily;\n    }\n  }\n  return DEFAULT_FONT_FAMILY;\n};\n\nfunction migrateElementWithProperties<T extends ExcalidrawElement>(\n  element: T,\n  extra: Omit<T, keyof ExcalidrawElement>,\n): T {\n  const base: Pick<T, keyof ExcalidrawElement> = {\n    type: element.type,\n    // all elements must have version > 0 so getDrawingVersion() will pick up\n    //  newly added elements\n    version: element.version || 1,\n    versionNonce: element.versionNonce ?? 0,\n    isDeleted: false,\n    id: element.id || randomId(),\n    fillStyle: element.fillStyle || \"hachure\",\n    strokeWidth: element.strokeWidth || 1,\n    strokeStyle: element.strokeStyle ?? \"solid\",\n    roughness: element.roughness ?? 1,\n    opacity: element.opacity == null ? 100 : element.opacity,\n    angle: element.angle || 0,\n    x: element.x || 0,\n    y: element.y || 0,\n    strokeColor: element.strokeColor,\n    backgroundColor: element.backgroundColor,\n    width: element.width || 0,\n    height: element.height || 0,\n    seed: element.seed ?? 1,\n    groupIds: element.groupIds || [],\n  };\n\n  return {\n    ...base,\n    ...getNormalizedDimensions(base),\n    ...extra,\n  } as T;\n}\n\nconst migrateElement = (\n  element: Exclude<ExcalidrawElement, ExcalidrawSelectionElement>,\n): typeof element => {\n  switch (element.type) {\n    case \"text\":\n      let fontSize = element.fontSize;\n      let fontFamily = element.fontFamily;\n      if (\"font\" in element) {\n        const [fontPx, _fontFamily]: [\n          string,\n          string,\n        ] = (element as any).font.split(\" \");\n        fontSize = parseInt(fontPx, 10);\n        fontFamily = getFontFamilyByName(_fontFamily);\n      }\n      return migrateElementWithProperties(element, {\n        fontSize,\n        fontFamily,\n        text: element.text ?? \"\",\n        baseline: element.baseline,\n        textAlign: element.textAlign ?? DEFAULT_TEXT_ALIGN,\n      });\n    case \"draw\":\n    case \"line\":\n    case \"arrow\": {\n      return migrateElementWithProperties(element, {\n        points:\n          // migrate old arrow model to new one\n          !Array.isArray(element.points) || element.points.length < 2\n            ? [\n                [0, 0],\n                [element.width, element.height],\n              ]\n            : element.points,\n      });\n    }\n    // generic elements\n    case \"ellipse\":\n    case \"rectangle\":\n    case \"diamond\":\n      return migrateElementWithProperties(element, {});\n\n    // don't use default case so as to catch a missing an element type case\n    //  (we also don't want to throw, but instead return void so we\n    //   filter out these unsupported elements from the restored array)\n  }\n};\n\nexport const restore = (\n  savedElements: readonly ExcalidrawElement[],\n  savedState: AppState | null,\n  opts?: { scrollToContent: boolean },\n): DataState => {\n  const elements = savedElements.reduce((elements, element) => {\n    // filtering out selection, which is legacy, no longer kept in elements,\n    //  and causing issues if retained\n    if (element.type !== \"selection\" && !isInvisiblySmallElement(element)) {\n      const migratedElement = migrateElement(element);\n      if (migratedElement) {\n        elements.push(migratedElement);\n      }\n    }\n    return elements;\n  }, [] as ExcalidrawElement[]);\n\n  if (opts?.scrollToContent && savedState) {\n    savedState = {\n      ...savedState,\n      ...calculateScrollCenter(elements, savedState, null),\n    };\n  }\n\n  return {\n    elements: elements,\n    appState: savedState,\n  };\n};\n","import { getDefaultAppState } from \"../appState\";\nimport { restore } from \"./restore\";\nimport { t } from \"../i18n\";\n\nexport const loadFromBlob = async (blob: any) => {\n  const updateAppState = (contents: string) => {\n    const defaultAppState = getDefaultAppState();\n    let elements = [];\n    let appState = defaultAppState;\n    try {\n      const data = JSON.parse(contents);\n      if (data.type !== \"excalidraw\") {\n        throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n      }\n      elements = data.elements || [];\n      appState = { ...defaultAppState, ...data.appState };\n    } catch {\n      throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n    }\n    return { elements, appState };\n  };\n\n  if (blob.handle) {\n    (window as any).handle = blob.handle;\n  }\n  let contents;\n  if (\"text\" in Blob) {\n    contents = await blob.text();\n  } else {\n    contents = await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsText(blob, \"utf8\");\n      reader.onloadend = () => {\n        if (reader.readyState === FileReader.DONE) {\n          resolve(reader.result as string);\n        }\n      };\n    });\n  }\n\n  const { elements, appState } = updateAppState(contents);\n  return restore(elements, appState, { scrollToContent: true });\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { cleanAppStateForExport } from \"../appState\";\n\nimport { fileOpen, fileSave } from \"browser-nativefs\";\nimport { loadFromBlob } from \"./blob\";\n\nexport const serializeAsJSON = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): string =>\n  JSON.stringify(\n    {\n      type: \"excalidraw\",\n      version: 2,\n      source: window.location.origin,\n      elements: elements.filter((element) => !element.isDeleted),\n      appState: cleanAppStateForExport(appState),\n    },\n    null,\n    2,\n  );\n\nexport const saveAsJSON = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  fileHandle: any,\n) => {\n  const serialized = serializeAsJSON(elements, appState);\n  const blob = new Blob([serialized], {\n    type: \"application/json\",\n  });\n  const name = `${appState.name}.excalidraw`;\n  (window as any).handle = await fileSave(\n    blob,\n    {\n      fileName: name,\n      description: \"Excalidraw file\",\n      extensions: [\"excalidraw\"],\n    },\n    fileHandle || null,\n  );\n};\n\nexport const loadFromJSON = async () => {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    extensions: [\"json\", \"excalidraw\"],\n    mimeTypes: [\"application/json\"],\n  });\n  return loadFromBlob(blob);\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\n\nconst LOCAL_STORAGE_KEY = \"excalidraw\";\nconst LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\nconst LOCAL_STORAGE_KEY_COLLAB = \"excalidraw-collab\";\n\nexport const saveUsernameToLocalStorage = (username: string) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const restoreUsernameFromLocalStorage = (): string | null => {\n  try {\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\n\nexport const saveToLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY,\n      JSON.stringify(elements.filter((element) => !element.isDeleted)),\n    );\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const restoreFromLocalStorage = () => {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n    savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements = [];\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch {\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState) as AppState;\n      // If we're retrieving from local storage, we should not be collaborating\n      appState.isCollaborating = false;\n      appState.collaborators = new Map();\n    } catch {\n      // Do nothing because appState is already null\n    }\n  }\n  return restore(elements, appState);\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getDefaultAppState } from \"../appState\";\n\nimport { AppState } from \"../types\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport { fileSave } from \"browser-nativefs\";\n\nimport { t } from \"../i18n\";\nimport {\n  copyCanvasToClipboardAsPng,\n  copyCanvasToClipboardAsSvg,\n} from \"../clipboard\";\nimport { serializeAsJSON } from \"./json\";\n\nimport { ExportType } from \"../scene/types\";\nimport { restore } from \"./restore\";\nimport { restoreFromLocalStorage } from \"./localStorage\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { saveAsJSON, loadFromJSON } from \"./json\";\nexport { saveToLocalStorage } from \"./localStorage\";\n\nconst BACKEND_GET = \"https://json.excalidraw.com/api/v1/\";\n\nconst BACKEND_V2_POST = \"https://json.excalidraw.com/api/v2/post/\";\nconst BACKEND_V2_GET = \"https://json.excalidraw.com/api/v2/\";\n\nexport const SOCKET_SERVER = \"https://excalidraw-socket.herokuapp.com\";\n\nexport type EncryptedData = {\n  data: ArrayBuffer;\n  iv: Uint8Array;\n};\n\nexport type SocketUpdateDataSource = {\n  SCENE_INIT: {\n    type: \"SCENE_INIT\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  SCENE_UPDATE: {\n    type: \"SCENE_UPDATE\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  MOUSE_LOCATION: {\n    type: \"MOUSE_LOCATION\";\n    payload: {\n      socketID: string;\n      pointerCoords: { x: number; y: number };\n      button: \"down\" | \"up\";\n      selectedElementIds: AppState[\"selectedElementIds\"];\n      username: string;\n    };\n  };\n};\n\nexport type SocketUpdateDataIncoming =\n  | SocketUpdateDataSource[keyof SocketUpdateDataSource]\n  | {\n      type: \"INVALID_RESPONSE\";\n    };\n\n// TODO: Defined globally, since file handles aren't yet serializable.\n// Once `FileSystemFileHandle` can be serialized, make this\n// part of `AppState`.\n(window as any).handle = null;\n\nconst byteToHex = (byte: number): string => `0${byte.toString(16)}`.slice(-2);\n\nconst generateRandomID = async () => {\n  const arr = new Uint8Array(10);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, byteToHex).join(\"\");\n};\n\nconst generateEncryptionKey = async () => {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  return (await window.crypto.subtle.exportKey(\"jwk\", key)).k;\n};\n\nconst createIV = () => {\n  const arr = new Uint8Array(12);\n  return window.crypto.getRandomValues(arr);\n};\n\nexport const getCollaborationLinkData = (link: string) => {\n  if (link.length === 0) {\n    return;\n  }\n  const hash = new URL(link).hash;\n  return hash.match(/^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/);\n};\n\nexport const generateCollaborationLink = async () => {\n  const id = await generateRandomID();\n  const key = await generateEncryptionKey();\n  return `${window.location.origin}${window.location.pathname}#room=${id},${key}`;\n};\n\nconst getImportedKey = (key: string, usage: KeyUsage) =>\n  window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      alg: \"A128GCM\",\n      ext: true,\n      k: key,\n      key_ops: [\"encrypt\", \"decrypt\"],\n      kty: \"oct\",\n    },\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    false, // extractable\n    [usage],\n  );\n\nexport const encryptAESGEM = async (\n  data: Uint8Array,\n  key: string,\n): Promise<EncryptedData> => {\n  const importedKey = await getImportedKey(key, \"encrypt\");\n  const iv = createIV();\n  return {\n    data: await window.crypto.subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv,\n      },\n      importedKey,\n      data,\n    ),\n    iv,\n  };\n};\n\nexport const decryptAESGEM = async (\n  data: ArrayBuffer,\n  key: string,\n  iv: Uint8Array,\n): Promise<SocketUpdateDataIncoming> => {\n  try {\n    const importedKey = await getImportedKey(key, \"decrypt\");\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iv,\n      },\n      importedKey,\n      data,\n    );\n\n    const decodedData = new TextDecoder(\"utf-8\").decode(\n      new Uint8Array(decrypted) as any,\n    );\n    return JSON.parse(decodedData);\n  } catch (error) {\n    window.alert(t(\"alerts.decryptFailed\"));\n    console.error(error);\n  }\n  return {\n    type: \"INVALID_RESPONSE\",\n  };\n};\n\nexport const exportToBackend = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const json = serializeAsJSON(elements, appState);\n  const encoded = new TextEncoder().encode(json);\n\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  // The iv is set to 0. We are never going to reuse the same key so we don't\n  // need to have an iv. (I hope that's correct...)\n  const iv = new Uint8Array(12);\n  // We use symmetric encryption. AES-GCM is the recommended algorithm and\n  // includes checks that the ciphertext has not been modified by an attacker.\n  const encrypted = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv,\n    },\n    key,\n    encoded,\n  );\n  // We use jwk encoding to be able to extract just the base64 encoded key.\n  // We will hardcode the rest of the attributes when importing back the key.\n  const exportedKey = await window.crypto.subtle.exportKey(\"jwk\", key);\n\n  try {\n    const response = await fetch(BACKEND_V2_POST, {\n      method: \"POST\",\n      body: encrypted,\n    });\n    const json = await response.json();\n    if (json.id) {\n      const url = new URL(window.location.href);\n      // We need to store the key (and less importantly the id) as hash instead\n      // of queryParam in order to never send it to the server\n      url.hash = `json=${json.id},${exportedKey.k!}`;\n      const urlString = url.toString();\n\n      window.prompt(`🔒${t(\"alerts.uploadedSecurly\")}`, urlString);\n    } else {\n      window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n    }\n  } catch (error) {\n    console.error(error);\n    window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n  }\n};\n\nexport const importFromBackend = async (\n  id: string | null,\n  privateKey: string | undefined,\n) => {\n  let elements: readonly ExcalidrawElement[] = [];\n  let appState: AppState = getDefaultAppState();\n\n  try {\n    const response = await fetch(\n      privateKey ? `${BACKEND_V2_GET}${id}` : `${BACKEND_GET}${id}.json`,\n    );\n    if (!response.ok) {\n      window.alert(t(\"alerts.importBackendFailed\"));\n      return restore(elements, appState, { scrollToContent: true });\n    }\n    let data;\n    if (privateKey) {\n      const buffer = await response.arrayBuffer();\n      const key = await getImportedKey(privateKey, \"decrypt\");\n      const iv = new Uint8Array(12);\n      const decrypted = await window.crypto.subtle.decrypt(\n        {\n          name: \"AES-GCM\",\n          iv: iv,\n        },\n        key,\n        buffer,\n      );\n      // We need to convert the decrypted array buffer to a string\n      const string = new window.TextDecoder(\"utf-8\").decode(\n        new Uint8Array(decrypted) as any,\n      );\n      data = JSON.parse(string);\n    } else {\n      // Legacy format\n      data = await response.json();\n    }\n\n    elements = data.elements || elements;\n    appState = { ...appState, ...data.appState };\n  } catch (error) {\n    window.alert(t(\"alerts.importBackendFailed\"));\n    console.error(error);\n  } finally {\n    return restore(elements, appState, { scrollToContent: true });\n  }\n};\n\nexport const exportCanvas = async (\n  type: ExportType,\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    name,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    name: string;\n    scale?: number;\n    shouldAddWatermark: boolean;\n  },\n) => {\n  if (elements.length === 0) {\n    return window.alert(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const tempSvg = exportToSvg(elements, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      shouldAddWatermark,\n    });\n    if (type === \"svg\") {\n      await fileSave(new Blob([tempSvg.outerHTML], { type: \"image/svg+xml\" }), {\n        fileName: `${name}.svg`,\n      });\n      return;\n    } else if (type === \"clipboard-svg\") {\n      copyCanvasToClipboardAsSvg(tempSvg);\n      return;\n    }\n  }\n\n  const tempCanvas = exportToCanvas(elements, appState, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n    scale,\n    shouldAddWatermark,\n  });\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n\n  if (type === \"png\") {\n    const fileName = `${name}.png`;\n    tempCanvas.toBlob(async (blob: any) => {\n      if (blob) {\n        await fileSave(blob, {\n          fileName: fileName,\n        });\n      }\n    });\n  } else if (type === \"clipboard\") {\n    try {\n      copyCanvasToClipboardAsPng(tempCanvas);\n    } catch {\n      window.alert(t(\"alerts.couldNotCopyToClipboard\"));\n    }\n  } else if (type === \"backend\") {\n    const appState = getDefaultAppState();\n    if (exportBackground) {\n      appState.viewBackgroundColor = viewBackgroundColor;\n    }\n    exportToBackend(elements, appState);\n  }\n\n  // clean up the DOM\n  if (tempCanvas !== canvas) {\n    tempCanvas.remove();\n  }\n};\n\nexport const loadScene = async (id: string | null, privateKey?: string) => {\n  let data;\n  if (id != null) {\n    // the private key is used to decrypt the content from the server, take\n    // extra care not to leak it\n    data = await importFromBackend(id, privateKey);\n    window.history.replaceState({}, \"Excalidraw\", window.location.origin);\n  } else {\n    data = restoreFromLocalStorage();\n  }\n\n  return {\n    elements: data.elements,\n    appState: data.appState && { ...data.appState },\n    commitToHistory: false,\n  };\n};\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n\nimport \"./ContextMenu.scss\";\n\ntype ContextMenuOption = {\n  label: string;\n  action(): void;\n};\n\ntype Props = {\n  options: ContextMenuOption[];\n  onCloseRequest?(): void;\n  top: number;\n  left: number;\n};\n\nconst ContextMenu = ({ options, onCloseRequest, top, left }: Props) => (\n  <Popover\n    onCloseRequest={onCloseRequest}\n    top={top}\n    left={left}\n    fitInViewport={true}\n  >\n    <ul\n      className=\"context-menu\"\n      onContextMenu={(event) => event.preventDefault()}\n    >\n      {options.map((option, idx) => (\n        <li key={idx} onClick={onCloseRequest}>\n          <ContextMenuOption {...option} />\n        </li>\n      ))}\n    </ul>\n  </Popover>\n);\n\nconst ContextMenuOption = ({ label, action }: ContextMenuOption) => (\n  <button className=\"context-menu-option\" onClick={action}>\n    {label}\n  </button>\n);\n\nlet contextMenuNode: HTMLDivElement;\nconst getContextMenuNode = (): HTMLDivElement => {\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  return (contextMenuNode = div);\n};\n\ntype ContextMenuParams = {\n  options: (ContextMenuOption | false | null | undefined)[];\n  top: number;\n  left: number;\n};\n\nconst handleClose = () => {\n  unmountComponentAtNode(getContextMenuNode());\n};\n\nexport default {\n  push(params: ContextMenuParams) {\n    const options = Array.of<ContextMenuOption>();\n    params.options.forEach((option) => {\n      if (option) {\n        options.push(option);\n      }\n    });\n    if (options.length) {\n      render(\n        <ContextMenu\n          top={params.top}\n          left={params.left}\n          options={options}\n          onCloseRequest={handleClose}\n        />,\n        getContextMenuNode(),\n      );\n    }\n  },\n};\n","import { encryptAESGEM } from \"../data\";\n\nimport { SocketUpdateData } from \"../types\";\nimport { BROADCAST, SCENE } from \"../constants\";\nimport App from \"./App\";\n\nclass Portal {\n  app: App;\n  socket: SocketIOClient.Socket | null = null;\n  socketInitialized: boolean = false; // we don't want the socket to emit any updates until it is fully initialized\n  roomID: string | null = null;\n  roomKey: string | null = null;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  open(socket: SocketIOClient.Socket, id: string, key: string) {\n    this.socket = socket;\n    this.roomID = id;\n    this.roomKey = key;\n\n    // Initialize socket listeners (moving from App)\n    this.socket.on(\"init-room\", () => {\n      if (this.socket) {\n        this.socket.emit(\"join-room\", this.roomID);\n\n        this.app.restoreUserName();\n      }\n    });\n    this.socket.on(\"new-user\", async (_socketID: string) => {\n      this.app.broadcastScene(SCENE.INIT, /* syncAll */ true);\n    });\n    this.socket.on(\"room-user-change\", (clients: string[]) => {\n      this.app.setCollaborators(clients);\n    });\n  }\n\n  close() {\n    if (!this.socket) {\n      return;\n    }\n    this.socket.close();\n    this.socket = null;\n    this.roomID = null;\n    this.roomKey = null;\n  }\n\n  isOpen() {\n    return !!(\n      this.socketInitialized &&\n      this.socket &&\n      this.roomID &&\n      this.roomKey\n    );\n  }\n\n  async _broadcastSocketData(\n    data: SocketUpdateData,\n    volatile: boolean = false,\n  ) {\n    if (this.isOpen()) {\n      const json = JSON.stringify(data);\n      const encoded = new TextEncoder().encode(json);\n      const encrypted = await encryptAESGEM(encoded, this.roomKey!);\n      this.socket!.emit(\n        volatile ? BROADCAST.SERVER_VOLATILE : BROADCAST.SERVER,\n        this.roomID,\n        encrypted.data,\n        encrypted.iv,\n      );\n    }\n  }\n}\nexport default Portal;\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// We inline font-awesome icons in order to save on js size rather than including the font awesome react library\nexport const SHAPES = [\n  {\n    icon: (\n      // fa-mouse-pointer\n      <svg viewBox=\"0 0 320 512\" className=\"\">\n        <path d=\"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\" />\n      </svg>\n    ),\n    value: \"selection\",\n    key: \"s\",\n  },\n  {\n    icon: (\n      // fa-square\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\" />\n      </svg>\n    ),\n    value: \"rectangle\",\n    key: \"r\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 223.646 223.646\">\n        <path d=\"M111.823 0L16.622 111.823 111.823 223.646 207.025 111.823z\" />\n      </svg>\n    ),\n    value: \"diamond\",\n    key: \"d\",\n  },\n  {\n    icon: (\n      // fa-circle\n      <svg viewBox=\"0 0 512 512\">\n        <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />\n      </svg>\n    ),\n    value: \"ellipse\",\n    key: \"e\",\n  },\n  {\n    icon: (\n      // fa-long-arrow-alt-right\n      <svg viewBox=\"0 0 448 512\" className=\"rtl-mirror\">\n        <path d=\"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\" />\n      </svg>\n    ),\n    value: \"arrow\",\n    key: \"a\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 6 6\">\n        <line\n          x1=\"0\"\n          y1=\"3\"\n          x2=\"6\"\n          y2=\"3\"\n          stroke={oc.black}\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    ),\n    value: \"line\",\n    key: \"l\",\n  },\n  {\n    icon: (\n      // fa-pencil\n      <svg viewBox=\"0 0 512 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n        ></path>\n      </svg>\n    ),\n    value: \"draw\",\n    key: \"x\",\n  },\n  {\n    icon: (\n      // fa-font\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M432 416h-23.41L277.88 53.69A32 32 0 0 0 247.58 32h-47.16a32 32 0 0 0-30.3 21.69L39.41 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-19.58l23.3-64h152.56l23.3 64H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176.85 272L224 142.51 271.15 272z\" />\n      </svg>\n    ),\n    value: \"text\",\n    key: \"t\",\n  },\n] as const;\n\nexport const shapesShortcutKeys = SHAPES.map((shape, index) => [\n  shape.key,\n  (index + 1).toString(),\n]).flat(1);\n\nexport const findShapeByKey = (key: string) =>\n  SHAPES.find((shape, index) => {\n    return shape.key === key.toLowerCase() || key === (index + 1).toString();\n  })?.value || \"selection\";\n","import { AppState } from \"./types\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { isLinearElement } from \"./element/typeChecks\";\nimport { deepCopyElement } from \"./element/newElement\";\n\nexport interface HistoryEntry {\n  appState: ReturnType<typeof clearAppStatePropertiesForHistory>;\n  elements: ExcalidrawElement[];\n}\n\ninterface DehydratedExcalidrawElement {\n  id: string;\n  versionNonce: number;\n}\n\ninterface DehydratedHistoryEntry {\n  appState: string;\n  elements: DehydratedExcalidrawElement[];\n}\n\nconst clearAppStatePropertiesForHistory = (appState: AppState) => {\n  return {\n    selectedElementIds: appState.selectedElementIds,\n    viewBackgroundColor: appState.viewBackgroundColor,\n    editingLinearElement: appState.editingLinearElement,\n    editingGroupId: appState.editingGroupId,\n    name: appState.name,\n  };\n};\n\nexport class SceneHistory {\n  private elementCache = new Map<string, Map<number, ExcalidrawElement>>();\n  private recording: boolean = true;\n  private stateHistory: DehydratedHistoryEntry[] = [];\n  private redoStack: DehydratedHistoryEntry[] = [];\n  private lastEntry: HistoryEntry | null = null;\n\n  private hydrateHistoryEntry({\n    appState,\n    elements,\n  }: DehydratedHistoryEntry): HistoryEntry {\n    return {\n      appState: JSON.parse(appState),\n      elements: elements.map((dehydratedExcalidrawElement) => {\n        const element = this.elementCache\n          .get(dehydratedExcalidrawElement.id)\n          ?.get(dehydratedExcalidrawElement.versionNonce);\n        if (!element) {\n          throw new Error(\n            `Element not found: ${dehydratedExcalidrawElement.id}:${dehydratedExcalidrawElement.versionNonce}`,\n          );\n        }\n        return element;\n      }),\n    };\n  }\n\n  private dehydrateHistoryEntry({\n    appState,\n    elements,\n  }: HistoryEntry): DehydratedHistoryEntry {\n    return {\n      appState: JSON.stringify(appState),\n      elements: elements.map((element: ExcalidrawElement) => {\n        if (!this.elementCache.has(element.id)) {\n          this.elementCache.set(element.id, new Map());\n        }\n        const versions = this.elementCache.get(element.id)!;\n        if (!versions.has(element.versionNonce)) {\n          versions.set(element.versionNonce, deepCopyElement(element));\n        }\n        return {\n          id: element.id,\n          versionNonce: element.versionNonce,\n        };\n      }),\n    };\n  }\n\n  getSnapshotForTest() {\n    return {\n      recording: this.recording,\n      stateHistory: this.stateHistory.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n      redoStack: this.redoStack.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n    };\n  }\n\n  clear() {\n    this.stateHistory.length = 0;\n    this.redoStack.length = 0;\n    this.lastEntry = null;\n    this.elementCache.clear();\n  }\n\n  private generateEntry = (\n    appState: AppState,\n    elements: readonly ExcalidrawElement[],\n  ): DehydratedHistoryEntry =>\n    this.dehydrateHistoryEntry({\n      appState: clearAppStatePropertiesForHistory(appState),\n      elements: elements.reduce((elements, element) => {\n        if (\n          isLinearElement(element) &&\n          appState.multiElement &&\n          appState.multiElement.id === element.id\n        ) {\n          // don't store multi-point arrow if still has only one point\n          if (\n            appState.multiElement &&\n            appState.multiElement.id === element.id &&\n            element.points.length < 2\n          ) {\n            return elements;\n          }\n\n          elements.push({\n            ...element,\n            // don't store last point if not committed\n            points:\n              element.lastCommittedPoint !==\n              element.points[element.points.length - 1]\n                ? element.points.slice(0, -1)\n                : element.points,\n          });\n        } else {\n          elements.push(element);\n        }\n        return elements;\n      }, [] as Mutable<typeof elements>),\n    });\n\n  shouldCreateEntry(nextEntry: HistoryEntry): boolean {\n    const { lastEntry } = this;\n\n    if (!lastEntry) {\n      return true;\n    }\n\n    if (nextEntry.elements.length !== lastEntry.elements.length) {\n      return true;\n    }\n\n    // loop from right to left as changes are likelier to happen on new elements\n    for (let i = nextEntry.elements.length - 1; i > -1; i--) {\n      const prev = nextEntry.elements[i];\n      const next = lastEntry.elements[i];\n      if (\n        !prev ||\n        !next ||\n        prev.id !== next.id ||\n        prev.versionNonce !== next.versionNonce\n      ) {\n        return true;\n      }\n    }\n\n    // note: this is safe because entry's appState is guaranteed no excess props\n    let key: keyof typeof nextEntry.appState;\n    for (key in nextEntry.appState) {\n      if (key === \"editingLinearElement\") {\n        if (\n          nextEntry.appState[key]?.elementId ===\n          lastEntry.appState[key]?.elementId\n        ) {\n          continue;\n        }\n      }\n      if (key === \"selectedElementIds\") {\n        continue;\n      }\n      if (nextEntry.appState[key] !== lastEntry.appState[key]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  pushEntry(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    const newEntryDehydrated = this.generateEntry(appState, elements);\n    const newEntry: HistoryEntry = this.hydrateHistoryEntry(newEntryDehydrated);\n\n    if (newEntry) {\n      if (!this.shouldCreateEntry(newEntry)) {\n        return;\n      }\n\n      this.stateHistory.push(newEntryDehydrated);\n      this.lastEntry = newEntry;\n      // As a new entry was pushed, we invalidate the redo stack\n      this.clearRedoStack();\n    }\n  }\n\n  clearRedoStack() {\n    this.redoStack.splice(0, this.redoStack.length);\n  }\n\n  redoOnce(): HistoryEntry | null {\n    if (this.redoStack.length === 0) {\n      return null;\n    }\n\n    const entryToRestore = this.redoStack.pop();\n\n    if (entryToRestore !== undefined) {\n      this.stateHistory.push(entryToRestore);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  undoOnce(): HistoryEntry | null {\n    if (this.stateHistory.length === 1) {\n      return null;\n    }\n\n    const currentEntry = this.stateHistory.pop();\n\n    const entryToRestore = this.stateHistory[this.stateHistory.length - 1];\n\n    if (currentEntry !== undefined) {\n      this.redoStack.push(currentEntry);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  /**\n   * Updates history's `lastEntry` to latest app state. This is necessary\n   *  when doing undo/redo which itself doesn't commit to history, but updates\n   *  app state in a way that would break `shouldCreateEntry` which relies on\n   *  `lastEntry` to reflect last comittable history state.\n   * We can't update `lastEntry` from within history when calling undo/redo\n   *  because the action potentially mutates appState/elements before storing\n   *  it.\n   */\n  setCurrentState(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    this.lastEntry = this.hydrateHistoryEntry(\n      this.generateEntry(appState, elements),\n    );\n  }\n\n  // Suspicious that this is called so many places. Seems error-prone.\n  resumeRecording() {\n    this.recording = true;\n  }\n\n  record(state: AppState, elements: readonly ExcalidrawElement[]) {\n    if (this.recording) {\n      this.pushEntry(state, elements);\n      this.recording = false;\n    }\n  }\n}\n\nexport const createHistory: () => { history: SceneHistory } = () => {\n  const history = new SceneHistory();\n  return { history };\n};\n","import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.css\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n};\n\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n}: Props) => {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const { x, y, width, height } = element.getBoundingClientRect();\n\n      const viewportWidth = window.innerWidth;\n      if (x + width > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n      const viewportHeight = window.innerHeight;\n      if (y + height > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" style={{ top: top, left: left }} ref={popoverRef}>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Action,\n  ActionsManagerInterface,\n  UpdaterFn,\n  ActionFilterFn,\n  ActionName,\n} from \"./types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { globalSceneState } from \"../scene\";\n\nexport class ActionManager implements ActionsManagerInterface {\n  actions = {} as ActionsManagerInterface[\"actions\"];\n\n  updater: UpdaterFn;\n\n  getAppState: () => AppState;\n\n  getElementsIncludingDeleted: () => readonly ExcalidrawElement[];\n\n  constructor(\n    updater: UpdaterFn,\n    getAppState: () => AppState,\n    getElementsIncludingDeleted: () => ReturnType<\n      typeof globalSceneState[\"getElementsIncludingDeleted\"]\n    >,\n  ) {\n    this.updater = updater;\n    this.getAppState = getAppState;\n    this.getElementsIncludingDeleted = getElementsIncludingDeleted;\n  }\n\n  registerAction(action: Action) {\n    this.actions[action.name] = action;\n  }\n\n  registerAll(actions: readonly Action[]) {\n    actions.forEach((action) => this.registerAction(action));\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const data = Object.values(this.actions)\n      .sort((a, b) => (b.keyPriority || 0) - (a.keyPriority || 0))\n      .filter(\n        (action) =>\n          action.keyTest &&\n          action.keyTest(\n            event,\n            this.getAppState(),\n            this.getElementsIncludingDeleted(),\n          ),\n      );\n\n    if (data.length === 0) {\n      return false;\n    }\n\n    event.preventDefault();\n    this.updater(\n      data[0].perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n    return true;\n  }\n\n  executeAction(action: Action) {\n    this.updater(\n      action.perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n  }\n\n  getContextMenuItems(actionFilter: ActionFilterFn = (action) => action) {\n    return Object.values(this.actions)\n      .filter(actionFilter)\n      .filter((action) => \"contextItemLabel\" in action)\n      .sort(\n        (a, b) =>\n          (a.contextMenuOrder !== undefined ? a.contextMenuOrder : 999) -\n          (b.contextMenuOrder !== undefined ? b.contextMenuOrder : 999),\n      )\n      .map((action) => ({\n        label: action.contextItemLabel ? t(action.contextItemLabel) : \"\",\n        action: () => {\n          this.updater(\n            action.perform(\n              this.getElementsIncludingDeleted(),\n              this.getAppState(),\n              null,\n            ),\n          );\n        },\n      }));\n  }\n\n  // Id is an attribute that we can use to pass in data like keys.\n  // This is needed for dynamically generated action components\n  // like the user list. We can use this key to extract more\n  // data from app state. This is an alternative to generic prop hell!\n  renderAction = (name: ActionName, id?: string) => {\n    if (this.actions[name] && \"PanelComponent\" in this.actions[name]) {\n      const action = this.actions[name];\n      const PanelComponent = action.PanelComponent!;\n      const updateData = (formState?: any) => {\n        this.updater(\n          action.perform(\n            this.getElementsIncludingDeleted(),\n            this.getAppState(),\n            formState,\n          ),\n        );\n      };\n\n      return (\n        <PanelComponent\n          elements={this.getElementsIncludingDeleted()}\n          appState={this.getAppState()}\n          updateData={updateData}\n          id={id}\n        />\n      );\n    }\n\n    return null;\n  };\n}\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype ToolIconSize = \"s\" | \"m\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolIconSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  hidden?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n\n      checked: boolean;\n      onChange?(): void;\n    });\n\nconst DEFAULT_SIZE: ToolIconSize = \"m\";\n\nexport const ToolButton = React.forwardRef((props: ToolButtonProps, ref) => {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return (\n      <button\n        className={`ToolIcon_type_button ${\n          !props.hidden ? \"ToolIcon\" : \"\"\n        } ${sizeCn}${props.selected ? \" ToolIcon--selected\" : \"\"} ${\n          props.className\n        } ${\n          props.visible && !props.hidden\n            ? \"ToolIcon_type_button--show\"\n            : \"ToolIcon_type_button--hide\"\n        }`}\n        hidden={props.hidden}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n      >\n        <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n          {props.icon || props.label}\n        </div>\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label className=\"ToolIcon\" title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\",\n};\n","//\n// All icons are imported from https://fontawesome.com/icons?d=gallery\n// Icons are under the license https://fontawesome.com/license\n//\n\nimport React from \"react\";\n\nimport oc from \"open-color\";\n\nconst ACTIVE_ELEMENT_COLOR = oc.orange[4];\ntype Opts = { width?: number; height?: number; mirror?: true } & React.SVGProps<\n  SVGSVGElement\n>;\n\nconst createIcon = (d: string | React.ReactNode, opts: number | Opts = 512) => {\n  const { width = 512, height = width, mirror, style } =\n    typeof opts === \"number\" ? ({ width: opts } as Opts) : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      className={mirror && \"rtl-mirror\"}\n      style={style}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nexport const link = createIcon(\n  \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\",\n  { mirror: true },\n);\n\nexport const save = createIcon(\n  \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\",\n  { width: 448, height: 512 },\n);\n\nexport const saveAs = createIcon(\n  \"M252 54L203 8a28 27 0 00-20-8H28C12 0 0 12 0 27v195c0 15 12 26 28 26h204c15 0 28-11 28-26V73a28 27 0 00-8-19zM130 213c-21 0-37-16-37-36 0-19 16-35 37-35 20 0 37 16 37 35 0 20-17 36-37 36zm56-169v56c0 4-4 6-7 6H44c-4 0-7-2-7-6V42c0-4 3-7 7-7h133l4 2 3 2a7 7 0 012 5z M296 201l87 95-188 205-78 9c-10 1-19-8-18-20l9-84zm141-14l-41-44a31 31 0 00-46 0l-38 41 87 95 38-42c13-14 13-36 0-50z\",\n  { width: 448, height: 512 },\n);\n\nexport const load = createIcon(\n  \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const clipboard = createIcon(\n  \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\",\n  { width: 384, height: 512 },\n);\n\nexport const trash = createIcon(\n  \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\",\n  { width: 448, height: 512 },\n);\n\nexport const palette = createIcon(\n  \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\",\n);\n\nexport const exportFile = createIcon(\n  \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const zoomIn = createIcon(\n  \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const zoomOut = createIcon(\n  \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const done = createIcon(\n  \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\",\n  { mirror: true },\n);\n\nexport const menu = createIcon(\n  \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n);\n\nexport const undo = createIcon(\n  \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\",\n  { mirror: true },\n);\n\nexport const redo = createIcon(\n  \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\",\n  { mirror: true },\n);\n\n// Icon imported form Storybook\n// Storybook is licensed under MIT https://github.com/storybookjs/storybook/blob/next/LICENSE\nexport const resetZoom = createIcon(\n  <path\n    stroke=\"currentColor\"\n    strokeWidth=\"40\"\n    fill=\"currentColor\"\n    d=\"M148 560a318 318 0 0 0 522 110 316 316 0 0 0 0-450 316 316 0 0 0-450 0c-11 11-21 22-30 34v4h47c25 0 46 21 46 46s-21 45-46 45H90c-13 0-25-6-33-14-9-9-14-20-14-33V156c0-25 20-45 45-45s45 20 45 45v32l1 1a401 401 0 0 1 623 509l212 212a42 42 0 0 1-59 59L698 757A401 401 0 0 1 65 570a42 42 0 0 1 83-10z\"\n  />,\n  { width: 1024 },\n);\n\nexport const bringForward = createIcon(\n  <>\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H16v8H8v4.444C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendBackward = createIcon(\n  <>\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H9.556C8.696 8 8 8.697 8 9.556v10.888C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const bringToFront = createIcon(\n  <>\n    <path\n      d=\"M13 21a1 1 0 001 1h7a1 1 0 001-1v-7a1 1 0 00-1-1h-3v5h-5v3zM11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h3V6h5V3z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendToBack = createIcon(\n  <>\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h8V3zM22 14a1 1 0 00-1-1h-7a1 1 0 00-1 1v7a1 1 0 001 1h8v-8z\"\n      stroke={oc.black}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const users = createIcon(\n  \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\",\n  { width: 640, height: 512, mirror: true },\n);\n\nexport const start = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\",\n);\n\nexport const stop = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\",\n);\n\nexport const close = createIcon(\n  \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\",\n  { width: 352, height: 512 },\n);\n\nexport const back = createIcon(\n  \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\",\n  { width: 320, height: 512, style: { marginLeft: \"-0.2rem\" }, mirror: true },\n);\n\nexport const clone = createIcon(\n  \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\",\n  { mirror: true },\n);\n\n// modified https://feathericons.com/?query=shield\nexport const shield = createIcon(\n  \"M11.553 22.894a.998.998 0 00.894 0s3.037-1.516 5.465-4.097C19.616 16.987 21 14.663 21 12V5a1 1 0 00-.649-.936l-8-3a.998.998 0 00-.702 0l-8 3A1 1 0 003 5v7c0 2.663 1.384 4.987 3.088 6.797 2.428 2.581 5.465 4.097 5.465 4.097zm-1.303-8.481l6.644-6.644a.856.856 0 111.212 1.212l-7.25 7.25a.856.856 0 01-1.212 0l-3.75-3.75a.856.856 0 111.212-1.212l3.144 3.144z\",\n  { width: 24 },\n);\n","import { Action } from \"./types\";\n\nexport let actions: readonly Action[] = [];\n\nexport const register = (action: Action): Action => {\n  actions = actions.concat(action);\n  return action;\n};\n","import { isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport React from \"react\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getElementsInGroup } from \"../groups\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nconst deleteSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return {\n    elements: elements.map((el) => {\n      if (appState.selectedElementIds[el.id]) {\n        return newElementWith(el, { isDeleted: true });\n      }\n      return el;\n    }),\n    appState: {\n      ...appState,\n      selectedElementIds: {},\n    },\n  };\n};\n\nfunction handleGroupEditingState(\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n): AppState {\n  if (appState.editingGroupId) {\n    const siblingElements = getElementsInGroup(\n      getNonDeletedElements(elements),\n      appState.editingGroupId!,\n    );\n    if (siblingElements.length) {\n      return {\n        ...appState,\n        selectedElementIds: { [siblingElements[0].id]: true },\n      };\n    }\n  }\n  return appState;\n}\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: (elements, appState) => {\n    if (\n      appState.editingLinearElement?.activePointIndex != null &&\n      appState.editingLinearElement?.activePointIndex > -1\n    ) {\n      const { elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n      if (element) {\n        // case: deleting last point\n        if (element.points.length < 2) {\n          const nextElements = elements.filter((el) => el.id !== element.id);\n          const nextAppState = handleGroupEditingState(appState, nextElements);\n\n          return {\n            elements: nextElements,\n            appState: {\n              ...nextAppState,\n              editingLinearElement: null,\n            },\n            commitToHistory: false,\n          };\n        }\n\n        LinearElementEditor.movePoint(\n          element,\n          appState.editingLinearElement.activePointIndex,\n          \"delete\",\n        );\n\n        return {\n          elements: elements,\n          appState: {\n            ...appState,\n            editingLinearElement: {\n              ...appState.editingLinearElement,\n              activePointIndex:\n                appState.editingLinearElement.activePointIndex > 0\n                  ? appState.editingLinearElement.activePointIndex - 1\n                  : 0,\n            },\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let {\n      elements: nextElements,\n      appState: nextAppState,\n    } = deleteSelectedElements(elements, appState);\n\n    nextAppState = handleGroupEditingState(nextAppState, nextElements);\n\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        elementType: \"selection\",\n        multiElement: null,\n      },\n      commitToHistory: isSomeElementSelected(\n        getNonDeletedElements(elements),\n        appState,\n      ),\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  contextMenuOrder: 3,\n  keyTest: (event) => event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","const swap = <T>(elements: T[], indexA: number, indexB: number) => {\n  const element = elements[indexA];\n  elements[indexA] = elements[indexB];\n  elements[indexB] = element;\n};\n\nexport const moveOneLeft = <T>(elements: T[], indicesToMove: number[]) => {\n  indicesToMove.sort((a: number, b: number) => a - b);\n  let isSorted = true;\n  // We go from left to right to avoid overriding the wrong elements\n  indicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === i;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index - 1, index);\n  });\n\n  return elements;\n};\n\nexport const moveOneRight = <T>(elements: T[], indicesToMove: number[]) => {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n  let isSorted = true;\n\n  // We go from right to left to avoid overriding the wrong elements\n  reversedIndicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === elements.length - i - 1;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index + 1, index);\n  });\n  return elements;\n};\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [c, f, a, b, d, e, g]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the right.\n//\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//          -> ->\n//\n// which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//\n// Now, we need to move all the elements from marker 1 to the beginning by two (not one)\n// slots to the right, which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//  ---|--^  ^\n//     ------|\n//\n// which gives us\n//\n//        |1       |0\n// [_, _, a, b, d, e, g]\n//\n// At this point, we can fill back the leftmost elements with the array we saved at\n// the beginning\n//\n//        |1       |0\n// [c, f, a, b, d, e, g]\n//\n// And we are done!\nexport const moveAllLeft = <T>(elements: T[], indicesToMove: number[]) => {\n  indicesToMove.sort((a: number, b: number) => a - b);\n\n  // Copy the elements to move\n  const leftMostElements = indicesToMove.map((index) => elements[index]);\n\n  const reversedIndicesToMove = indicesToMove\n    // We go from right to left to avoid overriding elements.\n    .reverse()\n    // We add 0 for the final marker\n    .concat([0]);\n\n  reversedIndicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the right (i - 1) to the current one (index)\n    for (let pos = reversedIndicesToMove[i - 1] - 1; pos >= index; --pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos + i] = elements[pos];\n    }\n  });\n\n  // The final step\n  leftMostElements.forEach((element, i) => {\n    elements[i] = element;\n  });\n\n  return elements;\n};\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [a, b, d, e, g, c, f]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the left.\n//\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//          <- <-\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//\n// Now, we need to move all the elements from marker 1 to the end by two (not one)\n// slots to the left, which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//              ^------\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, g, _, _]\n//\n// At this point, we can fill back the rightmost elements with the array we saved at\n// the beginning\n//\n//        |0       |1\n// [a, b, d, e, g, c, f]\n//\n// And we are done!\nexport const moveAllRight = <T>(elements: T[], indicesToMove: number[]) => {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n\n  // Copy the elements to move\n  const rightMostElements = reversedIndicesToMove.map(\n    (index) => elements[index],\n  );\n\n  indicesToMove = reversedIndicesToMove\n    // We go from left to right to avoid overriding elements.\n    .reverse()\n    // We last element index for the final marker\n    .concat([elements.length]);\n\n  indicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the left (i - 1) to the current one (index)\n    for (let pos = indicesToMove[i - 1] + 1; pos < index; ++pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos - i] = elements[pos];\n    }\n  });\n\n  // The final step\n  rightMostElements.forEach((element, i) => {\n    elements[elements.length - i - 1] = element;\n  });\n\n  return elements;\n};\n","import React from \"react\";\nimport {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, isDarwin } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  sendBackward,\n  bringToFront,\n  sendToBack,\n  bringForward,\n} from \"../components/icons\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\n\nconst getElementIndices = (\n  direction: \"left\" | \"right\",\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedIndices: number[] = [];\n  let deletedIndicesCache: number[] = [];\n\n  const cb = (element: ExcalidrawElement, index: number) => {\n    if (element.isDeleted) {\n      // we want to build an array of deleted elements that are preceeding\n      //  a selected element so that we move them together\n      deletedIndicesCache.push(index);\n    } else {\n      if (appState.selectedElementIds[element.id]) {\n        selectedIndices.push(...deletedIndicesCache, index);\n      }\n      // always empty cache of deleted elements after either pushing a group\n      //  of selected/deleted elements, of after encountering non-deleted elem\n      deletedIndicesCache = [];\n    }\n  };\n\n  // sending back → select contiguous deleted elements that are to the left of\n  //  selected element(s)\n  if (direction === \"left\") {\n    let i = -1;\n    const len = elements.length;\n    while (++i < len) {\n      cb(elements[i], i);\n    }\n    // moving to front → loop from right to left so that we don't need to\n    //  backtrack when gathering deleted elements\n  } else {\n    let i = elements.length;\n    while (--i > -1) {\n      cb(elements[i], i);\n    }\n  }\n  // sort in case we were gathering indexes from right to left\n  return selectedIndices.sort();\n};\n\nconst moveElements = (\n  func: typeof moveOneLeft,\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const _elements = elements.slice();\n  const direction =\n    func === moveOneLeft || func === moveAllLeft ? \"left\" : \"right\";\n  const indices = getElementIndices(direction, _elements, appState);\n  return func(_elements, indices);\n};\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketLeft\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      {sendBackward}\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketRight\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      {bringForward}\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketLeft\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketLeft\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      {sendToBack}\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketRight\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketRight\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      {bringToFront}\n    </button>\n  ),\n});\n","import React from \"react\";\n\nexport const ButtonSelect = <T extends Object>({\n  options,\n  value,\n  onChange,\n  group,\n}: {\n  options: { value: T; text: string }[];\n  value: T | null;\n  onChange: (value: T) => void;\n  group: string;\n}) => (\n  <div className=\"buttonList\">\n    {options.map((option) => (\n      <label\n        key={option.text}\n        className={value === option.value ? \"active\" : \"\"}\n      >\n        <input\n          type=\"radio\"\n          name={group}\n          onChange={() => onChange(option.value)}\n          checked={value === option.value ? true : false}\n        />\n        {option.text}\n      </label>\n    ))}\n  </div>\n);\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    return {\n      appState: selectGroupsForSelectedElements(\n        {\n          ...appState,\n          editingGroupId: null,\n          selectedElementIds: elements.reduce((map, element) => {\n            if (!element.isDeleted) {\n              map[element.id] = true;\n            }\n            return map;\n          }, {} as any),\n        },\n        getNonDeletedElements(elements),\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"a\",\n});\n","import React from \"react\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { duplicateElement, getNonDeletedElements } from \"../element\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { clone } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\n\nexport const actionDuplicateSelection = register({\n  name: \"duplicateSelection\",\n  perform: (elements, appState) => {\n    const groupIdMap = new Map();\n    return {\n      appState,\n      elements: elements.reduce(\n        (acc: Array<ExcalidrawElement>, element: ExcalidrawElement) => {\n          if (appState.selectedElementIds[element.id]) {\n            const newElement = duplicateElement(\n              appState.editingGroupId,\n              groupIdMap,\n              element,\n              {\n                x: element.x + 10,\n                y: element.y + 10,\n              },\n            );\n            appState.selectedElementIds[newElement.id] = true;\n            delete appState.selectedElementIds[element.id];\n            return acc.concat([element, newElement]);\n          }\n          return acc.concat(element);\n        },\n        [],\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.duplicateSelection\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"d\",\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={clone}\n      title={`${t(\"labels.duplicateSelection\")} — ${getShortcutKey(\n        \"CtrlOrCmd+D\",\n      )}`}\n      aria-label={t(\"labels.duplicateSelection\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./ColorPicker.scss\";\nimport { KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nconst getColor = (color: string): string | null => {\n  if (color === \"transparent\") {\n    return color;\n  }\n\n  return isValidColor(color)\n    ? color\n    : isValidColor(`#${color}`)\n    ? `#${color}`\n    : null;\n};\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n].flat();\n\nconst Picker = ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n}) => {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    // After the component is first mounted\n    // focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (activeElement === colorInput.current) {\n          firstItem.current?.focus();\n          event.preventDefault();\n        }\n      }\n    } else if (\n      event.key === KEYS.ARROW_RIGHT ||\n      event.key === KEYS.ARROW_LEFT ||\n      event.key === KEYS.ARROW_UP ||\n      event.key === KEYS.ARROW_DOWN\n    ) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        gallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = gallery!.current!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (gallery!.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      (gallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return (\n    <div\n      className=\"color-picker\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n      >\n        {colors.map((_color, i) => (\n          <button\n            className=\"color-picker-swatch\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(_color);\n            }}\n            title={`${_color} — ${keyBindings[i].toUpperCase()}`}\n            aria-label={_color}\n            aria-keyshortcuts={keyBindings[i]}\n            style={{ color: _color }}\n            key={_color}\n            ref={(el) => {\n              if (el && i === 0) {\n                firstItem.current = el;\n              }\n              if (el && _color === color) {\n                activeItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(_color);\n            }}\n          >\n            {_color === \"transparent\" ? (\n              <div className=\"color-picker-transparent\"></div>\n            ) : undefined}\n            <span className=\"color-picker-keybinding\">{keyBindings[i]}</span>\n          </button>\n        ))}\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    const changeColor = React.useCallback(\n      (inputValue: string) => {\n        const value = inputValue.toLowerCase();\n        const color = getColor(value);\n        if (color) {\n          onChange(color);\n        }\n        setInnerValue(value);\n      },\n      [onChange],\n    );\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => changeColor(event.target.value)}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n}) => {\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={\n            color\n              ? ({ \"--swatch-color\": color } as React.CSSProperties)\n              : undefined\n          }\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  TextAlign,\n  FontFamily,\n} from \"../element/types\";\nimport {\n  getCommonAttributeOfSelectedElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { ButtonSelect } from \"../components/ButtonSelect\";\nimport {\n  isTextElement,\n  redrawTextBoundingBox,\n  getNonDeletedElements,\n} from \"../element\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { AppState } from \"../../src/types\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_FAMILY } from \"../appState\";\n\nconst changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n) => {\n  return elements.map((element) => {\n    if (\n      appState.selectedElementIds[element.id] ||\n      element.id === appState.editingElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nconst getFormValue = function <T>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  defaultValue?: T,\n): T | null {\n  const editingElement = appState.editingElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n  return (\n    (editingElement && getAttribute(editingElement)) ??\n    (isSomeElementSelected(nonDeletedElements, appState)\n      ? getCommonAttributeOfSelectedElements(\n          nonDeletedElements,\n          appState,\n          getAttribute,\n        )\n      : defaultValue) ??\n    null\n  );\n};\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          backgroundColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fill\")}</legend>\n      <ButtonSelect\n        options={[\n          { value: \"hachure\", text: t(\"labels.hachure\") },\n          { value: \"cross-hatch\", text: t(\"labels.crossHatch\") },\n          { value: \"solid\", text: t(\"labels.solid\") },\n        ]}\n        group=\"fill\"\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.fillStyle,\n          appState.currentItemFillStyle,\n        )}\n        onChange={(value) => {\n          updateData(value);\n        }}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonSelect\n        group=\"stroke-width\"\n        options={[\n          { value: 1, text: t(\"labels.thin\") },\n          { value: 2, text: t(\"labels.bold\") },\n          { value: 4, text: t(\"labels.extraBold\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonSelect\n        group=\"sloppiness\"\n        options={[\n          { value: 0, text: t(\"labels.architect\") },\n          { value: 1, text: t(\"labels.artist\") },\n          { value: 2, text: t(\"labels.cartoonist\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonSelect\n        group=\"strokeStyle\"\n        options={[\n          { value: \"solid\", text: t(\"labels.strokeStyle_solid\") },\n          { value: \"dashed\", text: t(\"labels.strokeStyle_dashed\") },\n          { value: \"dotted\", text: t(\"labels.strokeStyle_dotted\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          opacity: value,\n        }),\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"10\"\n        onChange={(event) => updateData(+event.target.value)}\n        onWheel={(event) => {\n          event.stopPropagation();\n          const target = event.target as HTMLInputElement;\n          const STEP = 10;\n          const MAX = 100;\n          const MIN = 0;\n          const value = +target.value;\n\n          if (event.deltaY < 0 && value < MAX) {\n            updateData(value + STEP);\n          } else if (event.deltaY > 0 && value > MIN) {\n            updateData(value - STEP);\n          }\n        }}\n        value={\n          getFormValue(\n            elements,\n            appState,\n            (element) => element.opacity,\n            appState.currentItemOpacity,\n          ) ?? undefined\n        }\n      />\n    </label>\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontSize: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontSize: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonSelect\n        group=\"font-size\"\n        options={[\n          { value: 16, text: t(\"labels.small\") },\n          { value: 20, text: t(\"labels.medium\") },\n          { value: 28, text: t(\"labels.large\") },\n          { value: 36, text: t(\"labels.veryLarge\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.fontSize,\n          appState.currentItemFontSize || DEFAULT_FONT_SIZE,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontFamily: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontFamily: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const options: { value: FontFamily; text: string }[] = [\n      { value: 1, text: t(\"labels.handDrawn\") },\n      { value: 2, text: t(\"labels.normal\") },\n      { value: 3, text: t(\"labels.code\") },\n    ];\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fontFamily\")}</legend>\n        <ButtonSelect<FontFamily | false>\n          group=\"font-family\"\n          options={options}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => isTextElement(element) && element.fontFamily,\n            appState.currentItemFontFamily || DEFAULT_FONT_FAMILY,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            textAlign: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.textAlign\")}</legend>\n      <ButtonSelect<TextAlign | false>\n        group=\"text-align\"\n        options={[\n          { value: \"left\", text: t(\"labels.left\") },\n          { value: \"center\", text: t(\"labels.center\") },\n          { value: \"right\", text: t(\"labels.right\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.textAlign,\n          appState.currentItemTextAlign,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nconst context = React.createContext(false);\n\nexport const IsMobileProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const query = useRef<MediaQueryList>();\n  if (!query.current) {\n    query.current = window.matchMedia\n      ? window.matchMedia(\n          \"(max-width: 640px), (max-height: 500px) and (max-width: 1000px)\",\n        )\n      : (({\n          matches: false,\n          addListener: () => {},\n          removeListener: () => {},\n        } as any) as MediaQueryList);\n  }\n  const [isMobile, setMobile] = useState(query.current.matches);\n\n  useEffect(() => {\n    const handler = () => setMobile(query.current!.matches);\n    query.current!.addListener(handler);\n    return () => query.current!.removeListener(handler);\n  }, []);\n\n  return <context.Provider value={isMobile}>{children}</context.Provider>;\n};\n\nexport default function useIsMobile() {\n  return useContext(context);\n}\n","import React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom, normalizeScroll } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { AppState, FlooredNumber } from \"../types\";\nimport { getCommonBounds } from \"../element\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, viewBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData(color)}\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState: AppState) => {\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        username: appState.username,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          // TODO: Make this part of `AppState`.\n          (window as any).handle = null;\n          updateData(null);\n        }\n      }}\n    />\n  ),\n});\n\nconst ZOOM_STEP = 0.1;\n\nconst KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ONE: \"Digit1\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\",\n};\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: 1,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={resetZoom}\n      title={t(\"buttons.resetZoom\")}\n      aria-label={t(\"buttons.resetZoom\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst calculateZoom = (\n  commonBounds: number[],\n  currentZoom: number,\n  {\n    scrollX,\n    scrollY,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n  },\n): number => {\n  const { innerWidth, innerHeight } = window;\n  const [x, y] = commonBounds;\n  const zoomX = -innerWidth / (2 * scrollX + 2 * x - innerWidth);\n  const zoomY = -innerHeight / (2 * scrollY + 2 * y - innerHeight);\n  const margin = 0.01;\n  let newZoom;\n\n  if (zoomX < zoomY) {\n    newZoom = zoomX - margin;\n  } else if (zoomY <= zoomX) {\n    newZoom = zoomY - margin;\n  } else {\n    newZoom = currentZoom;\n  }\n\n  if (newZoom <= 0.1) {\n    return 0.1;\n  }\n  if (newZoom >= 1) {\n    return 1;\n  }\n\n  return newZoom;\n};\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  perform: (elements, appState) => {\n    const nonDeletedElements = elements.filter((element) => !element.isDeleted);\n    const commonBounds = getCommonBounds(nonDeletedElements);\n    const [x1, y1, x2, y2] = commonBounds;\n    const centerX = (x1 + x2) / 2;\n    const centerY = (y1 + y2) / 2;\n    const scrollX = normalizeScroll(window.innerWidth / 2 - centerX);\n    const scrollY = normalizeScroll(window.innerHeight / 2 - centerY);\n    const zoom = calculateZoom(commonBounds, appState.zoom, {\n      scrollX,\n      scrollY,\n    });\n\n    return {\n      appState: {\n        ...appState,\n        scrollX,\n        scrollY,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) =>\n    event.code === KEY_CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n","import { KEYS } from \"../keys\";\nimport { isInvisiblySmallElement } from \"../element\";\nimport { resetCursor } from \"../utils\";\nimport React from \"react\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { done } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { isPathALoop } from \"../math\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nexport const actionFinalize = register({\n  name: \"finalize\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      const { elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n\n      if (element) {\n        return {\n          elements:\n            element.points.length < 2 || isInvisiblySmallElement(element)\n              ? elements.filter((el) => el.id !== element.id)\n              : undefined,\n          appState: {\n            ...appState,\n            editingLinearElement: null,\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let newElements = elements;\n    if (window.document.activeElement instanceof HTMLElement) {\n      window.document.activeElement.blur();\n    }\n\n    const multiPointElement = appState.multiElement\n      ? appState.multiElement\n      : appState.editingElement?.type === \"draw\"\n      ? appState.editingElement\n      : null;\n\n    if (multiPointElement) {\n      // pen and mouse have hover\n      if (\n        multiPointElement.type !== \"draw\" &&\n        appState.lastPointerDownWith !== \"touch\"\n      ) {\n        const { points, lastCommittedPoint } = multiPointElement;\n        if (\n          !lastCommittedPoint ||\n          points[points.length - 1] !== lastCommittedPoint\n        ) {\n          mutateElement(multiPointElement, {\n            points: multiPointElement.points.slice(0, -1),\n          });\n        }\n      }\n      if (isInvisiblySmallElement(multiPointElement)) {\n        newElements = newElements.slice(0, -1);\n      }\n\n      // If the multi point line closes the loop,\n      // set the last point to first point.\n      // This ensures that loop remains closed at different scales.\n      if (\n        multiPointElement.type === \"line\" ||\n        multiPointElement.type === \"draw\"\n      ) {\n        if (isPathALoop(multiPointElement.points)) {\n          const linePoints = multiPointElement.points;\n          const firstPoint = linePoints[0];\n          mutateElement(multiPointElement, {\n            points: linePoints.map((point, i) =>\n              i === linePoints.length - 1\n                ? ([firstPoint[0], firstPoint[1]] as const)\n                : point,\n            ),\n          });\n        }\n      }\n\n      if (!appState.elementLocked) {\n        appState.selectedElementIds[multiPointElement.id] = true;\n      }\n    }\n    if (!appState.elementLocked || !multiPointElement) {\n      resetCursor();\n    }\n    return {\n      elements: newElements,\n      appState: {\n        ...appState,\n        elementType:\n          appState.elementLocked && multiPointElement\n            ? appState.elementType\n            : \"selection\",\n        draggingElement: null,\n        multiElement: null,\n        editingElement: null,\n        selectedElementIds:\n          multiPointElement && !appState.elementLocked\n            ? {\n                ...appState.selectedElementIds,\n                [multiPointElement.id]: true,\n              }\n            : appState.selectedElementIds,\n      },\n      commitToHistory: appState.elementType === \"draw\",\n    };\n  },\n  keyTest: (event, appState) =>\n    (event.key === KEYS.ESCAPE &&\n      (appState.editingLinearElement !== null ||\n        (!appState.draggingElement && appState.multiElement === null))) ||\n    ((event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n      appState.multiElement !== null),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={done}\n      title={t(\"buttons.done\")}\n      aria-label={t(\"buttons.done\")}\n      onClick={updateData}\n      visible={appState.multiElement != null}\n    />\n  ),\n});\n","import \"./TextInput.scss\";\n\nimport React, { Component } from \"react\";\nimport { selectNode, removeSelection } from \"../utils\";\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n};\n\nexport class ProjectName extends Component<Props> {\n  private handleFocus = (event: React.FocusEvent<HTMLElement>) => {\n    selectNode(event.currentTarget);\n  };\n\n  private handleBlur = (event: React.FocusEvent<HTMLElement>) => {\n    const value = event.currentTarget.innerText.trim();\n    if (value !== this.props.value) {\n      this.props.onChange(value);\n    }\n    removeSelection();\n  };\n\n  private handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      if (event.nativeEvent.isComposing || event.keyCode === 229) {\n        return;\n      }\n      event.currentTarget.blur();\n    }\n  };\n  private makeEditable = (editable: HTMLSpanElement | null) => {\n    if (!editable) {\n      return;\n    }\n    try {\n      editable.contentEditable = \"plaintext-only\";\n    } catch {\n      editable.contentEditable = \"true\";\n    }\n  };\n\n  public render() {\n    return (\n      <span\n        suppressContentEditableWarning\n        ref={this.makeEditable}\n        data-type=\"wysiwyg\"\n        className=\"TextInput\"\n        role=\"textbox\"\n        aria-label={this.props.label}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        onFocus={this.handleFocus}\n      >\n        {this.props.value}\n      </span>\n    );\n  }\n}\n","import {\n  isTextElement,\n  isExcalidrawElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { KEYS } from \"../keys\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"../appState\";\nimport { register } from \"./register\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\n\nlet copiedStyles: string = \"{}\";\n\nexport const actionCopyStyles = register({\n  name: \"copyStyles\",\n  perform: (elements, appState) => {\n    const element = elements.find((el) => appState.selectedElementIds[el.id]);\n    if (element) {\n      copiedStyles = JSON.stringify(element);\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copyStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\",\n  contextMenuOrder: 0,\n});\n\nexport const actionPasteStyles = register({\n  name: \"pasteStyles\",\n  perform: (elements, appState) => {\n    const pastedElement = JSON.parse(copiedStyles);\n    if (!isExcalidrawElement(pastedElement)) {\n      return { elements, commitToHistory: false };\n    }\n    return {\n      elements: elements.map((element) => {\n        if (appState.selectedElementIds[element.id]) {\n          const newElement = newElementWith(element, {\n            backgroundColor: pastedElement?.backgroundColor,\n            strokeWidth: pastedElement?.strokeWidth,\n            strokeColor: pastedElement?.strokeColor,\n            strokeStyle: pastedElement?.strokeStyle,\n            fillStyle: pastedElement?.fillStyle,\n            opacity: pastedElement?.opacity,\n            roughness: pastedElement?.roughness,\n          });\n          if (isTextElement(newElement)) {\n            mutateElement(newElement, {\n              fontSize: pastedElement?.fontSize || DEFAULT_FONT_SIZE,\n              fontFamily: pastedElement?.fontFamily || DEFAULT_FONT_FAMILY,\n              textAlign: pastedElement?.textAlign || DEFAULT_TEXT_ALIGN,\n            });\n            redrawTextBoundingBox(newElement);\n          }\n          return newElement;\n        }\n        return element;\n      }),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.pasteStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"V\",\n  contextMenuOrder: 1,\n});\n","import React from \"react\";\nimport { ProjectName } from \"../components/ProjectName\";\nimport { saveAsJSON, loadFromJSON } from \"../data\";\nimport { load, save, saveAs } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { KEYS } from \"../keys\";\n\nexport const actionChangeProjectName = register({\n  name: \"changeProjectName\",\n  perform: (_elements, appState, value) => {\n    return { appState: { ...appState, name: value }, commitToHistory: false };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <ProjectName\n      label={t(\"labels.fileTitle\")}\n      value={appState.name || \"Unnamed\"}\n      onChange={(name: string) => updateData(name)}\n    />\n  ),\n});\n\nexport const actionChangeExportBackground = register({\n  name: \"changeExportBackground\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportBackground: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.exportBackground}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.withBackground\")}\n    </label>\n  ),\n});\n\nexport const actionChangeShouldAddWatermark = register({\n  name: \"changeShouldAddWatermark\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, shouldAddWatermark: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.shouldAddWatermark}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.addWatermark\")}\n    </label>\n  ),\n});\n\nexport const actionSaveScene = register({\n  name: \"saveScene\",\n  perform: (elements, appState, value) => {\n    saveAsJSON(elements, appState, (window as any).handle).catch((error) =>\n      console.error(error),\n    );\n    return { commitToHistory: false };\n  },\n  keyTest: (event) => {\n    return event.key === \"s\" && event[KEYS.CTRL_OR_CMD] && !event.shiftKey;\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={save}\n      title={t(\"buttons.save\")}\n      aria-label={t(\"buttons.save\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => updateData(null)}\n    />\n  ),\n});\n\nexport const actionSaveAsScene = register({\n  name: \"saveAsScene\",\n  perform: (elements, appState, value) => {\n    saveAsJSON(elements, appState, null).catch((error) => console.error(error));\n    return { commitToHistory: false };\n  },\n  keyTest: (event) => {\n    return event.key === \"s\" && event.shiftKey && event[KEYS.CTRL_OR_CMD];\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={saveAs}\n      title={t(\"buttons.saveAs\")}\n      aria-label={t(\"buttons.saveAs\")}\n      showAriaLabel={useIsMobile()}\n      hidden={!(\"chooseFileSystemEntries\" in window)}\n      onClick={() => updateData(null)}\n    />\n  ),\n});\n\nexport const actionLoadScene = register({\n  name: \"loadScene\",\n  perform: (\n    elements,\n    appState,\n    { elements: loadedElements, appState: loadedAppState, error },\n  ) => {\n    return {\n      elements: loadedElements,\n      appState: {\n        ...loadedAppState,\n        errorMessage: error,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={load}\n      title={t(\"buttons.load\")}\n      aria-label={t(\"buttons.load\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        loadFromJSON()\n          .then(({ elements, appState }) => {\n            updateData({ elements: elements, appState: appState });\n          })\n          .catch((error) => {\n            // if user cancels, ignore the error\n            if (error.name === \"AbortError\") {\n              return;\n            }\n            updateData({ error: error.message });\n          });\n      }}\n    />\n  ),\n});\n","import React from \"react\";\n\ntype HelpIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  onClick?(): void;\n};\n\nconst ICON = (\n  <svg\n    width=\"30\"\n    height=\"22\"\n    viewBox=\"0 0 512 512\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\" />\n  </svg>\n);\n\nexport const HelpIcon = (props: HelpIconProps) => (\n  <label title={`${props.title} — ?`} className=\"help-icon\">\n    <div onClick={props.onClick}>{ICON}</div>\n  </label>\n);\n","import \"./Avatar.scss\";\n\nimport React from \"react\";\n\ntype AvatarProps = {\n  children: string;\n  className?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  color: string;\n};\n\nexport const Avatar = ({\n  children,\n  className,\n  color,\n  onClick,\n}: AvatarProps) => (\n  <div\n    className={`Avatar ${className}`}\n    style={{ background: color }}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n);\n","import React from \"react\";\nimport { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { KEYS } from \"../keys\";\nimport { HelpIcon } from \"../components/HelpIcon\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={menu}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) => event.keyCode === KEYS.F_KEY_CODE,\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        showShortcutsDialog: true,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <HelpIcon title={t(\"shortcutsDialog.title\")} onClick={updateData} />\n  ),\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getSelectedElements } from \"../scene\";\nimport {\n  getSelectedGroupIds,\n  selectGroup,\n  selectGroupsForSelectedElements,\n  getElementsInGroup,\n  addToGroup,\n  removeFromSelectedGroups,\n  isElementInGroup,\n} from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nimport { randomId } from \"../random\";\n\nexport const actionGroup = register({\n  name: \"group\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    if (selectedElements.length < 2) {\n      // nothing to group\n      return { appState, elements, commitToHistory: false };\n    }\n    // if everything is already grouped into 1 group, there is nothing to do\n    const selectedGroupIds = getSelectedGroupIds(appState);\n    if (selectedGroupIds.length === 1) {\n      const selectedGroupId = selectedGroupIds[0];\n      const elementIdsInGroup = new Set(\n        getElementsInGroup(elements, selectedGroupId).map(\n          (element) => element.id,\n        ),\n      );\n      const selectedElementIds = new Set(\n        selectedElements.map((element) => element.id),\n      );\n      const combinedSet = new Set([\n        ...Array.from(elementIdsInGroup),\n        ...Array.from(selectedElementIds),\n      ]);\n      if (combinedSet.size === elementIdsInGroup.size) {\n        // no incremental ids in the selected ids\n        return { appState, elements, commitToHistory: false };\n      }\n    }\n    const newGroupId = randomId();\n    const updatedElements = elements.map((element) => {\n      if (!appState.selectedElementIds[element.id]) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: addToGroup(\n          element.groupIds,\n          newGroupId,\n          appState.editingGroupId,\n        ),\n      });\n    });\n    // keep the z order within the group the same, but move them\n    // to the z order of the highest element in the layer stack\n    const elementsInGroup = getElementsInGroup(updatedElements, newGroupId);\n    const lastElementInGroup = elementsInGroup[elementsInGroup.length - 1];\n    const lastGroupElementIndex = updatedElements.lastIndexOf(\n      lastElementInGroup,\n    );\n    const elementsAfterGroup = updatedElements.slice(lastGroupElementIndex + 1);\n    const elementsBeforeGroup = updatedElements\n      .slice(0, lastGroupElementIndex)\n      .filter(\n        (updatedElement) => !isElementInGroup(updatedElement, newGroupId),\n      );\n    const updatedElementsInOrder = [\n      ...elementsBeforeGroup,\n      ...elementsInGroup,\n      ...elementsAfterGroup,\n    ];\n\n    return {\n      appState: selectGroup(\n        newGroupId,\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(updatedElementsInOrder),\n      ),\n      elements: updatedElementsInOrder,\n      commitToHistory: true,\n    };\n  },\n  contextMenuOrder: 4,\n  contextItemLabel: \"labels.group\",\n  keyTest: (event) => {\n    return (\n      !event.shiftKey &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.keyCode === KEYS.G_KEY_CODE\n    );\n  },\n});\n\nexport const actionUngroup = register({\n  name: \"ungroup\",\n  perform: (elements, appState) => {\n    const groupIds = getSelectedGroupIds(appState);\n    if (groupIds.length === 0) {\n      return { appState, elements, commitToHistory: false };\n    }\n    const nextElements = elements.map((element) => {\n      const nextGroupIds = removeFromSelectedGroups(\n        element.groupIds,\n        appState.selectedGroupIds,\n      );\n      if (nextGroupIds.length === element.groupIds.length) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: nextGroupIds,\n      });\n    });\n    return {\n      appState: selectGroupsForSelectedElements(\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(nextElements),\n      ),\n      elements: nextElements,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => {\n    return (\n      event.shiftKey &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.keyCode === KEYS.G_KEY_CODE\n    );\n  },\n  contextMenuOrder: 5,\n  contextItemLabel: \"labels.ungroup\",\n});\n","import { PointerCoords } from \"./types\";\nimport { normalizeScroll } from \"./scene\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: normalizeScroll(sum(allCoords, (coords) => coords.x) / allCoords.length),\n    y: normalizeScroll(sum(allCoords, (coords) => coords.y) / allCoords.length),\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import React from \"react\";\nimport { Avatar } from \"../components/Avatar\";\nimport { register } from \"./register\";\nimport { getClientColors, getClientInitials } from \"../clients\";\nimport { Collaborator } from \"../types\";\nimport { normalizeScroll } from \"../scene\";\n\nexport const actionGoToCollaborator = register({\n  name: \"goToCollaborator\",\n  perform: (_elements, appState, value) => {\n    const point = value as Collaborator[\"pointer\"];\n    if (!point) {\n      return { appState, commitToHistory: false };\n    }\n\n    return {\n      appState: {\n        ...appState,\n        scrollX: normalizeScroll(window.innerWidth / 2 - point.x),\n        scrollY: normalizeScroll(window.innerHeight / 2 - point.y),\n        // Close mobile menu\n        openMenu: appState.openMenu === \"canvas\" ? null : appState.openMenu,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData, id }) => {\n    const clientId = id;\n\n    if (!clientId) {\n      return null;\n    }\n\n    const collaborator = appState.collaborators.get(clientId);\n\n    if (!collaborator) {\n      return null;\n    }\n\n    const { background } = getClientColors(clientId);\n    const shortName = getClientInitials(collaborator.username);\n\n    return (\n      <Avatar\n        color={background}\n        onClick={() => updateData(collaborator.pointer)}\n      >\n        {shortName}\n      </Avatar>\n    );\n  },\n});\n","import { Action, ActionResult } from \"./types\";\nimport React from \"react\";\nimport { undo, redo } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { SceneHistory, HistoryEntry } from \"../history\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { KEYS } from \"../keys\";\nimport { getElementMap } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\n\nconst writeData = (\n  prevElements: readonly ExcalidrawElement[],\n  appState: AppState,\n  updater: () => HistoryEntry | null,\n): ActionResult => {\n  const commitToHistory = false;\n  if (\n    !appState.multiElement &&\n    !appState.resizingElement &&\n    !appState.editingElement &&\n    !appState.draggingElement\n  ) {\n    const data = updater();\n    if (data === null) {\n      return { commitToHistory };\n    }\n\n    const prevElementMap = getElementMap(prevElements);\n    const nextElements = data.elements;\n    const nextElementMap = getElementMap(nextElements);\n\n    const elements = nextElements\n      .map((nextElement) =>\n        newElementWith(\n          prevElementMap[nextElement.id] || nextElement,\n          nextElement,\n        ),\n      )\n      .concat(\n        prevElements\n          .filter(\n            (prevElement) => !nextElementMap.hasOwnProperty(prevElement.id),\n          )\n          .map((prevElement) =>\n            newElementWith(prevElement, { isDeleted: true }),\n          ),\n      );\n\n    return {\n      elements,\n      appState: { ...appState, ...data.appState },\n      commitToHistory,\n      syncHistory: true,\n    };\n  }\n  return { commitToHistory };\n};\n\nconst testUndo = (shift: boolean) => (event: KeyboardEvent) =>\n  event[KEYS.CTRL_OR_CMD] && /z/i.test(event.key) && event.shiftKey === shift;\n\ntype ActionCreator = (history: SceneHistory) => Action;\n\nexport const createUndoAction: ActionCreator = (history) => ({\n  name: \"undo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.undoOnce()),\n  keyTest: testUndo(false),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={undo}\n      aria-label={t(\"buttons.undo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n\nexport const createRedoAction: ActionCreator = (history) => ({\n  name: \"redo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.redoOnce()),\n  keyTest: testUndo(true),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={redo}\n      aria-label={t(\"buttons.redo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n","import \"./Island.scss\";\n\nimport React from \"react\";\n\ntype IslandProps = {\n  children: React.ReactNode;\n  padding?: number;\n  className?: string | boolean;\n  style?: object;\n};\n\nexport const Island = React.forwardRef<HTMLDivElement, IslandProps>(\n  ({ children, padding, className, style }, ref) => (\n    <div\n      className={`${className ?? \"\"} Island`}\n      style={{ \"--padding\": padding, ...style } as React.CSSProperties}\n      ref={ref}\n    >\n      {children}\n    </div>\n  ),\n);\n","import \"./Stack.css\";\n\nimport React from \"react\";\n\ntype StackProps = {\n  children: React.ReactNode;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\" | \"baseline\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\";\n  className?: string | boolean;\n};\n\nconst RowStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={`Stack Stack_horizontal ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          alignItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nconst ColStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={`Stack Stack_vertical ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          justifyItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default {\n  Row: RowStack,\n  Col: ColStack,\n};\n","import \"./FixedSideContainer.css\";\n\nimport React from \"react\";\n\ntype FixedSideContainerProps = {\n  children: React.ReactNode;\n  side: \"top\" | \"left\" | \"right\";\n  className?: string;\n};\n\nexport const FixedSideContainer = ({\n  children,\n  side,\n  className,\n}: FixedSideContainerProps) => (\n  <div\n    className={`FixedSideContainer FixedSideContainer_side_${side} ${className}`}\n  >\n    {children}\n  </div>\n);\n","import \"./UserList.css\";\n\nimport React from \"react\";\n\ntype UserListProps = {\n  children: React.ReactNode;\n  className?: string;\n  mobile?: boolean;\n};\n\nexport const UserList = ({ children, className, mobile }: UserListProps) => {\n  let compClassName = \"UserList\";\n\n  if (className) {\n    compClassName += ` ${className}`;\n  }\n\n  if (mobile) {\n    compClassName += \" UserList_mobile\";\n  }\n\n  return <div className={compClassName}>{children}</div>;\n};\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype LockIconSize = \"s\" | \"m\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  checked: boolean;\n  onChange?(): void;\n  size?: LockIconSize;\n  zenModeEnabled?: boolean;\n};\n\nconst DEFAULT_SIZE: LockIconSize = \"m\";\n\nconst ICONS = {\n  CHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\" />\n    </svg>\n  ),\n  UNCHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"unlocked-icon rtl-mirror\"\n    >\n      <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\" />\n    </svg>\n  ),\n};\n\nexport const LockIcon = (props: LockIconProps) => {\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  return (\n    <label\n      className={`ToolIcon ToolIcon__lock ToolIcon_type_floating ${sizeCn} zen-mode-visibility ${\n        props.zenModeEnabled && \"zen-mode-visibility--hidden\"\n      }`}\n      title={`${props.title} — Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n};\n","import \"./Modal.scss\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { KEYS } from \"../keys\";\n\nexport const Modal = (props: {\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n}) => {\n  const modalRoot = useBodyRoot();\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      props.onCloseRequest();\n    }\n  };\n  return createPortal(\n    <div\n      className={`Modal ${props.className ?? \"\"}`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n      tabIndex={-1}\n    >\n      <div className=\"Modal__background\" onClick={props.onCloseRequest}></div>\n      <div\n        className=\"Modal__content\"\n        style={\n          {\n            \"--max-width\": `${props.maxWidth}px`,\n            maxHeight: \"100%\",\n            overflowY: \"scroll\",\n          } as any\n        }\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nconst useBodyRoot = () => {\n  const createDiv = () => {\n    const div = document.createElement(\"div\");\n    document.body.appendChild(div);\n    return div;\n  };\n  const [div] = useState(createDiv);\n  useEffect(() => {\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n  return div;\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { Modal } from \"./Modal\";\nimport { Island } from \"./Island\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { back, close } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\nimport \"./Dialog.scss\";\n\nexport const Dialog = (props: {\n  children: React.ReactNode;\n  className?: string;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  title: React.ReactNode;\n}) => {\n  const islandRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const focusableElements = queryFocusableElements();\n\n    if (focusableElements.length > 0) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!islandRef.current) {\n      return;\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements();\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    };\n\n    const node = islandRef.current;\n    node.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => node.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  const queryFocusableElements = () => {\n    const focusableElements = islandRef.current?.querySelectorAll<HTMLElement>(\n      \"button, a, input, select, textarea, div[tabindex]\",\n    );\n\n    return focusableElements ? Array.from(focusableElements) : [];\n  };\n\n  return (\n    <Modal\n      className={`${props.className ?? \"\"} Dialog`}\n      labelledBy=\"dialog-title\"\n      maxWidth={props.maxWidth}\n      onCloseRequest={props.onCloseRequest}\n    >\n      <Island padding={4} ref={islandRef}>\n        <h2 id=\"dialog-title\" className=\"Dialog__title\">\n          <span className=\"Dialog__titleContent\">{props.title}</span>\n          <button\n            className=\"Modal__close\"\n            onClick={props.onCloseRequest}\n            aria-label={t(\"buttons.close\")}\n          >\n            {useIsMobile() ? back : close}\n          </button>\n        </h2>\n        {props.children}\n      </Island>\n    </Modal>\n  );\n};\n","import \"./ExportDialog.scss\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nimport { ToolButton } from \"./ToolButton\";\nimport { clipboard, exportFile, link } from \"./icons\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { exportToCanvas } from \"../scene/export\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport Stack from \"./Stack\";\nimport { t } from \"../i18n\";\n\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport useIsMobile from \"../is-mobile\";\nimport { Dialog } from \"./Dialog\";\n\nconst scales = [1, 2, 3];\nconst defaultScale = scales.includes(devicePixelRatio) ? devicePixelRatio : 1;\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst ExportModal = ({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n  onCloseRequest: () => void;\n}) => {\n  const someElementIsSelected = isSomeElementSelected(elements, appState);\n  const [scale, setScale] = useState(defaultScale);\n  const [exportSelected, setExportSelected] = useState(someElementIsSelected);\n  const previewRef = useRef<HTMLDivElement>(null);\n  const {\n    exportBackground,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  } = appState;\n\n  const exportedElements = exportSelected\n    ? getSelectedElements(elements, appState)\n    : elements;\n\n  useEffect(() => {\n    setExportSelected(someElementIsSelected);\n  }, [someElementIsSelected]);\n\n  useEffect(() => {\n    const previewNode = previewRef.current;\n    const canvas = exportToCanvas(exportedElements, appState, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      scale,\n      shouldAddWatermark,\n    });\n    previewNode?.appendChild(canvas);\n    return () => {\n      previewNode?.removeChild(canvas);\n    };\n  }, [\n    appState,\n    exportedElements,\n    exportBackground,\n    exportPadding,\n    viewBackgroundColor,\n    scale,\n    shouldAddWatermark,\n  ]);\n\n  return (\n    <div className=\"ExportDialog\">\n      <div className=\"ExportDialog__preview\" ref={previewRef}></div>\n      <Stack.Col gap={2} align=\"center\">\n        <div className=\"ExportDialog__actions\">\n          <Stack.Row gap={2}>\n            <ToolButton\n              type=\"button\"\n              label=\"PNG\"\n              title={t(\"buttons.exportToPng\")}\n              aria-label={t(\"buttons.exportToPng\")}\n              onClick={() => onExportToPng(exportedElements, scale)}\n            />\n            <ToolButton\n              type=\"button\"\n              label=\"SVG\"\n              title={t(\"buttons.exportToSvg\")}\n              aria-label={t(\"buttons.exportToSvg\")}\n              onClick={() => onExportToSvg(exportedElements, scale)}\n            />\n            {probablySupportsClipboardBlob && (\n              <ToolButton\n                type=\"button\"\n                icon={clipboard}\n                title={t(\"buttons.copyPngToClipboard\")}\n                aria-label={t(\"buttons.copyPngToClipboard\")}\n                onClick={() => onExportToClipboard(exportedElements, scale)}\n              />\n            )}\n            <ToolButton\n              type=\"button\"\n              icon={link}\n              title={t(\"buttons.getShareableLink\")}\n              aria-label={t(\"buttons.getShareableLink\")}\n              onClick={() => onExportToBackend(exportedElements)}\n            />\n          </Stack.Row>\n          <div className=\"ExportDialog__name\">\n            {actionManager.renderAction(\"changeProjectName\")}\n          </div>\n          <Stack.Row gap={2}>\n            {scales.map((s) => (\n              <ToolButton\n                key={s}\n                size=\"s\"\n                type=\"radio\"\n                icon={`x${s}`}\n                name=\"export-canvas-scale\"\n                aria-label={`Scale ${s} x`}\n                id=\"export-canvas-scale\"\n                checked={s === scale}\n                onChange={() => setScale(s)}\n              />\n            ))}\n          </Stack.Row>\n        </div>\n        {actionManager.renderAction(\"changeExportBackground\")}\n        {someElementIsSelected && (\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={exportSelected}\n                onChange={(event) =>\n                  setExportSelected(event.currentTarget.checked)\n                }\n              />{\" \"}\n              {t(\"labels.onlySelected\")}\n            </label>\n          </div>\n        )}\n        {actionManager.renderAction(\"changeShouldAddWatermark\")}\n      </Stack.Col>\n    </div>\n  );\n};\n\nexport const ExportDialog = ({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => setModalIsShown(true)}\n        icon={exportFile}\n        type=\"button\"\n        aria-label={t(\"buttons.export\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.export\")}\n        ref={triggerButton}\n      />\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"buttons.export\")}\n        >\n          <ExportModal\n            elements={elements}\n            appState={appState}\n            exportPadding={exportPadding}\n            actionManager={actionManager}\n            onExportToPng={onExportToPng}\n            onExportToSvg={onExportToSvg}\n            onExportToClipboard={onExportToClipboard}\n            onExportToBackend={onExportToBackend}\n            onCloseRequest={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as i18n from \"../i18n\";\n\nexport const LanguageList = ({\n  onChange,\n  languages = i18n.languages,\n  currentLanguage = i18n.getLanguage().lng,\n  floating,\n}: {\n  languages?: { lng: string; label: string }[];\n  onChange: (value: string) => void;\n  currentLanguage?: string;\n  floating?: boolean;\n}) => (\n  <React.Fragment>\n    <select\n      className={`dropdown-select dropdown-select__language${\n        floating ? \" dropdown-select--floating\" : \"\"\n      }`}\n      onChange={({ target }) => onChange(target.value)}\n      value={currentLanguage}\n      aria-label={i18n.t(\"buttons.selectLanguage\")}\n    >\n      {languages.map((language) => (\n        <option key={language.lng} value={language.lng}>\n          {language.label}\n        </option>\n      ))}\n    </select>\n  </React.Fragment>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getSelectedElements } from \"../scene\";\n\nimport \"./HintViewer.scss\";\nimport { AppState } from \"../types\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\n\ninterface Hint {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n}\n\nconst getHints = ({ appState, elements }: Hint) => {\n  const { elementType, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n  if (elementType === \"arrow\" || elementType === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n\n  if (elementType === \"draw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  const selectedElements = getSelectedElements(elements, appState);\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length > 2) {\n      return null;\n    }\n    return t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n    if (appState.editingLinearElement) {\n      return appState.editingLinearElement.activePointIndex\n        ? t(\"hints.lineEditor_pointSelected\")\n        : t(\"hints.lineEditor_nothingSelected\");\n    }\n    return t(\"hints.lineEditor_info\");\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({ appState, elements }: Hint) => {\n  let hint = getHints({\n    appState,\n    elements,\n  });\n  if (!hint) {\n    return null;\n  }\n\n  hint = getShortcutKey(hint);\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { hasBackground, hasStroke, hasText, getTargetElement } from \"../scene\";\nimport { t } from \"../i18n\";\nimport { SHAPES } from \"../shapes\";\nimport { ToolButton } from \"./ToolButton\";\nimport { capitalizeString, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport useIsMobile from \"../is-mobile\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n  elementType,\n}: {\n  appState: AppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n  elementType: ExcalidrawElement[\"type\"];\n}) => {\n  const targetElements = getTargetElement(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n\n  return (\n    <div className=\"panelColumn\">\n      {renderAction(\"changeStrokeColor\")}\n      {(hasBackground(elementType) ||\n        targetElements.some((element) => hasBackground(element.type))) && (\n        <>\n          {renderAction(\"changeBackgroundColor\")}\n\n          {renderAction(\"changeFillStyle\")}\n        </>\n      )}\n\n      {(hasStroke(elementType) ||\n        targetElements.some((element) => hasStroke(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeWidth\")}\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(hasText(elementType) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n      {!isMobile && !isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {renderAction(\"duplicateSelection\")}\n            {renderAction(\"deleteSelectedElements\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nexport const ShapesSwitcher = ({\n  elementType,\n  setAppState,\n}: {\n  elementType: ExcalidrawElement[\"type\"];\n  setAppState: any;\n}) => (\n  <>\n    {SHAPES.map(({ value, icon, key }, index) => {\n      const label = t(`toolBar.${value}`);\n      const shortcut = `${capitalizeString(key)} ${t(\"shortcutsDialog.or\")} ${\n        index + 1\n      }`;\n      return (\n        <ToolButton\n          key={value}\n          type=\"radio\"\n          icon={icon}\n          checked={elementType === value}\n          name=\"editor-current-shape\"\n          title={`${capitalizeString(label)} — ${shortcut}`}\n          keyBindingLabel={`${index + 1}`}\n          aria-label={capitalizeString(label)}\n          aria-keyshortcuts={`${key} ${index + 1}`}\n          data-testid={value}\n          onChange={() => {\n            setAppState({\n              elementType: value,\n              multiElement: null,\n              selectedElementIds: {},\n            });\n            setCursorForShape(value);\n            setAppState({});\n          }}\n        ></ToolButton>\n      );\n    })}\n  </>\n);\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: number;\n}) => (\n  <Stack.Col gap={1}>\n    <Stack.Row gap={1} align=\"center\">\n      {renderAction(\"zoomIn\")}\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"resetZoom\")}\n      <div style={{ marginInlineStart: 4 }}>{(zoom * 100).toFixed(0)}%</div>\n    </Stack.Row>\n  </Stack.Col>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\n\ninterface SectionProps extends React.HTMLProps<HTMLElement> {\n  heading: string;\n  children: React.ReactNode | ((header: React.ReactNode) => React.ReactNode);\n}\n\nexport const Section = ({ heading, children, ...props }: SectionProps) => {\n  const header = (\n    <h2 className=\"visually-hidden\" id={`${heading}-title`}>\n      {t(`headings.${heading}`)}\n    </h2>\n  );\n  return (\n    <section {...props} aria-labelledby={`${heading}-title`}>\n      {typeof children === \"function\" ? (\n        children(header)\n      ) : (\n        <>\n          {header}\n          {children}\n        </>\n      )}\n    </section>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { users, clipboard, start, stop } from \"./icons\";\n\nimport \"./RoomDialog.scss\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\nimport { Dialog } from \"./Dialog\";\nimport { AppState } from \"../types\";\n\nconst RoomModal = ({\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  onPressingEnter,\n}: {\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n  onPressingEnter: () => void;\n}) => {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  const copyRoomLink = () => {\n    copyTextToSystemClipboard(activeRoomLink);\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  };\n  const selectInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  };\n\n  return (\n    <div className=\"RoomDialog-modal\">\n      {!activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_intro\")}</p>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-startSession\"\n              type=\"button\"\n              icon={start}\n              title={t(\"roomDialog.button_startSession\")}\n              aria-label={t(\"roomDialog.button_startSession\")}\n              showAriaLabel={true}\n              onClick={onRoomCreate}\n            />\n          </div>\n        </>\n      )}\n      {activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n          <p>{t(\"roomDialog.desc_shareLink\")}</p>\n          <div className=\"RoomDialog-linkContainer\">\n            <ToolButton\n              type=\"button\"\n              icon={clipboard}\n              title={t(\"labels.copy\")}\n              aria-label={t(\"labels.copy\")}\n              onClick={copyRoomLink}\n            />\n            <input\n              value={activeRoomLink}\n              readOnly={true}\n              className=\"RoomDialog-link\"\n              ref={roomLinkInput}\n              onPointerDown={selectInput}\n            />\n          </div>\n          <div className=\"RoomDialog-usernameContainer\">\n            <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n              {t(\"labels.yourName\")}\n            </label>\n            <input\n              id=\"username\"\n              value={username || \"\"}\n              className=\"RoomDialog-username TextInput\"\n              onChange={(event) => onUsernameChange(event.target.value)}\n              onKeyPress={(event) => event.key === \"Enter\" && onPressingEnter()}\n            />\n          </div>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <p>\n            <span role=\"img\" aria-hidden=\"true\">\n              ⚠️\n            </span>{\" \"}\n            {t(\"roomDialog.desc_persistenceWarning\")}\n          </p>\n          <p>{t(\"roomDialog.desc_exitSession\")}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-stopSession\"\n              type=\"button\"\n              icon={stop}\n              title={t(\"roomDialog.button_stopSession\")}\n              aria-label={t(\"roomDialog.button_stopSession\")}\n              showAriaLabel={true}\n              onClick={onRoomDestroy}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const RoomDialog = ({\n  isCollaborating,\n  collaboratorCount,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n}: {\n  isCollaborating: AppState[\"isCollaborating\"];\n  collaboratorCount: number;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [activeRoomLink, setActiveRoomLink] = useState(\"\");\n\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    setActiveRoomLink(isCollaborating ? window.location.href : \"\");\n  }, [isCollaborating]);\n\n  return (\n    <>\n      <ToolButton\n        className={`RoomDialog-modalButton ${\n          isCollaborating ? \"is-collaborating\" : \"\"\n        }`}\n        onClick={() => setModalIsShown(true)}\n        icon={users}\n        type=\"button\"\n        title={t(\"buttons.roomDialog\")}\n        aria-label={t(\"buttons.roomDialog\")}\n        showAriaLabel={useIsMobile()}\n        ref={triggerButton}\n      >\n        {collaboratorCount > 0 && (\n          <div className=\"RoomDialog-modalButton-collaborators\">\n            {collaboratorCount}\n          </div>\n        )}\n      </ToolButton>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"labels.createRoom\")}\n        >\n          <RoomModal\n            activeRoomLink={activeRoomLink}\n            username={username}\n            onUsernameChange={onUsernameChange}\n            onRoomCreate={onRoomCreate}\n            onRoomDestroy={onRoomDestroy}\n            onPressingEnter={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const LoadingMessage = () => {\n  // !! KEEP THIS IN SYNC WITH index.html !!\n  return (\n    <div className=\"LoadingMessage\">\n      <span>{\"Loading scene...\"}</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockIcon } from \"./LockIcon\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { UserList } from \"./UserList\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  exportButton: React.ReactNode;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  canvas: HTMLCanvasElement | null;\n};\n\nexport const MobileMenu = ({\n  appState,\n  elements,\n  actionManager,\n  exportButton,\n  setAppState,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  canvas,\n}: MobileMenuProps) => (\n  <>\n    {appState.isLoading && <LoadingMessage />}\n    <FixedSideContainer side=\"top\">\n      <Section heading=\"shapes\">\n        {(heading) => (\n          <Stack.Col gap={4} align=\"center\">\n            <Stack.Row gap={1}>\n              <Island padding={1}>\n                {heading}\n                <Stack.Row gap={1}>\n                  <ShapesSwitcher\n                    elementType={appState.elementType}\n                    setAppState={setAppState}\n                  />\n                </Stack.Row>\n              </Island>\n              <LockIcon\n                checked={appState.elementLocked}\n                onChange={onLockToggle}\n                title={t(\"toolBar.lock\")}\n              />\n            </Stack.Row>\n          </Stack.Col>\n        )}\n      </Section>\n      <HintViewer appState={appState} elements={elements} />\n    </FixedSideContainer>\n    <div\n      className=\"App-bottom-bar\"\n      style={{\n        marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n      }}\n    >\n      <Island padding={3}>\n        {appState.openMenu === \"canvas\" ? (\n          <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n            <div className=\"panelColumn\">\n              <Stack.Col gap={4}>\n                {actionManager.renderAction(\"loadScene\")}\n                {actionManager.renderAction(\"saveScene\")}\n                {actionManager.renderAction(\"saveAsScene\")}\n                {exportButton}\n                {actionManager.renderAction(\"clearCanvas\")}\n                <RoomDialog\n                  isCollaborating={appState.isCollaborating}\n                  collaboratorCount={appState.collaborators.size}\n                  username={appState.username}\n                  onUsernameChange={onUsernameChange}\n                  onRoomCreate={onRoomCreate}\n                  onRoomDestroy={onRoomDestroy}\n                />\n                {actionManager.renderAction(\"changeViewBackgroundColor\")}\n                <fieldset>\n                  <legend>{t(\"labels.language\")}</legend>\n                  <LanguageList\n                    onChange={(lng) => {\n                      setLanguage(lng);\n                      setAppState({});\n                    }}\n                  />\n                </fieldset>\n                <fieldset>\n                  <legend>{t(\"labels.collaborators\")}</legend>\n                  <UserList mobile>\n                    {Array.from(appState.collaborators)\n                      // Collaborator is either not initialized or is actually the current user.\n                      .filter(([_, client]) => Object.keys(client).length !== 0)\n                      .map(([clientId, client]) => (\n                        <React.Fragment key={clientId}>\n                          {actionManager.renderAction(\n                            \"goToCollaborator\",\n                            clientId,\n                          )}\n                        </React.Fragment>\n                      ))}\n                  </UserList>\n                </fieldset>\n              </Stack.Col>\n            </div>\n          </Section>\n        ) : appState.openMenu === \"shape\" &&\n          showSelectedShapeActions(appState, elements) ? (\n          <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n            <SelectedShapeActions\n              appState={appState}\n              elements={elements}\n              renderAction={actionManager.renderAction}\n              elementType={appState.elementType}\n            />\n          </Section>\n        ) : null}\n        <footer className=\"App-toolbar\">\n          <div className=\"App-toolbar-content\">\n            {actionManager.renderAction(\"toggleCanvasMenu\")}\n            {actionManager.renderAction(\"toggleEditMenu\")}\n            {actionManager.renderAction(\"undo\")}\n            {actionManager.renderAction(\"redo\")}\n            {actionManager.renderAction(\n              appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n            )}\n            {actionManager.renderAction(\"deleteSelectedElements\")}\n          </div>\n          {appState.scrolledOutside && (\n            <button\n              className=\"scroll-back-to-content\"\n              onClick={() => {\n                setAppState({\n                  ...calculateScrollCenter(elements, appState, canvas),\n                });\n              }}\n            >\n              {t(\"buttons.scrollBackToContent\")}\n            </button>\n          )}\n        </footer>\n      </Island>\n    </div>\n  </>\n);\n","import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\n\nexport const ErrorDialog = ({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={500}\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div>{message}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\nimport { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\n\nconst Columns = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst Column = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      width: \"49%\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n}) => (\n  <div\n    style={{\n      border: `1px solid ${oc.gray[4]}`,\n      marginBottom: \"16px\",\n    }}\n  >\n    <h3\n      style={{\n        margin: \"0\",\n        padding: \"4px\",\n        backgroundColor: oc.gray[2],\n        textAlign: \"center\",\n      }}\n    >\n      {props.caption}\n    </h3>\n    {props.children}\n  </div>\n);\n\nconst Shortcut = (props: {\n  label: string;\n  shortcuts: string[];\n  isOr: boolean;\n}) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n  return (\n    <div\n      style={{\n        borderTop: `1px solid ${oc.gray[4]}`,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0\",\n          padding: \"4px 8px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            lineHeight: 1.4,\n          }}\n        >\n          {props.label}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"0 0 auto\",\n            justifyContent: \"flex-end\",\n            marginLeft: isRTL ? \"0em\" : \"auto\",\n            marginRight: isRTL ? \"auto\" : \"0em\",\n            minWidth: \"30%\",\n          }}\n        >\n          {props.shortcuts.map((shortcut, index) => (\n            <React.Fragment key={index}>\n              <ShortcutKey>{shortcut}</ShortcutKey>\n              {props.isOr &&\n                index !== props.shortcuts.length - 1 &&\n                t(\"shortcutsDialog.or\")}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShortcut.defaultProps = {\n  isOr: true,\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <span\n    style={{\n      wordBreak: \"keep-all\",\n      border: `1px solid ${oc.gray[4]}`,\n      padding: \"2px 8px\",\n      margin: \"auto 4px\",\n      backgroundColor: oc.gray[2],\n      borderRadius: \"2px\",\n      fontSize: \"0.8em\",\n      minHeight: \"26px\",\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      alignItems: \"center\",\n    }}\n    {...props}\n  />\n);\n\nconst Footer = () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      borderTop: `1px solid ${oc.gray[4]}`,\n      marginTop: 8,\n      paddingTop: 16,\n    }}\n  >\n    <a\n      href=\"https://blog.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.blog\")}\n    </a>\n    <a\n      href=\"https://howto.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.howto\")}\n    </a>\n    <a\n      href=\"https://github.com/excalidraw/excalidraw/issues\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.github\")}\n    </a>\n  </div>\n);\n\nexport const ShortcutsDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        maxWidth={900}\n        onCloseRequest={handleClose}\n        title={t(\"shortcutsDialog.title\")}\n      >\n        <Columns>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.shapes\")}>\n              <Shortcut label={t(\"toolBar.selection\")} shortcuts={[\"S\", \"1\"]} />\n              <Shortcut label={t(\"toolBar.rectangle\")} shortcuts={[\"R\", \"2\"]} />\n              <Shortcut label={t(\"toolBar.diamond\")} shortcuts={[\"D\", \"3\"]} />\n              <Shortcut label={t(\"toolBar.ellipse\")} shortcuts={[\"E\", \"4\"]} />\n              <Shortcut label={t(\"toolBar.arrow\")} shortcuts={[\"A\", \"5\"]} />\n              <Shortcut label={t(\"toolBar.line\")} shortcuts={[\"L\", \"6\"]} />\n              <Shortcut label={t(\"toolBar.draw\")} shortcuts={[\"X\", \"7\"]} />\n              <Shortcut label={t(\"toolBar.text\")} shortcuts={[\"T\", \"8\"]} />\n              <Shortcut\n                label={t(\"shortcutsDialog.textNewLine\")}\n                shortcuts={[\n                  getShortcutKey(\"Enter\"),\n                  getShortcutKey(\"Shift+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.textFinish\")}\n                shortcuts={[\n                  getShortcutKey(\"Esc\"),\n                  getShortcutKey(\"CtrlOrCmd+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedArrow\")}\n                shortcuts={[\n                  \"A\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedLine\")}\n                shortcuts={[\n                  \"L\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut label={t(\"toolBar.lock\")} shortcuts={[\"Q\"]} />\n            </ShortcutIsland>\n            <ShortcutIsland caption={t(\"shortcutsDialog.view\")}>\n              <Shortcut\n                label={t(\"buttons.zoomIn\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.zoomOut\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.resetZoom\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.zoomToFit\")}\n                shortcuts={[\"Shift+1\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleFullScreen\")}\n                shortcuts={[\"F\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleZenMode\")}\n                shortcuts={[getShortcutKey(\"Alt+Z\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleGridMode\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+'\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.editor\")}>\n              <Shortcut\n                label={t(\"labels.selectAll\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n              />\n              <Shortcut\n                label={t(\"labels.moveCanvas\")}\n                shortcuts={[\n                  getShortcutKey(`Space+${t(\"shortcutsDialog.drag\")}`),\n                  getShortcutKey(`Wheel+${t(\"shortcutsDialog.drag\")}`),\n                ]}\n                isOr={true}\n              />\n              <Shortcut\n                label={t(\"labels.copy\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.paste\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyAsPng\")}\n                shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.pasteStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.delete\")}\n                shortcuts={[getShortcutKey(\"Del\")]}\n              />\n              <Shortcut\n                label={t(\"labels.sendToBack\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.bringToFront\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.sendBackward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n              />\n              <Shortcut\n                label={t(\"labels.bringForward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n              />\n              <Shortcut\n                label={t(\"labels.duplicateSelection\")}\n                shortcuts={[\n                  getShortcutKey(\"CtrlOrCmd+D\"),\n                  getShortcutKey(`Alt+${t(\"shortcutsDialog.drag\")}`),\n                ]}\n              />\n              <Shortcut\n                label={t(\"buttons.undo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.redo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Z\")]}\n              />\n              <Shortcut\n                label={t(\"labels.group\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+G\")]}\n              />\n              <Shortcut\n                label={t(\"labels.ungroup\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+G\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n        </Columns>\n        <Footer />\n      </Dialog>\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// https://github.com/tholman/github-corners\nexport const GitHubCorner = React.memo(() => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 250 250\"\n    className=\"github-corner rtl-mirror\"\n  >\n    <a\n      href=\"https://github.com/excalidraw/excalidraw\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      aria-label=\"GitHub repository\"\n    >\n      <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill={oc.gray[6]} />\n      <path\n        className=\"octo-arm\"\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n        style={{ transformOrigin: \"130px 106px\" }}\n        fill={oc.white}\n      />\n      <path\n        className=\"octo-body\"\n        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n        fill={oc.white}\n      />\n    </a>\n  </svg>\n));\n","import \"./Tooltip.scss\";\n\nimport React from \"react\";\n\ntype TooltipProps = {\n  children: React.ReactNode;\n  label: string;\n};\n\nexport const Tooltip = ({ children, label }: TooltipProps) => (\n  <div className=\"Tooltip\">\n    <span className=\"Tooltip__label\">{label}</span>\n    {children}\n  </div>\n);\n","import React from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { exportCanvas } from \"../data\";\n\nimport { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { UserList } from \"./UserList\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog, ExportCB } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\n\nimport { ExportType } from \"../scene/types\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ShortcutsDialog } from \"./ShortcutsDialog\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { CLASSES } from \"../constants\";\nimport { shield } from \"./icons\";\nimport { GitHubCorner } from \"./GitHubCorner\";\nimport { Tooltip } from \"./Tooltip\";\n\nimport \"./LayerUI.scss\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  zenModeEnabled: boolean;\n  toggleZenMode: () => void;\n  lng: string;\n}\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  setAppState,\n  canvas,\n  elements,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  zenModeEnabled,\n  toggleZenMode,\n}: LayerUIProps) => {\n  const isMobile = useIsMobile();\n\n  // TODO: Extend tooltip component and use here.\n  const renderEncryptedIcon = () => (\n    <a\n      className={`encrypted-icon tooltip zen-mode-visibility ${\n        zenModeEnabled ? \"zen-mode-visibility--hidden\" : \"\"\n      }`}\n      href=\"https://blog.excalidraw.com/end-to-end-encryption/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span className=\"tooltip-text\" dir=\"auto\">\n        {t(\"encrypted.tooltip\")}\n      </span>\n      {shield}\n    </a>\n  );\n\n  const renderExportDialog = () => {\n    const createExporter = (type: ExportType): ExportCB => (\n      exportedElements,\n      scale,\n    ) => {\n      if (canvas) {\n        exportCanvas(type, exportedElements, appState, canvas, {\n          exportBackground: appState.exportBackground,\n          name: appState.name,\n          viewBackgroundColor: appState.viewBackgroundColor,\n          scale,\n          shouldAddWatermark: appState.shouldAddWatermark,\n        });\n      }\n    };\n    return (\n      <ExportDialog\n        elements={elements}\n        appState={appState}\n        actionManager={actionManager}\n        onExportToPng={createExporter(\"png\")}\n        onExportToSvg={createExporter(\"svg\")}\n        onExportToClipboard={createExporter(\"clipboard\")}\n        onExportToBackend={(exportedElements) => {\n          if (canvas) {\n            exportCanvas(\n              \"backend\",\n              exportedElements,\n              {\n                ...appState,\n                selectedElementIds: {},\n              },\n              canvas,\n              appState,\n            );\n          }\n        }}\n      />\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <Section\n      heading=\"canvasActions\"\n      className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}\n    >\n      {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n      <Island padding={4} style={{ zIndex: 1 }}>\n        <Stack.Col gap={4}>\n          <Stack.Row gap={1} justifyContent=\"space-between\">\n            {actionManager.renderAction(\"loadScene\")}\n            {actionManager.renderAction(\"saveScene\")}\n            {actionManager.renderAction(\"saveAsScene\")}\n            {renderExportDialog()}\n            {actionManager.renderAction(\"clearCanvas\")}\n            <RoomDialog\n              isCollaborating={appState.isCollaborating}\n              collaboratorCount={appState.collaborators.size}\n              username={appState.username}\n              onUsernameChange={onUsernameChange}\n              onRoomCreate={onRoomCreate}\n              onRoomDestroy={onRoomDestroy}\n            />\n          </Stack.Row>\n          {actionManager.renderAction(\"changeViewBackgroundColor\")}\n        </Stack.Col>\n      </Island>\n    </Section>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}\n    >\n      <Island className={CLASSES.SHAPE_ACTIONS_MENU} padding={4}>\n        <SelectedShapeActions\n          appState={appState}\n          elements={elements}\n          renderAction={actionManager.renderAction}\n          elementType={appState.elementType}\n        />\n      </Island>\n    </Section>\n  );\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n    return (\n      <FixedSideContainer side=\"top\">\n        <HintViewer appState={appState} elements={elements} />\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col\n            gap={4}\n            className={zenModeEnabled && \"disable-pointerEvents\"}\n          >\n            {renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          <Section heading=\"shapes\">\n            {(heading) => (\n              <Stack.Col gap={4} align=\"start\">\n                <Stack.Row gap={1}>\n                  <Island padding={1} className={zenModeEnabled && \"zen-mode\"}>\n                    {heading}\n                    <Stack.Row gap={1}>\n                      <ShapesSwitcher\n                        elementType={appState.elementType}\n                        setAppState={setAppState}\n                      />\n                    </Stack.Row>\n                  </Island>\n                  <LockIcon\n                    zenModeEnabled={zenModeEnabled}\n                    checked={appState.elementLocked}\n                    onChange={onLockToggle}\n                    title={t(\"toolBar.lock\")}\n                  />\n                </Stack.Row>\n              </Stack.Col>\n            )}\n          </Section>\n          <UserList\n            className={`zen-mode-transition ${\n              zenModeEnabled && \"transition-right\"\n            }`}\n          >\n            {Array.from(appState.collaborators)\n              // Collaborator is either not initialized or is actually the current user.\n              .filter(([_, client]) => Object.keys(client).length !== 0)\n              .map(([clientId, client]) => (\n                <Tooltip\n                  label={client.username || \"Unknown user\"}\n                  key={clientId}\n                >\n                  {actionManager.renderAction(\"goToCollaborator\", clientId)}\n                </Tooltip>\n              ))}\n          </UserList>\n        </div>\n        {\n          <div\n            className={`App-menu App-menu_bottom zen-mode-transition ${\n              zenModeEnabled && \"App-menu_bottom--transition-left\"\n            }`}\n          >\n            <Stack.Col gap={2}>\n              <Section heading=\"canvasActions\">\n                <Island padding={1}>\n                  <ZoomActions\n                    renderAction={actionManager.renderAction}\n                    zoom={appState.zoom}\n                  />\n                </Island>\n                {renderEncryptedIcon()}\n              </Section>\n            </Stack.Col>\n          </div>\n        }\n      </FixedSideContainer>\n    );\n  };\n\n  const renderFooter = () => (\n    <footer role=\"contentinfo\" className=\"layer-ui__wrapper__footer\">\n      <div\n        className={`zen-mode-transition ${\n          zenModeEnabled && \"transition-right disable-pointerEvents\"\n        }`}\n      >\n        <LanguageList\n          onChange={(lng) => {\n            setLanguage(lng);\n            setAppState({});\n          }}\n          languages={languages}\n          floating\n        />\n        {actionManager.renderAction(\"toggleShortcuts\")}\n      </div>\n      <button\n        className={`disable-zen-mode ${\n          zenModeEnabled && \"disable-zen-mode--visible\"\n        }`}\n        onClick={toggleZenMode}\n      >\n        {t(\"buttons.exitZenMode\")}\n      </button>\n      {appState.scrolledOutside && (\n        <button\n          className=\"scroll-back-to-content\"\n          onClick={() => {\n            setAppState({\n              ...calculateScrollCenter(elements, appState, canvas),\n            });\n          }}\n        >\n          {t(\"buttons.scrollBackToContent\")}\n        </button>\n      )}\n    </footer>\n  );\n\n  return isMobile ? (\n    <MobileMenu\n      appState={appState}\n      elements={elements}\n      actionManager={actionManager}\n      exportButton={renderExportDialog()}\n      setAppState={setAppState}\n      onUsernameChange={onUsernameChange}\n      onRoomCreate={onRoomCreate}\n      onRoomDestroy={onRoomDestroy}\n      onLockToggle={onLockToggle}\n      canvas={canvas}\n    />\n  ) : (\n    <div className=\"layer-ui__wrapper\">\n      {appState.isLoading && <LoadingMessage />}\n      {appState.errorMessage && (\n        <ErrorDialog\n          message={appState.errorMessage}\n          onClose={() => setAppState({ errorMessage: null })}\n        />\n      )}\n      {appState.showShortcutsDialog && (\n        <ShortcutsDialog\n          onClose={() => setAppState({ showShortcutsDialog: null })}\n        />\n      )}\n      {renderFixedSideContainer()}\n      {\n        <aside\n          className={`layer-ui__wrapper__github-corner zen-mode-transition ${\n            zenModeEnabled && \"transition-right\"\n          }`}\n        >\n          <GitHubCorner />\n        </aside>\n      }\n      {renderFooter()}\n    </div>\n  );\n};\n\nconst areEqual = (prev: LayerUIProps, next: LayerUIProps) => {\n  const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n    const {\n      draggingElement,\n      resizingElement,\n      multiElement,\n      editingElement,\n      isResizing,\n      cursorX,\n      cursorY,\n      ...ret\n    } = appState;\n    return ret;\n  };\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n\n  const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n\n  return (\n    prev.lng === next.lng &&\n    prev.elements === next.elements &&\n    keys.every((key) => prevAppState[key] === nextAppState[key])\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n","import React from \"react\";\n\nimport rough from \"roughjs/bin/rough\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { simplify, Point } from \"points-on-curve\";\nimport { FlooredNumber, SocketUpdateData } from \"../types\";\n\nimport {\n  newElement,\n  newTextElement,\n  duplicateElement,\n  resizeTest,\n  isInvisiblySmallElement,\n  isTextElement,\n  textWysiwyg,\n  getCommonBounds,\n  getCursorForResizingElement,\n  getPerfectElementSize,\n  getNormalizedDimensions,\n  getElementMap,\n  getDrawingVersion,\n  getSyncableElements,\n  newLinearElement,\n  resizeElements,\n  getElementWithResizeHandler,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n  getResizeHandlerFromCoords,\n  isNonDeletedElement,\n  dragSelectedElements,\n  getDragOffsetXY,\n  dragNewElement,\n} from \"../element\";\nimport {\n  getElementsWithinSelection,\n  isOverScrollBars,\n  getElementAtPosition,\n  getElementContainingPosition,\n  getNormalizedZoom,\n  getSelectedElements,\n  globalSceneState,\n  isSomeElementSelected,\n  calculateScrollCenter,\n} from \"../scene\";\nimport {\n  decryptAESGEM,\n  saveToLocalStorage,\n  loadScene,\n  loadFromBlob,\n  SOCKET_SERVER,\n  SocketUpdateDataSource,\n  exportCanvas,\n} from \"../data\";\nimport Portal from \"./Portal\";\n\nimport { renderScene } from \"../renderer\";\nimport { AppState, GestureEvent, Gesture } from \"../types\";\nimport { ExcalidrawElement, ExcalidrawTextElement } from \"../element/types\";\n\nimport { distance2d, isPathALoop, getGridPoint } from \"../math\";\n\nimport {\n  isWritableElement,\n  isInputLike,\n  isToolIcon,\n  debounce,\n  distance,\n  resetCursor,\n  viewportCoordsToSceneCoords,\n  sceneCoordsToViewportCoords,\n  setCursorForShape,\n} from \"../utils\";\nimport {\n  KEYS,\n  isArrowKey,\n  getResizeCenterPointKey,\n  getResizeWithSidesSameLengthKey,\n  getRotateWithDiscreteAngleKey,\n} from \"../keys\";\n\nimport { findShapeByKey, shapesShortcutKeys } from \"../shapes\";\nimport { createHistory, SceneHistory } from \"../history\";\n\nimport ContextMenu from \"./ContextMenu\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport \"../actions\";\nimport { actions } from \"../actions/register\";\n\nimport { ActionResult } from \"../actions/types\";\nimport { getDefaultAppState } from \"../appState\";\nimport { t, getLanguage } from \"../i18n\";\n\nimport {\n  copyToAppClipboard,\n  getClipboardContent,\n  probablySupportsClipboardBlob,\n  probablySupportsClipboardWriteText,\n} from \"../clipboard\";\nimport { normalizeScroll } from \"../scene\";\nimport { getCenter, getDistance } from \"../gesture\";\nimport { createUndoAction, createRedoAction } from \"../actions/actionHistory\";\n\nimport {\n  CURSOR_TYPE,\n  ELEMENT_SHIFT_TRANSLATE_AMOUNT,\n  ELEMENT_TRANSLATE_AMOUNT,\n  POINTER_BUTTON,\n  DRAGGING_THRESHOLD,\n  TEXT_TO_CENTER_SNAP_THRESHOLD,\n  LINE_CONFIRM_THRESHOLD,\n  SCENE,\n  EVENT,\n  ENV,\n  CANVAS_ONLY_ACTIONS,\n  GRID_SIZE,\n} from \"../constants\";\nimport {\n  INITAL_SCENE_UPDATE_TIMEOUT,\n  TAP_TWICE_TIMEOUT,\n  SYNC_FULL_SCENE_INTERVAL_MS,\n} from \"../time_constants\";\n\nimport LayerUI from \"./LayerUI\";\nimport { ScrollBars, SceneState } from \"../scene/types\";\nimport { generateCollaborationLink, getCollaborationLinkData } from \"../data\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { SceneStateCallbackRemover } from \"../scene/globalScene\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { actionFinalize, actionDeleteSelected } from \"../actions\";\nimport {\n  restoreUsernameFromLocalStorage,\n  saveUsernameToLocalStorage,\n} from \"../data/localStorage\";\n\nimport throttle from \"lodash.throttle\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  getSelectedGroupIds,\n  selectGroupsForSelectedElements,\n  isElementInGroup,\n  getSelectedGroupIdForElement,\n} from \"../groups\";\n\n/**\n * @param func handler taking at most single parameter (event).\n */\nconst withBatchedUpdates = <\n  TFunction extends ((event: any) => void) | (() => void)\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) =>\n  ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n\nconst { history } = createHistory();\n\nlet didTapTwice: boolean = false;\nlet tappedTwiceTimer = 0;\nlet cursorX = 0;\nlet cursorY = 0;\nlet isHoldingSpace: boolean = false;\nlet isPanning: boolean = false;\nlet isDraggingScrollBar: boolean = false;\nlet currentScrollBars: ScrollBars = { horizontal: null, vertical: null };\n\nlet lastPointerUp: ((event: any) => void) | null = null;\nconst gesture: Gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nclass App extends React.Component<any, AppState> {\n  canvas: HTMLCanvasElement | null = null;\n  rc: RoughCanvas | null = null;\n  portal: Portal = new Portal(this);\n  lastBroadcastedOrReceivedSceneVersion: number = -1;\n  broadcastedElementVersions: Map<string, number> = new Map();\n  removeSceneCallback: SceneStateCallbackRemover | null = null;\n  unmounted: boolean = false;\n  actionManager: ActionManager;\n\n  public state: AppState = {\n    ...getDefaultAppState(),\n    isLoading: true,\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.actionManager = new ActionManager(\n      this.syncActionResult,\n      () => this.state,\n      () => globalSceneState.getElementsIncludingDeleted(),\n    );\n    this.actionManager.registerAll(actions);\n\n    this.actionManager.registerAction(createUndoAction(history));\n    this.actionManager.registerAction(createRedoAction(history));\n  }\n\n  public render() {\n    const { zenModeEnabled } = this.state;\n    const canvasDOMWidth = window.innerWidth;\n    const canvasDOMHeight = window.innerHeight;\n\n    const canvasScale = window.devicePixelRatio;\n\n    const canvasWidth = canvasDOMWidth * canvasScale;\n    const canvasHeight = canvasDOMHeight * canvasScale;\n\n    return (\n      <div className=\"excalidraw\">\n        <LayerUI\n          canvas={this.canvas}\n          appState={this.state}\n          setAppState={this.setAppState}\n          actionManager={this.actionManager}\n          elements={globalSceneState.getElements()}\n          onRoomCreate={this.openPortal}\n          onRoomDestroy={this.closePortal}\n          onUsernameChange={(username) => {\n            saveUsernameToLocalStorage(username);\n            this.setState({\n              username,\n            });\n          }}\n          onLockToggle={this.toggleLock}\n          zenModeEnabled={zenModeEnabled}\n          toggleZenMode={this.toggleZenMode}\n          lng={getLanguage().lng}\n        />\n        <main>\n          <canvas\n            id=\"canvas\"\n            style={{\n              width: canvasDOMWidth,\n              height: canvasDOMHeight,\n            }}\n            width={canvasWidth}\n            height={canvasHeight}\n            ref={this.handleCanvasRef}\n            onContextMenu={this.handleCanvasContextMenu}\n            onPointerDown={this.handleCanvasPointerDown}\n            onDoubleClick={this.handleCanvasDoubleClick}\n            onPointerMove={this.handleCanvasPointerMove}\n            onPointerUp={this.removePointer}\n            onPointerCancel={this.removePointer}\n            onDrop={this.handleCanvasOnDrop}\n          >\n            {t(\"labels.drawingCanvas\")}\n          </canvas>\n        </main>\n      </div>\n    );\n  }\n\n  private syncActionResult = withBatchedUpdates((res: ActionResult) => {\n    if (this.unmounted) {\n      return;\n    }\n\n    let editingElement: AppState[\"editingElement\"] | null = null;\n    if (res.elements) {\n      res.elements.forEach((element) => {\n        if (\n          this.state.editingElement?.id === element.id &&\n          this.state.editingElement !== element &&\n          isNonDeletedElement(element)\n        ) {\n          editingElement = element;\n        }\n      });\n      globalSceneState.replaceAllElements(res.elements);\n      if (res.commitToHistory) {\n        history.resumeRecording();\n      }\n    }\n\n    if (res.appState || editingElement) {\n      if (res.commitToHistory) {\n        history.resumeRecording();\n      }\n      this.setState(\n        (state) => ({\n          ...res.appState,\n          editingElement:\n            editingElement || res.appState?.editingElement || null,\n          isCollaborating: state.isCollaborating,\n          collaborators: state.collaborators,\n        }),\n        () => {\n          if (res.syncHistory) {\n            history.setCurrentState(\n              this.state,\n              globalSceneState.getElementsIncludingDeleted(),\n            );\n          }\n        },\n      );\n    }\n  });\n\n  // Lifecycle\n\n  private onBlur = withBatchedUpdates(() => {\n    isHoldingSpace = false;\n    this.saveDebounced();\n    this.saveDebounced.flush();\n  });\n\n  private onUnload = () => {\n    this.destroySocketClient();\n    this.onBlur();\n  };\n\n  private disableEvent: EventHandlerNonNull = (event) => {\n    event.preventDefault();\n  };\n\n  private onFontLoaded = () => {\n    globalSceneState.getElementsIncludingDeleted().forEach((element) => {\n      if (isTextElement(element)) {\n        invalidateShapeForElement(element);\n      }\n    });\n    this.onSceneUpdated();\n  };\n\n  private initializeScene = async () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const id = searchParams.get(\"id\");\n    const jsonMatch = window.location.hash.match(\n      /^#json=([0-9]+),([a-zA-Z0-9_-]+)$/,\n    );\n\n    const isCollaborationScene = getCollaborationLinkData(window.location.href);\n\n    if (!isCollaborationScene) {\n      let scene: ResolutionType<typeof loadScene> | undefined;\n      // Backwards compatibility with legacy url format\n      if (id) {\n        scene = await loadScene(id);\n      } else if (jsonMatch) {\n        scene = await loadScene(jsonMatch[1], jsonMatch[2]);\n      } else {\n        scene = await loadScene(null);\n      }\n      if (scene) {\n        this.syncActionResult(scene);\n      }\n    }\n\n    if (this.state.isLoading) {\n      this.setState({ isLoading: false });\n    }\n\n    // run this last else the `isLoading` state\n    if (isCollaborationScene) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n  };\n\n  public async componentDidMount() {\n    if (\n      process.env.NODE_ENV === ENV.TEST ||\n      process.env.NODE_ENV === ENV.DEVELOPMENT\n    ) {\n      const setState = this.setState.bind(this);\n      Object.defineProperties(window.h, {\n        state: {\n          configurable: true,\n          get: () => {\n            return this.state;\n          },\n        },\n        setState: {\n          configurable: true,\n          value: (...args: Parameters<typeof setState>) => {\n            return this.setState(...args);\n          },\n        },\n        app: {\n          configurable: true,\n          value: this,\n        },\n      });\n    }\n\n    this.removeSceneCallback = globalSceneState.addCallback(\n      this.onSceneUpdated,\n    );\n\n    this.addEventListeners();\n    this.initializeScene();\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n    this.removeSceneCallback!();\n    this.removeEventListeners();\n  }\n\n  private onResize = withBatchedUpdates(() => {\n    globalSceneState\n      .getElementsIncludingDeleted()\n      .forEach((element) => invalidateShapeForElement(element));\n    this.setState({});\n  });\n\n  private removeEventListeners() {\n    document.removeEventListener(EVENT.COPY, this.onCopy);\n    document.removeEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.removeEventListener(EVENT.CUT, this.onCut);\n\n    document.removeEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.removeEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n      false,\n    );\n    document.removeEventListener(EVENT.KEYUP, this.onKeyUp);\n    window.removeEventListener(EVENT.RESIZE, this.onResize, false);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.removeEventListener(EVENT.BLUR, this.onBlur, false);\n    window.removeEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.removeEventListener(EVENT.DROP, this.disableEvent, false);\n\n    document.removeEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.removeEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n\n  private addEventListeners() {\n    document.addEventListener(EVENT.COPY, this.onCopy);\n    document.addEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.addEventListener(EVENT.CUT, this.onCut);\n\n    document.addEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.addEventListener(EVENT.KEYUP, this.onKeyUp, { passive: true });\n    document.addEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n    );\n    window.addEventListener(EVENT.RESIZE, this.onResize, false);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.addEventListener(EVENT.BLUR, this.onBlur, false);\n    window.addEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.addEventListener(EVENT.DROP, this.disableEvent, false);\n\n    // rerender text elements on font load to fix #637 && #1553\n    document.fonts?.addEventListener?.(\"loadingdone\", this.onFontLoaded);\n\n    // Safari-only desktop pinch zoom\n    document.addEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.addEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n\n  private beforeUnload = withBatchedUpdates((event: BeforeUnloadEvent) => {\n    if (\n      this.state.isCollaborating &&\n      globalSceneState.getElements().length > 0\n    ) {\n      event.preventDefault();\n      // NOTE: modern browsers no longer allow showing a custom message here\n      event.returnValue = \"\";\n    }\n  });\n\n  queueBroadcastAllElements = throttle(() => {\n    this.broadcastScene(SCENE.UPDATE, /* syncAll */ true);\n  }, SYNC_FULL_SCENE_INTERVAL_MS);\n\n  componentDidUpdate() {\n    if (this.state.isCollaborating && !this.portal.socket) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.selectedElementIds[this.state.editingLinearElement.elementId]\n    ) {\n      // defer so that the commitToHistory flag isn't reset via current update\n      setTimeout(() => {\n        this.actionManager.executeAction(actionFinalize);\n      });\n    }\n\n    const cursorButton: {\n      [id: string]: string | undefined;\n    } = {};\n    const pointerViewportCoords: SceneState[\"remotePointerViewportCoords\"] = {};\n    const remoteSelectedElementIds: SceneState[\"remoteSelectedElementIds\"] = {};\n    const pointerUsernames: { [id: string]: string } = {};\n    this.state.collaborators.forEach((user, socketID) => {\n      if (user.selectedElementIds) {\n        for (const id of Object.keys(user.selectedElementIds)) {\n          if (!(id in remoteSelectedElementIds)) {\n            remoteSelectedElementIds[id] = [];\n          }\n          remoteSelectedElementIds[id].push(socketID);\n        }\n      }\n      if (!user.pointer) {\n        return;\n      }\n      if (user.username) {\n        pointerUsernames[socketID] = user.username;\n      }\n      pointerViewportCoords[socketID] = sceneCoordsToViewportCoords(\n        {\n          sceneX: user.pointer.x,\n          sceneY: user.pointer.y,\n        },\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      cursorButton[socketID] = user.button;\n    });\n    const elements = globalSceneState.getElements();\n    const { atLeastOneVisibleElement, scrollBars } = renderScene(\n      elements.filter((element) => {\n        // don't render text element that's being currently edited (it's\n        //  rendered on remote only)\n        return (\n          !this.state.editingElement ||\n          this.state.editingElement.type !== \"text\" ||\n          element.id !== this.state.editingElement.id\n        );\n      }),\n      this.state,\n      this.state.selectionElement,\n      window.devicePixelRatio,\n      this.rc!,\n      this.canvas!,\n      {\n        scrollX: this.state.scrollX,\n        scrollY: this.state.scrollY,\n        viewBackgroundColor: this.state.viewBackgroundColor,\n        zoom: this.state.zoom,\n        remotePointerViewportCoords: pointerViewportCoords,\n        remotePointerButton: cursorButton,\n        remoteSelectedElementIds: remoteSelectedElementIds,\n        remotePointerUsernames: pointerUsernames,\n        shouldCacheIgnoreZoom: this.state.shouldCacheIgnoreZoom,\n      },\n      {\n        renderOptimizations: true,\n      },\n    );\n    if (scrollBars) {\n      currentScrollBars = scrollBars;\n    }\n    const scrolledOutside = !atLeastOneVisibleElement && elements.length > 0;\n    if (this.state.scrolledOutside !== scrolledOutside) {\n      this.setState({ scrolledOutside: scrolledOutside });\n    }\n    this.saveDebounced();\n\n    if (\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()) >\n      this.lastBroadcastedOrReceivedSceneVersion\n    ) {\n      this.broadcastScene(SCENE.UPDATE, /* syncAll */ false);\n      this.queueBroadcastAllElements();\n    }\n\n    history.record(this.state, globalSceneState.getElementsIncludingDeleted());\n  }\n\n  // Copy/paste\n\n  private onCut = withBatchedUpdates((event: ClipboardEvent) => {\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    this.actionManager.executeAction(actionDeleteSelected);\n    event.preventDefault();\n  });\n\n  private onCopy = withBatchedUpdates((event: ClipboardEvent) => {\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    event.preventDefault();\n  });\n\n  private copyAll = () => {\n    copyToAppClipboard(globalSceneState.getElements(), this.state);\n  };\n\n  private copyToClipboardAsPng = () => {\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    exportCanvas(\n      \"clipboard\",\n      selectedElements.length ? selectedElements : elements,\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private copyToClipboardAsSvg = () => {\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n    exportCanvas(\n      \"clipboard-svg\",\n      selectedElements.length\n        ? selectedElements\n        : globalSceneState.getElements(),\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private static resetTapTwice() {\n    didTapTwice = false;\n  }\n\n  private onTapStart = (event: TouchEvent) => {\n    if (!didTapTwice) {\n      didTapTwice = true;\n      clearTimeout(tappedTwiceTimer);\n      tappedTwiceTimer = window.setTimeout(\n        App.resetTapTwice,\n        TAP_TWICE_TIMEOUT,\n      );\n      return;\n    }\n    // insert text only if we tapped twice with a single finger\n    // event.touches.length === 1 will also prevent inserting text when user's zooming\n    if (didTapTwice && event.touches.length === 1) {\n      const [touch] = event.touches;\n      // @ts-ignore\n      this.handleCanvasDoubleClick({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n      });\n      didTapTwice = false;\n      clearTimeout(tappedTwiceTimer);\n    }\n    event.preventDefault();\n    if (event.touches.length === 2) {\n      this.setState({\n        selectedElementIds: {},\n      });\n    }\n  };\n\n  private onTapEnd = (event: TouchEvent) => {\n    event.preventDefault();\n    if (event.touches.length > 0) {\n      const { previousSelectedElementIds } = this.state;\n      this.setState({\n        previousSelectedElementIds: {},\n        selectedElementIds: previousSelectedElementIds,\n      });\n    }\n  };\n\n  private pasteFromClipboard = withBatchedUpdates(\n    async (event: ClipboardEvent | null) => {\n      // #686\n      const target = document.activeElement;\n      const elementUnderCursor = document.elementFromPoint(cursorX, cursorY);\n      if (\n        // if no ClipboardEvent supplied, assume we're pasting via contextMenu\n        //  thus these checks don't make sense\n        event &&\n        (!(elementUnderCursor instanceof HTMLCanvasElement) ||\n          isWritableElement(target))\n      ) {\n        return;\n      }\n      const data = await getClipboardContent(\n        this.state,\n        cursorX,\n        cursorY,\n        event,\n      );\n      if (data.error) {\n        alert(data.error);\n      } else if (data.elements) {\n        this.addElementsFromPaste(data.elements);\n      } else if (data.text) {\n        this.addTextFromPaste(data.text);\n      }\n      this.selectShapeTool(\"selection\");\n      event?.preventDefault();\n    },\n  );\n\n  private addElementsFromPaste = (\n    clipboardElements: readonly ExcalidrawElement[],\n  ) => {\n    const [minX, minY, maxX, maxY] = getCommonBounds(clipboardElements);\n\n    const elementsCenterX = distance(minX, maxX) / 2;\n    const elementsCenterY = distance(minY, maxY) / 2;\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const dx = x - elementsCenterX;\n    const dy = y - elementsCenterY;\n    const groupIdMap = new Map();\n\n    const newElements = clipboardElements.map((element) =>\n      duplicateElement(this.state.editingGroupId, groupIdMap, element, {\n        x: element.x + dx - minX,\n        y: element.y + dy - minY,\n      }),\n    );\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      ...newElements,\n    ]);\n    history.resumeRecording();\n    this.setState({\n      selectedElementIds: newElements.reduce((map, element) => {\n        map[element.id] = true;\n        return map;\n      }, {} as any),\n    });\n  };\n\n  private addTextFromPaste(text: any) {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const element = newTextElement({\n      x: x,\n      y: y,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      text: text,\n      fontSize: this.state.currentItemFontSize,\n      fontFamily: this.state.currentItemFontFamily,\n      textAlign: this.state.currentItemTextAlign,\n    });\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({ selectedElementIds: { [element.id]: true } });\n    history.resumeRecording();\n  }\n\n  // Collaboration\n\n  setAppState = (obj: any) => {\n    this.setState(obj);\n  };\n\n  removePointer = (event: React.PointerEvent<HTMLElement>) => {\n    gesture.pointers.delete(event.pointerId);\n  };\n\n  openPortal = async () => {\n    window.history.pushState(\n      {},\n      \"Excalidraw\",\n      await generateCollaborationLink(),\n    );\n    this.initializeSocketClient({ showLoadingState: false });\n  };\n\n  closePortal = () => {\n    window.history.pushState({}, \"Excalidraw\", window.location.origin);\n    this.destroySocketClient();\n  };\n\n  toggleLock = () => {\n    this.setState((prevState) => ({\n      elementLocked: !prevState.elementLocked,\n      elementType: prevState.elementLocked\n        ? \"selection\"\n        : prevState.elementType,\n    }));\n  };\n\n  toggleZenMode = () => {\n    this.setState({\n      zenModeEnabled: !this.state.zenModeEnabled,\n    });\n  };\n\n  toggleGridMode = () => {\n    this.setState({\n      gridSize: this.state.gridSize ? null : GRID_SIZE,\n    });\n  };\n\n  private destroySocketClient = () => {\n    this.setState({\n      isCollaborating: false,\n      collaborators: new Map(),\n    });\n    this.portal.close();\n  };\n\n  private initializeSocketClient = async (opts: {\n    showLoadingState: boolean;\n  }) => {\n    if (this.portal.socket) {\n      return;\n    }\n    const roomMatch = getCollaborationLinkData(window.location.href);\n    if (roomMatch) {\n      const initialize = () => {\n        this.portal.socketInitialized = true;\n        clearTimeout(initializationTimer);\n        if (this.state.isLoading && !this.unmounted) {\n          this.setState({ isLoading: false });\n        }\n      };\n      // fallback in case you're not alone in the room but still don't receive\n      //  initial SCENE_UPDATE message\n      const initializationTimer = setTimeout(\n        initialize,\n        INITAL_SCENE_UPDATE_TIMEOUT,\n      );\n\n      const updateScene = (\n        decryptedData: SocketUpdateDataSource[SCENE.INIT | SCENE.UPDATE],\n        { scrollToContent = false }: { scrollToContent?: boolean } = {},\n      ) => {\n        const { elements: remoteElements } = decryptedData.payload;\n\n        if (scrollToContent) {\n          this.setState({\n            ...this.state,\n            ...calculateScrollCenter(\n              remoteElements.filter((element: { isDeleted: boolean }) => {\n                return !element.isDeleted;\n              }),\n              this.state,\n              this.canvas,\n            ),\n          });\n        }\n\n        // Perform reconciliation - in collaboration, if we encounter\n        // elements with more staler versions than ours, ignore them\n        // and keep ours.\n        if (\n          globalSceneState.getElementsIncludingDeleted() == null ||\n          globalSceneState.getElementsIncludingDeleted().length === 0\n        ) {\n          globalSceneState.replaceAllElements(remoteElements);\n        } else {\n          // create a map of ids so we don't have to iterate\n          // over the array more than once.\n          const localElementMap = getElementMap(\n            globalSceneState.getElementsIncludingDeleted(),\n          );\n\n          // Reconcile\n          const newElements = remoteElements\n            .reduce((elements, element) => {\n              // if the remote element references one that's currently\n              //  edited on local, skip it (it'll be added in the next\n              //  step)\n              if (\n                element.id === this.state.editingElement?.id ||\n                element.id === this.state.resizingElement?.id ||\n                element.id === this.state.draggingElement?.id\n              ) {\n                return elements;\n              }\n\n              if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version > element.version\n              ) {\n                elements.push(localElementMap[element.id]);\n                delete localElementMap[element.id];\n              } else if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version === element.version &&\n                localElementMap[element.id].versionNonce !==\n                  element.versionNonce\n              ) {\n                // resolve conflicting edits deterministically by taking the one with the lowest versionNonce\n                if (\n                  localElementMap[element.id].versionNonce <\n                  element.versionNonce\n                ) {\n                  elements.push(localElementMap[element.id]);\n                } else {\n                  // it should be highly unlikely that the two versionNonces are the same. if we are\n                  // really worried about this, we can replace the versionNonce with the socket id.\n                  elements.push(element);\n                }\n                delete localElementMap[element.id];\n              } else {\n                elements.push(element);\n                delete localElementMap[element.id];\n              }\n\n              return elements;\n            }, [] as Mutable<typeof remoteElements>)\n            // add local elements that weren't deleted or on remote\n            .concat(...Object.values(localElementMap));\n\n          // Avoid broadcasting to the rest of the collaborators the scene\n          // we just received!\n          // Note: this needs to be set before replaceAllElements as it\n          // syncronously calls render.\n          this.lastBroadcastedOrReceivedSceneVersion = getDrawingVersion(\n            newElements,\n          );\n\n          globalSceneState.replaceAllElements(newElements);\n        }\n\n        // We haven't yet implemented multiplayer undo functionality, so we clear the undo stack\n        // when we receive any messages from another peer. This UX can be pretty rough -- if you\n        // undo, a user makes a change, and then try to redo, your element(s) will be lost. However,\n        // right now we think this is the right tradeoff.\n        history.clear();\n        if (!this.portal.socketInitialized) {\n          initialize();\n        }\n      };\n\n      const { default: socketIOClient }: any = await import(\n        /* webpackChunkName: \"socketIoClient\" */ \"socket.io-client\"\n      );\n\n      this.portal.open(\n        socketIOClient(SOCKET_SERVER),\n        roomMatch[1],\n        roomMatch[2],\n      );\n\n      // All socket listeners are moving to Portal\n      this.portal.socket!.on(\n        \"client-broadcast\",\n        async (encryptedData: ArrayBuffer, iv: Uint8Array) => {\n          if (!this.portal.roomKey) {\n            return;\n          }\n          const decryptedData = await decryptAESGEM(\n            encryptedData,\n            this.portal.roomKey,\n            iv,\n          );\n\n          switch (decryptedData.type) {\n            case \"INVALID_RESPONSE\":\n              return;\n            case SCENE.INIT: {\n              if (!this.portal.socketInitialized) {\n                updateScene(decryptedData, { scrollToContent: true });\n              }\n              break;\n            }\n            case SCENE.UPDATE:\n              updateScene(decryptedData);\n              break;\n            case \"MOUSE_LOCATION\": {\n              const {\n                socketID,\n                pointerCoords,\n                button,\n                username,\n                selectedElementIds,\n              } = decryptedData.payload;\n              this.setState((state) => {\n                if (!state.collaborators.has(socketID)) {\n                  state.collaborators.set(socketID, {});\n                }\n                const user = state.collaborators.get(socketID)!;\n                user.pointer = pointerCoords;\n                user.button = button;\n                user.selectedElementIds = selectedElementIds;\n                user.username = username;\n                state.collaborators.set(socketID, user);\n                return state;\n              });\n              break;\n            }\n          }\n        },\n      );\n      this.portal.socket!.on(\"first-in-room\", () => {\n        if (this.portal.socket) {\n          this.portal.socket.off(\"first-in-room\");\n        }\n        initialize();\n      });\n\n      this.setState({\n        isCollaborating: true,\n        isLoading: opts.showLoadingState ? true : this.state.isLoading,\n      });\n    }\n  };\n\n  // Portal-only\n  setCollaborators(sockets: string[]) {\n    this.setState((state) => {\n      const collaborators: typeof state.collaborators = new Map();\n      for (const socketID of sockets) {\n        if (state.collaborators.has(socketID)) {\n          collaborators.set(socketID, state.collaborators.get(socketID)!);\n        } else {\n          collaborators.set(socketID, {});\n        }\n      }\n      return {\n        ...state,\n        collaborators,\n      };\n    });\n  }\n\n  private broadcastMouseLocation = (payload: {\n    pointerCoords: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointerCoords\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n  }) => {\n    if (this.portal.socket?.id) {\n      const data: SocketUpdateDataSource[\"MOUSE_LOCATION\"] = {\n        type: \"MOUSE_LOCATION\",\n        payload: {\n          socketID: this.portal.socket.id,\n          pointerCoords: payload.pointerCoords,\n          button: payload.button || \"up\",\n          selectedElementIds: this.state.selectedElementIds,\n          username: this.state.username,\n        },\n      };\n      return this.portal._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n\n  // maybe should move to Portal\n  broadcastScene = (sceneType: SCENE.INIT | SCENE.UPDATE, syncAll: boolean) => {\n    if (sceneType === SCENE.INIT && !syncAll) {\n      throw new Error(\"syncAll must be true when sending SCENE.INIT\");\n    }\n\n    let syncableElements = getSyncableElements(\n      globalSceneState.getElementsIncludingDeleted(),\n    );\n\n    if (!syncAll) {\n      // sync out only the elements we think we need to to save bandwidth.\n      // periodically we'll resync the whole thing to make sure no one diverges\n      // due to a dropped message (server goes down etc).\n      syncableElements = syncableElements.filter(\n        (syncableElement) =>\n          !this.broadcastedElementVersions.has(syncableElement.id) ||\n          syncableElement.version >\n            this.broadcastedElementVersions.get(syncableElement.id)!,\n      );\n    }\n\n    const data: SocketUpdateDataSource[typeof sceneType] = {\n      type: sceneType,\n      payload: {\n        elements: syncableElements,\n      },\n    };\n    this.lastBroadcastedOrReceivedSceneVersion = Math.max(\n      this.lastBroadcastedOrReceivedSceneVersion,\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()),\n    );\n    for (const syncableElement of syncableElements) {\n      this.broadcastedElementVersions.set(\n        syncableElement.id,\n        syncableElement.version,\n      );\n    }\n    return this.portal._broadcastSocketData(data as SocketUpdateData);\n  };\n\n  private onSceneUpdated = () => {\n    this.setState({});\n  };\n\n  private updateCurrentCursorPosition = withBatchedUpdates(\n    (event: MouseEvent) => {\n      cursorX = event.x;\n      cursorY = event.y;\n    },\n  );\n\n  restoreUserName() {\n    const username = restoreUsernameFromLocalStorage();\n\n    if (username !== null) {\n      this.setState({\n        username,\n      });\n    }\n  }\n\n  // Input handling\n\n  private onKeyDown = withBatchedUpdates((event: KeyboardEvent) => {\n    // ensures we don't prevent devTools select-element feature\n    if (event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\") {\n      return;\n    }\n\n    if (\n      (isWritableElement(event.target) && event.key !== KEYS.ESCAPE) ||\n      // case: using arrows to move between buttons\n      (isArrowKey(event.key) && isInputLike(event.target))\n    ) {\n      return;\n    }\n\n    if (event.key === KEYS.QUESTION_MARK) {\n      this.setState({\n        showShortcutsDialog: true,\n      });\n    }\n\n    if (\n      !event[KEYS.CTRL_OR_CMD] &&\n      event.altKey &&\n      event.keyCode === KEYS.Z_KEY_CODE\n    ) {\n      this.toggleZenMode();\n    }\n\n    if (event[KEYS.CTRL_OR_CMD] && event.keyCode === KEYS.GRID_KEY_CODE) {\n      this.toggleGridMode();\n    }\n\n    if (event.code === \"KeyC\" && event.altKey && event.shiftKey) {\n      this.copyToClipboardAsPng();\n      event.preventDefault();\n      return;\n    }\n\n    if (this.actionManager.handleKeyDown(event)) {\n      return;\n    }\n\n    const shape = findShapeByKey(event.key);\n\n    if (isArrowKey(event.key)) {\n      const step =\n        (this.state.gridSize &&\n          (event.shiftKey ? ELEMENT_TRANSLATE_AMOUNT : this.state.gridSize)) ||\n        (event.shiftKey\n          ? ELEMENT_SHIFT_TRANSLATE_AMOUNT\n          : ELEMENT_TRANSLATE_AMOUNT);\n      globalSceneState.replaceAllElements(\n        globalSceneState.getElementsIncludingDeleted().map((el) => {\n          if (this.state.selectedElementIds[el.id]) {\n            const update: { x?: number; y?: number } = {};\n            if (event.key === KEYS.ARROW_LEFT) {\n              update.x = el.x - step;\n            } else if (event.key === KEYS.ARROW_RIGHT) {\n              update.x = el.x + step;\n            } else if (event.key === KEYS.ARROW_UP) {\n              update.y = el.y - step;\n            } else if (event.key === KEYS.ARROW_DOWN) {\n              update.y = el.y + step;\n            }\n            return newElementWith(el, update);\n          }\n          return el;\n        }),\n      );\n      event.preventDefault();\n    } else if (event.key === KEYS.ENTER) {\n      const selectedElements = getSelectedElements(\n        globalSceneState.getElements(),\n        this.state,\n      );\n\n      if (\n        selectedElements.length === 1 &&\n        isLinearElement(selectedElements[0])\n      ) {\n        if (\n          !this.state.editingLinearElement ||\n          this.state.editingLinearElement.elementId !== selectedElements[0].id\n        ) {\n          history.resumeRecording();\n          this.setState({\n            editingLinearElement: new LinearElementEditor(selectedElements[0]),\n          });\n        }\n      } else if (\n        selectedElements.length === 1 &&\n        !isLinearElement(selectedElements[0])\n      ) {\n        const selectedElement = selectedElements[0];\n        const x = selectedElement.x + selectedElement.width / 2;\n        const y = selectedElement.y + selectedElement.height / 2;\n\n        this.startTextEditing({\n          x: x,\n          y: y,\n        });\n        event.preventDefault();\n        return;\n      }\n    } else if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      this.state.draggingElement === null\n    ) {\n      if (shapesShortcutKeys.includes(event.key.toLowerCase())) {\n        this.selectShapeTool(shape);\n      } else if (event.key === \"q\") {\n        this.toggleLock();\n      }\n    }\n    if (event.key === KEYS.SPACE && gesture.pointers.size === 0) {\n      isHoldingSpace = true;\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n    }\n  });\n\n  private onKeyUp = withBatchedUpdates((event: KeyboardEvent) => {\n    if (event.key === KEYS.SPACE) {\n      if (this.state.elementType === \"selection\") {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n      }\n      isHoldingSpace = false;\n    }\n  });\n\n  private selectShapeTool(elementType: AppState[\"elementType\"]) {\n    if (!isHoldingSpace) {\n      setCursorForShape(elementType);\n    }\n    if (isToolIcon(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    if (elementType !== \"selection\") {\n      this.setState({\n        elementType,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    } else {\n      this.setState({ elementType });\n    }\n  }\n\n  private onGestureStart = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    this.setState({\n      selectedElementIds: {},\n    });\n    gesture.initialScale = this.state.zoom;\n  });\n\n  private onGestureChange = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      zoom: getNormalizedZoom(gesture.initialScale! * event.scale),\n    });\n  });\n\n  private onGestureEnd = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    const { previousSelectedElementIds } = this.state;\n    this.setState({\n      previousSelectedElementIds: {},\n      selectedElementIds: previousSelectedElementIds,\n    });\n    gesture.initialScale = null;\n  });\n\n  private setElements = (elements: readonly ExcalidrawElement[]) => {\n    globalSceneState.replaceAllElements(elements);\n  };\n\n  private handleTextWysiwyg(\n    element: ExcalidrawTextElement,\n    {\n      x,\n      y,\n      isExistingElement = false,\n    }: { x: number; y: number; isExistingElement?: boolean },\n  ) {\n    const resetSelection = () => {\n      this.setState({\n        draggingElement: null,\n        editingElement: null,\n      });\n    };\n\n    const deleteElement = () => {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id) {\n            return newElementWith(_element, { isDeleted: true });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    const updateElement = (text: string) => {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id) {\n            return newTextElement({\n              ...(_element as ExcalidrawTextElement),\n              x: element.x,\n              y: element.y,\n              text,\n            });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    textWysiwyg({\n      id: element.id,\n      x,\n      y,\n      initText: element.text,\n      strokeColor: element.strokeColor,\n      opacity: element.opacity,\n      fontSize: element.fontSize,\n      fontFamily: element.fontFamily,\n      angle: element.angle,\n      textAlign: element.textAlign,\n      zoom: this.state.zoom,\n      onChange: withBatchedUpdates((text) => {\n        if (text) {\n          updateElement(text);\n        } else {\n          deleteElement();\n        }\n      }),\n      onSubmit: withBatchedUpdates((text) => {\n        updateElement(text);\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: true,\n          },\n        }));\n        if (this.state.elementLocked) {\n          setCursorForShape(this.state.elementType);\n        }\n        history.resumeRecording();\n        resetSelection();\n      }),\n      onCancel: withBatchedUpdates(() => {\n        deleteElement();\n        if (isExistingElement) {\n          history.resumeRecording();\n        }\n        resetSelection();\n      }),\n    });\n    // deselect all other elements when inserting text\n    this.setState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      editingGroupId: null,\n    });\n\n    // do an initial update to re-initialize element position since we were\n    //  modifying element's x/y for sake of editor (case: syncing to remote)\n    updateElement(element.text);\n  }\n\n  private startTextEditing = ({\n    x,\n    y,\n    clientX,\n    clientY,\n    centerIfPossible = true,\n  }: {\n    x: number;\n    y: number;\n    clientX?: number;\n    clientY?: number;\n    centerIfPossible?: boolean;\n  }) => {\n    const elementAtPosition = getElementAtPosition(\n      globalSceneState.getElements(),\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n\n    const element =\n      elementAtPosition && isTextElement(elementAtPosition)\n        ? elementAtPosition\n        : newTextElement({\n            x: x,\n            y: y,\n            strokeColor: this.state.currentItemStrokeColor,\n            backgroundColor: this.state.currentItemBackgroundColor,\n            fillStyle: this.state.currentItemFillStyle,\n            strokeWidth: this.state.currentItemStrokeWidth,\n            strokeStyle: this.state.currentItemStrokeStyle,\n            roughness: this.state.currentItemRoughness,\n            opacity: this.state.currentItemOpacity,\n            text: \"\",\n            fontSize: this.state.currentItemFontSize,\n            fontFamily: this.state.currentItemFontFamily,\n            textAlign: this.state.currentItemTextAlign,\n          });\n\n    this.setState({ editingElement: element });\n\n    let textX = clientX || x;\n    let textY = clientY || y;\n\n    let isExistingTextElement = false;\n\n    if (elementAtPosition && isTextElement(elementAtPosition)) {\n      isExistingTextElement = true;\n      const centerElementX = elementAtPosition.x + elementAtPosition.width / 2;\n      const centerElementY = elementAtPosition.y + elementAtPosition.height / 2;\n\n      const {\n        x: centerElementXInViewport,\n        y: centerElementYInViewport,\n      } = sceneCoordsToViewportCoords(\n        { sceneX: centerElementX, sceneY: centerElementY },\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n      textX = centerElementXInViewport;\n      textY = centerElementYInViewport;\n\n      // x and y will change after calling newTextElement function\n      mutateElement(element, {\n        x: centerElementX,\n        y: centerElementY,\n      });\n    } else {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted(),\n        element,\n      ]);\n\n      if (centerIfPossible) {\n        const snappedToCenterPosition = this.getTextWysiwygSnappedToCenterPosition(\n          x,\n          y,\n          this.state,\n          this.canvas,\n          window.devicePixelRatio,\n        );\n\n        if (snappedToCenterPosition) {\n          mutateElement(element, {\n            x: snappedToCenterPosition.elementCenterX,\n            y: snappedToCenterPosition.elementCenterY,\n          });\n          textX = snappedToCenterPosition.wysiwygX;\n          textY = snappedToCenterPosition.wysiwygY;\n        }\n      }\n    }\n\n    this.setState({\n      editingElement: element,\n    });\n\n    this.handleTextWysiwyg(element, {\n      x: textX,\n      y: textY,\n      isExistingElement: isExistingTextElement,\n    });\n  };\n\n  private handleCanvasDoubleClick = (\n    event: React.MouseEvent<HTMLCanvasElement>,\n  ) => {\n    // case: double-clicking with arrow/line tool selected would both create\n    //  text and enter multiElement mode\n    if (this.state.multiElement) {\n      return;\n    }\n\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n\n    if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n      if (\n        !this.state.editingLinearElement ||\n        this.state.editingLinearElement.elementId !== selectedElements[0].id\n      ) {\n        history.resumeRecording();\n        this.setState({\n          editingLinearElement: new LinearElementEditor(selectedElements[0]),\n        });\n      }\n      return;\n    }\n\n    resetCursor();\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const selectedGroupIds = getSelectedGroupIds(this.state);\n\n    if (selectedGroupIds.length > 0) {\n      const elements = globalSceneState.getElements();\n      const hitElement = getElementAtPosition(\n        elements,\n        this.state,\n        x,\n        y,\n        this.state.zoom,\n      );\n\n      const selectedGroupId =\n        hitElement &&\n        getSelectedGroupIdForElement(hitElement, this.state.selectedGroupIds);\n\n      if (selectedGroupId) {\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              editingGroupId: selectedGroupId,\n              selectedElementIds: { [hitElement!.id]: true },\n              selectedGroupIds: {},\n            },\n            globalSceneState.getElements(),\n          ),\n        );\n        return;\n      }\n    }\n\n    resetCursor();\n\n    this.startTextEditing({\n      x: x,\n      y: y,\n      clientX: event.clientX,\n      clientY: event.clientY,\n      centerIfPossible: !event.altKey,\n    });\n  };\n\n  private handleCanvasPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.savePointer(event.clientX, event.clientY, this.state.cursorButton);\n\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n\n    if (gesture.pointers.size === 2) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter!.x;\n      const deltaY = center.y - gesture.lastCenter!.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance!;\n\n      this.setState({\n        scrollX: normalizeScroll(this.state.scrollX + deltaX / this.state.zoom),\n        scrollY: normalizeScroll(this.state.scrollY + deltaY / this.state.zoom),\n        zoom: getNormalizedZoom(gesture.initialScale! * scaleFactor),\n        shouldCacheIgnoreZoom: true,\n      });\n      this.resetShouldCacheIgnoreZoomDebounced();\n    } else {\n      gesture.lastCenter = gesture.initialDistance = gesture.initialScale = null;\n    }\n\n    if (isHoldingSpace || isPanning || isDraggingScrollBar) {\n      return;\n    }\n    const {\n      isOverHorizontalScrollBar,\n      isOverVerticalScrollBar,\n    } = isOverScrollBars(currentScrollBars, event.clientX, event.clientY);\n    const isOverScrollBar =\n      isOverVerticalScrollBar || isOverHorizontalScrollBar;\n    if (!this.state.draggingElement && !this.state.multiElement) {\n      if (isOverScrollBar) {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n      }\n    }\n\n    const { x: scenePointerX, y: scenePointerY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (\n      this.state.editingLinearElement &&\n      this.state.editingLinearElement.draggingElementPointIndex === null\n    ) {\n      const editingLinearElement = LinearElementEditor.handlePointerMove(\n        event,\n        scenePointerX,\n        scenePointerY,\n        this.state.editingLinearElement,\n      );\n      if (editingLinearElement !== this.state.editingLinearElement) {\n        this.setState({ editingLinearElement });\n      }\n    }\n\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n      const { x: rx, y: ry } = multiElement;\n\n      const { points, lastCommittedPoint } = multiElement;\n      const lastPoint = points[points.length - 1];\n\n      setCursorForShape(this.state.elementType);\n\n      if (lastPoint === lastCommittedPoint) {\n        // if we haven't yet created a temp point and we're beyond commit-zone\n        //  threshold, add a point\n        if (\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastPoint[0],\n            lastPoint[1],\n          ) >= LINE_CONFIRM_THRESHOLD\n        ) {\n          mutateElement(multiElement, {\n            points: [...points, [scenePointerX - rx, scenePointerY - ry]],\n          });\n        } else {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          // in this branch, we're inside the commit zone, and no uncommitted\n          //  point exists. Thus do nothing (don't add/remove points).\n        }\n      } else {\n        // cursor moved inside commit zone, and there's uncommitted point,\n        //  thus remove it\n        if (\n          points.length > 2 &&\n          lastCommittedPoint &&\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          mutateElement(multiElement, {\n            points: points.slice(0, -1),\n          });\n        } else {\n          if (isPathALoop(points)) {\n            document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          }\n          // update last uncommitted point\n          mutateElement(multiElement, {\n            points: [\n              ...points.slice(0, -1),\n              [scenePointerX - rx, scenePointerY - ry],\n            ],\n          });\n        }\n      }\n      return;\n    }\n\n    const hasDeselectedButton = Boolean(event.buttons);\n    if (\n      hasDeselectedButton ||\n      (this.state.elementType !== \"selection\" &&\n        this.state.elementType !== \"text\")\n    ) {\n      return;\n    }\n\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    if (\n      selectedElements.length === 1 &&\n      !isOverScrollBar &&\n      !this.state.editingLinearElement\n    ) {\n      const elementWithResizeHandler = getElementWithResizeHandler(\n        elements,\n        this.state,\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (elementWithResizeHandler && elementWithResizeHandler.resizeHandle) {\n        document.documentElement.style.cursor = getCursorForResizingElement(\n          elementWithResizeHandler,\n        );\n        return;\n      }\n    } else if (selectedElements.length > 1 && !isOverScrollBar) {\n      const resizeHandle = getResizeHandlerFromCoords(\n        getCommonBounds(selectedElements),\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (resizeHandle) {\n        document.documentElement.style.cursor = getCursorForResizingElement({\n          resizeHandle,\n        });\n        return;\n      }\n    }\n    const hitElement = getElementAtPosition(\n      elements,\n      this.state,\n      scenePointerX,\n      scenePointerY,\n      this.state.zoom,\n    );\n    if (this.state.elementType === \"text\") {\n      document.documentElement.style.cursor = isTextElement(hitElement)\n        ? CURSOR_TYPE.TEXT\n        : CURSOR_TYPE.CROSSHAIR;\n    } else {\n      document.documentElement.style.cursor =\n        hitElement && !isOverScrollBar ? \"move\" : \"\";\n    }\n  };\n\n  private handleCanvasPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.persist();\n\n    if (lastPointerUp !== null) {\n      // Unfortunately, sometimes we don't get a pointerup after a pointerdown,\n      // this can happen when a contextual menu or alert is triggered. In order to avoid\n      // being in a weird state, we clean up on the next pointerdown\n      lastPointerUp(event);\n    }\n\n    if (isPanning) {\n      return;\n    }\n\n    this.setState({\n      lastPointerDownWith: event.pointerType,\n      cursorButton: \"down\",\n    });\n    this.savePointer(event.clientX, event.clientY, \"down\");\n\n    // pan canvas on wheel button drag or space+drag\n    if (\n      gesture.pointers.size === 0 &&\n      (event.button === POINTER_BUTTON.WHEEL ||\n        (event.button === POINTER_BUTTON.MAIN && isHoldingSpace))\n    ) {\n      isPanning = true;\n\n      let nextPastePrevented = false;\n      const isLinux = /Linux/.test(window.navigator.platform);\n\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n      let { clientX: lastX, clientY: lastY } = event;\n      const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n        const deltaX = lastX - event.clientX;\n        const deltaY = lastY - event.clientY;\n        lastX = event.clientX;\n        lastY = event.clientY;\n\n        /*\n         * Prevent paste event if we move while middle clicking on Linux.\n         * See issue #1383.\n         */\n        if (\n          isLinux &&\n          !nextPastePrevented &&\n          (Math.abs(deltaX) > 1 || Math.abs(deltaY) > 1)\n        ) {\n          nextPastePrevented = true;\n\n          /* Prevent the next paste event */\n          const preventNextPaste = (event: ClipboardEvent) => {\n            document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n            event.stopPropagation();\n          };\n\n          /*\n           * Reenable next paste in case of disabled middle click paste for\n           * any reason:\n           * - rigth click paste\n           * - empty clipboard\n           */\n          const enableNextPaste = () => {\n            setTimeout(() => {\n              document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n              window.removeEventListener(EVENT.POINTER_UP, enableNextPaste);\n            }, 100);\n          };\n\n          document.body.addEventListener(EVENT.PASTE, preventNextPaste);\n          window.addEventListener(EVENT.POINTER_UP, enableNextPaste);\n        }\n\n        this.setState({\n          scrollX: normalizeScroll(\n            this.state.scrollX - deltaX / this.state.zoom,\n          ),\n          scrollY: normalizeScroll(\n            this.state.scrollY - deltaY / this.state.zoom,\n          ),\n        });\n      });\n      const teardown = withBatchedUpdates(\n        (lastPointerUp = () => {\n          lastPointerUp = null;\n          isPanning = false;\n          if (!isHoldingSpace) {\n            setCursorForShape(this.state.elementType);\n          }\n          this.setState({\n            cursorButton: \"up\",\n          });\n          this.savePointer(event.clientX, event.clientY, \"up\");\n          window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n          window.removeEventListener(EVENT.POINTER_UP, teardown);\n          window.removeEventListener(EVENT.BLUR, teardown);\n        }),\n      );\n      window.addEventListener(EVENT.BLUR, teardown);\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, {\n        passive: true,\n      });\n      window.addEventListener(EVENT.POINTER_UP, teardown);\n      return;\n    }\n\n    // only handle left mouse button or touch\n    if (\n      event.button !== POINTER_BUTTON.MAIN &&\n      event.button !== POINTER_BUTTON.TOUCH\n    ) {\n      return;\n    }\n\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = this.state.zoom;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values()),\n      );\n    }\n\n    // fixes pointermove causing selection of UI texts #32\n    event.preventDefault();\n    // Preventing the event above disables default behavior\n    //  of defocusing potentially focused element, which is what we\n    //  want when clicking inside the canvas.\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n\n    // don't select while panning\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n\n    // Handle scrollbars dragging\n    const {\n      isOverHorizontalScrollBar,\n      isOverVerticalScrollBar,\n    } = isOverScrollBars(currentScrollBars, event.clientX, event.clientY);\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n    let lastX = x;\n    let lastY = y;\n\n    if (\n      (isOverHorizontalScrollBar || isOverVerticalScrollBar) &&\n      !this.state.multiElement\n    ) {\n      isDraggingScrollBar = true;\n      lastX = event.clientX;\n      lastY = event.clientY;\n      const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n        const target = event.target;\n        if (!(target instanceof HTMLElement)) {\n          return;\n        }\n\n        if (isOverHorizontalScrollBar) {\n          const x = event.clientX;\n          const dx = x - lastX;\n          this.setState({\n            scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n          });\n          lastX = x;\n          return;\n        }\n\n        if (isOverVerticalScrollBar) {\n          const y = event.clientY;\n          const dy = y - lastY;\n          this.setState({\n            scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n          });\n          lastY = y;\n        }\n      });\n\n      const onPointerUp = withBatchedUpdates(() => {\n        isDraggingScrollBar = false;\n        setCursorForShape(this.state.elementType);\n        lastPointerUp = null;\n        this.setState({\n          cursorButton: \"up\",\n        });\n        this.savePointer(event.clientX, event.clientY, \"up\");\n        window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n        window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n      });\n\n      lastPointerUp = onPointerUp;\n\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n      return;\n    }\n\n    const originX = x;\n    const originY = y;\n    const [originGridX, originGridY] = getGridPoint(\n      originX,\n      originY,\n      this.state.gridSize,\n    );\n\n    type ResizeTestType = ReturnType<typeof resizeTest>;\n    let resizeHandle: ResizeTestType = false;\n    const setResizeHandle = (nextResizeHandle: ResizeTestType) => {\n      resizeHandle = nextResizeHandle;\n    };\n    let resizeOffsetXY: [number, number] = [0, 0];\n    let resizeArrowDirection: \"origin\" | \"end\" = \"origin\";\n    let isResizingElements = false;\n    let draggingOccurred = false;\n    let dragOffsetXY: [number, number] | null = null;\n    let hitElement: ExcalidrawElement | null = null;\n    let hitElementWasAddedToSelection = false;\n\n    if (this.state.elementType === \"selection\") {\n      const elements = globalSceneState.getElements();\n      const selectedElements = getSelectedElements(elements, this.state);\n      if (selectedElements.length === 1 && !this.state.editingLinearElement) {\n        const elementWithResizeHandler = getElementWithResizeHandler(\n          elements,\n          this.state,\n          x,\n          y,\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (elementWithResizeHandler) {\n          this.setState({\n            resizingElement: elementWithResizeHandler\n              ? elementWithResizeHandler.element\n              : null,\n          });\n          resizeHandle = elementWithResizeHandler.resizeHandle;\n          document.documentElement.style.cursor = getCursorForResizingElement(\n            elementWithResizeHandler,\n          );\n          isResizingElements = true;\n        }\n      } else if (selectedElements.length > 1) {\n        resizeHandle = getResizeHandlerFromCoords(\n          getCommonBounds(selectedElements),\n          x,\n          y,\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (resizeHandle) {\n          document.documentElement.style.cursor = getCursorForResizingElement({\n            resizeHandle,\n          });\n          isResizingElements = true;\n        }\n      }\n      if (isResizingElements) {\n        resizeOffsetXY = getResizeOffsetXY(\n          resizeHandle,\n          selectedElements,\n          x,\n          y,\n        );\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0]) &&\n          selectedElements[0].points.length === 2\n        ) {\n          resizeArrowDirection = getResizeArrowDirection(\n            resizeHandle,\n            selectedElements[0],\n          );\n        }\n      }\n      if (!isResizingElements) {\n        if (this.state.editingLinearElement) {\n          const ret = LinearElementEditor.handlePointerDown(\n            event,\n            this.state,\n            (appState) => this.setState(appState),\n            history,\n            x,\n            y,\n          );\n          if (ret.hitElement) {\n            hitElement = ret.hitElement;\n          }\n          if (ret.didAddPoint) {\n            return;\n          }\n        }\n\n        // hitElement may already be set above, so check first\n        hitElement =\n          hitElement ||\n          getElementAtPosition(elements, this.state, x, y, this.state.zoom);\n\n        // clear selection if shift is not clicked\n        if (\n          !(hitElement && this.state.selectedElementIds[hitElement.id]) &&\n          !event.shiftKey\n        ) {\n          this.setState((prevState) => ({\n            selectedElementIds: {},\n            selectedGroupIds: {},\n            editingGroupId:\n              prevState.editingGroupId &&\n              hitElement &&\n              isElementInGroup(hitElement, prevState.editingGroupId)\n                ? prevState.editingGroupId\n                : null,\n          }));\n          const { selectedElementIds } = this.state;\n          this.setState({\n            selectedElementIds: {},\n            previousSelectedElementIds: selectedElementIds,\n          });\n        }\n\n        // If we click on something\n        if (hitElement) {\n          // deselect if item is selected\n          // if shift is not clicked, this will always return true\n          // otherwise, it will trigger selection based on current\n          // state of the box\n          if (!this.state.selectedElementIds[hitElement.id]) {\n            // if we are currently editing a group, treat all selections outside of the group\n            // as exiting editing mode.\n            if (\n              this.state.editingGroupId &&\n              !isElementInGroup(hitElement, this.state.editingGroupId)\n            ) {\n              this.setState({\n                selectedElementIds: {},\n                selectedGroupIds: {},\n                editingGroupId: null,\n              });\n              return;\n            }\n            this.setState((prevState) => {\n              return selectGroupsForSelectedElements(\n                {\n                  ...prevState,\n                  selectedElementIds: {\n                    ...prevState.selectedElementIds,\n                    [hitElement!.id]: true,\n                  },\n                },\n                globalSceneState.getElements(),\n              );\n            });\n            // TODO: this is strange...\n            globalSceneState.replaceAllElements(\n              globalSceneState.getElementsIncludingDeleted(),\n            );\n            hitElementWasAddedToSelection = true;\n          }\n        }\n\n        const { selectedElementIds } = this.state;\n        this.setState({\n          previousSelectedElementIds: selectedElementIds,\n        });\n      }\n    } else {\n      this.setState({\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    }\n\n    if (this.state.elementType === \"text\") {\n      // if we're currently still editing text, clicking outside\n      //  should only finalize it, not create another (irrespective\n      //  of state.elementLocked)\n      if (this.state.editingElement?.type === \"text\") {\n        return;\n      }\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        event,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n      this.startTextEditing({\n        x: x,\n        y: y,\n        clientX: event.clientX,\n        clientY: event.clientY,\n        centerIfPossible: !event.altKey,\n      });\n\n      resetCursor();\n      if (!this.state.elementLocked) {\n        this.setState({\n          elementType: \"selection\",\n        });\n      }\n      return;\n    } else if (\n      this.state.elementType === \"arrow\" ||\n      this.state.elementType === \"draw\" ||\n      this.state.elementType === \"line\"\n    ) {\n      if (this.state.multiElement) {\n        const { multiElement } = this.state;\n\n        // finalize if completing a loop\n        if (multiElement.type === \"line\" && isPathALoop(multiElement.points)) {\n          mutateElement(multiElement, {\n            lastCommittedPoint:\n              multiElement.points[multiElement.points.length - 1],\n          });\n          this.actionManager.executeAction(actionFinalize);\n          return;\n        }\n\n        const { x: rx, y: ry, lastCommittedPoint } = multiElement;\n\n        // clicking inside commit zone → finalize arrow\n        if (\n          multiElement.points.length > 1 &&\n          lastCommittedPoint &&\n          distance2d(\n            x - rx,\n            y - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          this.actionManager.executeAction(actionFinalize);\n          return;\n        }\n\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [multiElement.id]: true,\n          },\n        }));\n        // clicking outside commit zone → update reference for last committed\n        //  point\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n      } else {\n        const [gridX, gridY] = getGridPoint(\n          x,\n          y,\n          this.state.elementType === \"draw\" ? null : this.state.gridSize,\n        );\n        const element = newLinearElement({\n          type: this.state.elementType,\n          x: gridX,\n          y: gridY,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n        });\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: false,\n          },\n        }));\n        mutateElement(element, {\n          points: [...element.points, [0, 0]],\n        });\n        globalSceneState.replaceAllElements([\n          ...globalSceneState.getElementsIncludingDeleted(),\n          element,\n        ]);\n        this.setState({\n          draggingElement: element,\n          editingElement: element,\n        });\n      }\n    } else {\n      const [gridX, gridY] = getGridPoint(x, y, this.state.gridSize);\n      const element = newElement({\n        type: this.state.elementType,\n        x: gridX,\n        y: gridY,\n        strokeColor: this.state.currentItemStrokeColor,\n        backgroundColor: this.state.currentItemBackgroundColor,\n        fillStyle: this.state.currentItemFillStyle,\n        strokeWidth: this.state.currentItemStrokeWidth,\n        strokeStyle: this.state.currentItemStrokeStyle,\n        roughness: this.state.currentItemRoughness,\n        opacity: this.state.currentItemOpacity,\n      });\n\n      if (element.type === \"selection\") {\n        this.setState({\n          selectionElement: element,\n          draggingElement: element,\n        });\n      } else {\n        globalSceneState.replaceAllElements([\n          ...globalSceneState.getElementsIncludingDeleted(),\n          element,\n        ]);\n        this.setState({\n          multiElement: null,\n          draggingElement: element,\n          editingElement: element,\n        });\n      }\n    }\n\n    let selectedElementWasDuplicated = false;\n\n    const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n      // We need to initialize dragOffsetXY only after we've updated\n      // `state.selectedElementIds` on pointerDown. Doing it here in pointerMove\n      // event handler should hopefully ensure we're already working with\n      // the updated state.\n      if (dragOffsetXY === null) {\n        dragOffsetXY = getDragOffsetXY(\n          getSelectedElements(globalSceneState.getElements(), this.state),\n          originX,\n          originY,\n        );\n      }\n\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (isOverHorizontalScrollBar) {\n        const x = event.clientX;\n        const dx = x - lastX;\n        this.setState({\n          scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n        });\n        lastX = x;\n        return;\n      }\n\n      if (isOverVerticalScrollBar) {\n        const y = event.clientY;\n        const dy = y - lastY;\n        this.setState({\n          scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n        });\n        lastY = y;\n        return;\n      }\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        event,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      const [gridX, gridY] = getGridPoint(x, y, this.state.gridSize);\n\n      // for arrows/lines, don't start dragging until a given threshold\n      //  to ensure we don't create a 2-point arrow by mistake when\n      //  user clicks mouse in a way that it moves a tiny bit (thus\n      //  triggering pointermove)\n      if (\n        !draggingOccurred &&\n        (this.state.elementType === \"arrow\" ||\n          this.state.elementType === \"line\")\n      ) {\n        if (distance2d(x, y, originX, originY) < DRAGGING_THRESHOLD) {\n          return;\n        }\n      }\n\n      if (isResizingElements) {\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        this.setState({\n          isResizing: resizeHandle && resizeHandle !== \"rotation\",\n          isRotating: resizeHandle === \"rotation\",\n        });\n        const [resizeX, resizeY] = getGridPoint(\n          x - resizeOffsetXY[0],\n          y - resizeOffsetXY[1],\n          this.state.gridSize,\n        );\n        if (\n          resizeElements(\n            resizeHandle,\n            setResizeHandle,\n            selectedElements,\n            resizeArrowDirection,\n            getRotateWithDiscreteAngleKey(event),\n            getResizeWithSidesSameLengthKey(event),\n            getResizeCenterPointKey(event),\n            resizeX,\n            resizeY,\n          )\n        ) {\n          return;\n        }\n      }\n\n      if (this.state.editingLinearElement) {\n        const didDrag = LinearElementEditor.handlePointDragging(\n          this.state,\n          (appState) => this.setState(appState),\n          x,\n          y,\n          lastX,\n          lastY,\n        );\n\n        if (didDrag) {\n          lastX = x;\n          lastY = y;\n          return;\n        }\n      }\n\n      if (hitElement && this.state.selectedElementIds[hitElement.id]) {\n        // Marking that click was used for dragging to check\n        // if elements should be deselected on pointerup\n        draggingOccurred = true;\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        if (selectedElements.length > 0) {\n          const [dragX, dragY] = getGridPoint(\n            x - dragOffsetXY[0],\n            y - dragOffsetXY[1],\n            this.state.gridSize,\n          );\n          dragSelectedElements(selectedElements, dragX, dragY);\n\n          // We duplicate the selected element if alt is pressed on pointer move\n          if (event.altKey && !selectedElementWasDuplicated) {\n            // Move the currently selected elements to the top of the z index stack, and\n            // put the duplicates where the selected elements used to be.\n            // (the origin point where the dragging started)\n\n            selectedElementWasDuplicated = true;\n\n            const nextElements = [];\n            const elementsToAppend = [];\n            const groupIdMap = new Map();\n            for (const element of globalSceneState.getElementsIncludingDeleted()) {\n              if (\n                this.state.selectedElementIds[element.id] ||\n                // case: the state.selectedElementIds might not have been\n                //  updated yet by the time this mousemove event is fired\n                (element.id === hitElement.id && hitElementWasAddedToSelection)\n              ) {\n                const duplicatedElement = duplicateElement(\n                  this.state.editingGroupId,\n                  groupIdMap,\n                  element,\n                );\n                const [originDragX, originDragY] = getGridPoint(\n                  originX - dragOffsetXY[0],\n                  originY - dragOffsetXY[1],\n                  this.state.gridSize,\n                );\n                mutateElement(duplicatedElement, {\n                  x: duplicatedElement.x + (originDragX - dragX),\n                  y: duplicatedElement.y + (originDragY - dragY),\n                });\n                nextElements.push(duplicatedElement);\n                elementsToAppend.push(element);\n              } else {\n                nextElements.push(element);\n              }\n            }\n            globalSceneState.replaceAllElements([\n              ...nextElements,\n              ...elementsToAppend,\n            ]);\n          }\n          return;\n        }\n      }\n\n      // It is very important to read this.state within each move event,\n      // otherwise we would read a stale one!\n      const draggingElement = this.state.draggingElement;\n      if (!draggingElement) {\n        return;\n      }\n\n      if (isLinearElement(draggingElement)) {\n        draggingOccurred = true;\n        const points = draggingElement.points;\n        let dx: number;\n        let dy: number;\n        if (draggingElement.type === \"draw\") {\n          dx = x - draggingElement.x;\n          dy = y - draggingElement.y;\n        } else {\n          dx = gridX - draggingElement.x;\n          dy = gridY - draggingElement.y;\n        }\n\n        if (getRotateWithDiscreteAngleKey(event) && points.length === 2) {\n          ({ width: dx, height: dy } = getPerfectElementSize(\n            this.state.elementType,\n            dx,\n            dy,\n          ));\n        }\n\n        if (points.length === 1) {\n          mutateElement(draggingElement, { points: [...points, [dx, dy]] });\n        } else if (points.length > 1) {\n          if (draggingElement.type === \"draw\") {\n            mutateElement(draggingElement, {\n              points: simplify([...(points as Point[]), [dx, dy]], 0.7),\n            });\n          } else {\n            mutateElement(draggingElement, {\n              points: [...points.slice(0, -1), [dx, dy]],\n            });\n          }\n        }\n      } else if (draggingElement.type === \"selection\") {\n        dragNewElement(\n          draggingElement,\n          this.state.elementType,\n          originX,\n          originY,\n          x,\n          y,\n          distance(originX, x),\n          distance(originY, y),\n          getResizeWithSidesSameLengthKey(event),\n          getResizeCenterPointKey(event),\n        );\n      } else {\n        dragNewElement(\n          draggingElement,\n          this.state.elementType,\n          originGridX,\n          originGridY,\n          gridX,\n          gridY,\n          distance(originGridX, gridX),\n          distance(originGridY, gridY),\n          getResizeWithSidesSameLengthKey(event),\n          getResizeCenterPointKey(event),\n        );\n      }\n\n      if (this.state.elementType === \"selection\") {\n        const elements = globalSceneState.getElements();\n        if (!event.shiftKey && isSomeElementSelected(elements, this.state)) {\n          this.setState({\n            selectedElementIds: {},\n            selectedGroupIds: {},\n            editingGroupId: null,\n          });\n        }\n        const elementsWithinSelection = getElementsWithinSelection(\n          elements,\n          draggingElement,\n        );\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                ...elementsWithinSelection.reduce((map, element) => {\n                  map[element.id] = true;\n                  return map;\n                }, {} as any),\n              },\n            },\n            globalSceneState.getElements(),\n          ),\n        );\n      }\n    });\n\n    const onPointerUp = withBatchedUpdates((childEvent: PointerEvent) => {\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        elementType,\n        elementLocked,\n      } = this.state;\n\n      this.setState({\n        isResizing: false,\n        isRotating: false,\n        resizingElement: null,\n        selectionElement: null,\n        cursorButton: \"up\",\n        editingElement: multiElement ? this.state.editingElement : null,\n      });\n\n      this.savePointer(childEvent.clientX, childEvent.clientY, \"up\");\n\n      // if moving start/end point towards start/end point within threshold,\n      //  close the loop\n      if (this.state.editingLinearElement) {\n        const editingLinearElement = LinearElementEditor.handlePointerUp(\n          this.state.editingLinearElement,\n        );\n        if (editingLinearElement !== this.state.editingLinearElement) {\n          this.setState({ editingLinearElement });\n        }\n      }\n\n      lastPointerUp = null;\n\n      window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n\n      if (draggingElement?.type === \"draw\") {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n      if (isLinearElement(draggingElement)) {\n        if (draggingElement!.points.length > 1) {\n          history.resumeRecording();\n        }\n        if (!draggingOccurred && draggingElement && !multiElement) {\n          const { x, y } = viewportCoordsToSceneCoords(\n            childEvent,\n            this.state,\n            this.canvas,\n            window.devicePixelRatio,\n          );\n          mutateElement(draggingElement, {\n            points: [\n              ...draggingElement.points,\n              [x - draggingElement.x, y - draggingElement.y],\n            ],\n          });\n          this.setState({\n            multiElement: draggingElement,\n            editingElement: this.state.draggingElement,\n          });\n        } else if (draggingOccurred && !multiElement) {\n          if (!elementLocked) {\n            resetCursor();\n            this.setState((prevState) => ({\n              draggingElement: null,\n              elementType: \"selection\",\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          } else {\n            this.setState((prevState) => ({\n              draggingElement: null,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          }\n        }\n        return;\n      }\n\n      if (\n        elementType !== \"selection\" &&\n        draggingElement &&\n        isInvisiblySmallElement(draggingElement)\n      ) {\n        // remove invisible element which was added in onPointerDown\n        globalSceneState.replaceAllElements(\n          globalSceneState.getElementsIncludingDeleted().slice(0, -1),\n        );\n        this.setState({\n          draggingElement: null,\n        });\n        return;\n      }\n\n      if (draggingElement) {\n        mutateElement(\n          draggingElement,\n          getNormalizedDimensions(draggingElement),\n        );\n      }\n\n      if (resizingElement) {\n        history.resumeRecording();\n      }\n\n      if (resizingElement && isInvisiblySmallElement(resizingElement)) {\n        globalSceneState.replaceAllElements(\n          globalSceneState\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== resizingElement.id),\n        );\n      }\n\n      // If click occurred on already selected element\n      // it is needed to remove selection from other elements\n      // or if SHIFT or META key pressed remove selection\n      // from hitted element\n      //\n      // If click occurred and elements were dragged or some element\n      // was added to selection (on pointerdown phase) we need to keep\n      // selection unchanged\n      if (\n        getSelectedGroupIds(this.state).length === 0 &&\n        hitElement &&\n        !draggingOccurred &&\n        !hitElementWasAddedToSelection\n      ) {\n        if (childEvent.shiftKey) {\n          this.setState((prevState) => ({\n            selectedElementIds: {\n              ...prevState.selectedElementIds,\n              [hitElement!.id]: false,\n            },\n          }));\n        } else {\n          this.setState((_prevState) => ({\n            selectedElementIds: { [hitElement!.id]: true },\n          }));\n        }\n      }\n\n      if (draggingElement === null) {\n        // if no element is clicked, clear the selection and redraw\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n        return;\n      }\n\n      if (!elementLocked) {\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [draggingElement.id]: true,\n          },\n        }));\n      }\n\n      if (\n        elementType !== \"selection\" ||\n        isSomeElementSelected(globalSceneState.getElements(), this.state)\n      ) {\n        history.resumeRecording();\n      }\n\n      if (!elementLocked) {\n        resetCursor();\n        this.setState({\n          draggingElement: null,\n          elementType: \"selection\",\n        });\n      } else {\n        this.setState({\n          draggingElement: null,\n        });\n      }\n    });\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n  };\n\n  private handleCanvasRef = (canvas: HTMLCanvasElement) => {\n    // canvas is null when unmounting\n    if (canvas !== null) {\n      this.canvas = canvas;\n      this.rc = rough.canvas(this.canvas);\n\n      this.canvas.addEventListener(EVENT.WHEEL, this.handleWheel, {\n        passive: false,\n      });\n      this.canvas.addEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas.addEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    } else {\n      this.canvas?.removeEventListener(EVENT.WHEEL, this.handleWheel);\n      this.canvas?.removeEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas?.removeEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    }\n  };\n\n  private handleCanvasOnDrop = (event: React.DragEvent<HTMLCanvasElement>) => {\n    const file = event.dataTransfer?.files[0];\n    if (\n      file?.type === \"application/json\" ||\n      file?.name.endsWith(\".excalidraw\")\n    ) {\n      this.setState({ isLoading: true });\n      loadFromBlob(file)\n        .then(({ elements, appState }) =>\n          this.syncActionResult({\n            elements,\n            appState: {\n              ...(appState || this.state),\n              isLoading: false,\n            },\n            commitToHistory: false,\n          }),\n        )\n        .catch((error) => {\n          this.setState({ isLoading: false, errorMessage: error.message });\n        });\n    } else {\n      this.setState({\n        isLoading: false,\n        errorMessage: t(\"alerts.couldNotLoadInvalidFile\"),\n      });\n    }\n  };\n\n  private handleCanvasContextMenu = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.preventDefault();\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const elements = globalSceneState.getElements();\n    const element = getElementAtPosition(\n      elements,\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n    if (!element) {\n      ContextMenu.push({\n        options: [\n          navigator.clipboard && {\n            label: t(\"labels.paste\"),\n            action: () => this.pasteFromClipboard(null),\n          },\n          probablySupportsClipboardBlob &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsPng\"),\n              action: this.copyToClipboardAsPng,\n            },\n          probablySupportsClipboardWriteText &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsSvg\"),\n              action: this.copyToClipboardAsSvg,\n            },\n          ...this.actionManager.getContextMenuItems((action) =>\n            CANVAS_ONLY_ACTIONS.includes(action.name),\n          ),\n          {\n            label: t(\"labels.toggleGridMode\"),\n            action: this.toggleGridMode,\n          },\n        ],\n        top: event.clientY,\n        left: event.clientX,\n      });\n      return;\n    }\n\n    if (!this.state.selectedElementIds[element.id]) {\n      this.setState({ selectedElementIds: { [element.id]: true } });\n    }\n\n    ContextMenu.push({\n      options: [\n        navigator.clipboard && {\n          label: t(\"labels.copy\"),\n          action: this.copyAll,\n        },\n        navigator.clipboard && {\n          label: t(\"labels.paste\"),\n          action: () => this.pasteFromClipboard(null),\n        },\n        probablySupportsClipboardBlob && {\n          label: t(\"labels.copyAsPng\"),\n          action: this.copyToClipboardAsPng,\n        },\n        probablySupportsClipboardWriteText && {\n          label: t(\"labels.copyAsSvg\"),\n          action: this.copyToClipboardAsSvg,\n        },\n        ...this.actionManager.getContextMenuItems(\n          (action) => !CANVAS_ONLY_ACTIONS.includes(action.name),\n        ),\n      ],\n      top: event.clientY,\n      left: event.clientX,\n    });\n  };\n\n  private handleWheel = withBatchedUpdates((event: WheelEvent) => {\n    event.preventDefault();\n    const { deltaX, deltaY } = event;\n    const { selectedElementIds, previousSelectedElementIds } = this.state;\n\n    // note that event.ctrlKey is necessary to handle pinch zooming\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY);\n      const MAX_STEP = 10;\n      let delta = Math.abs(deltaY);\n      if (delta > MAX_STEP) {\n        delta = MAX_STEP;\n      }\n      delta *= sign;\n      if (Object.keys(previousSelectedElementIds).length !== 0) {\n        setTimeout(() => {\n          this.setState({\n            selectedElementIds: previousSelectedElementIds,\n            previousSelectedElementIds: {},\n          });\n        }, 1000);\n      }\n      this.setState(({ zoom }) => ({\n        zoom: getNormalizedZoom(zoom - delta / 100),\n        selectedElementIds: {},\n        previousSelectedElementIds:\n          Object.keys(selectedElementIds).length !== 0\n            ? selectedElementIds\n            : previousSelectedElementIds,\n      }));\n      return;\n    }\n\n    // scroll horizontally when shift pressed\n    if (event.shiftKey) {\n      this.setState(({ zoom, scrollX }) => ({\n        // on Mac, shift+wheel tends to result in deltaX\n        scrollX: normalizeScroll(scrollX - (deltaY || deltaX) / zoom),\n      }));\n      return;\n    }\n\n    this.setState(({ zoom, scrollX, scrollY }) => ({\n      scrollX: normalizeScroll(scrollX - deltaX / zoom),\n      scrollY: normalizeScroll(scrollY - deltaY / zoom),\n    }));\n  });\n\n  private getTextWysiwygSnappedToCenterPosition(\n    x: number,\n    y: number,\n    state: {\n      scrollX: FlooredNumber;\n      scrollY: FlooredNumber;\n      zoom: number;\n    },\n    canvas: HTMLCanvasElement | null,\n    scale: number,\n  ) {\n    const elementClickedInside = getElementContainingPosition(\n      globalSceneState.getElementsIncludingDeleted(),\n      x,\n      y,\n    );\n    if (elementClickedInside) {\n      const elementCenterX =\n        elementClickedInside.x + elementClickedInside.width / 2;\n      const elementCenterY =\n        elementClickedInside.y + elementClickedInside.height / 2;\n      const distanceToCenter = Math.hypot(\n        x - elementCenterX,\n        y - elementCenterY,\n      );\n      const isSnappedToCenter =\n        distanceToCenter < TEXT_TO_CENTER_SNAP_THRESHOLD;\n      if (isSnappedToCenter) {\n        const { x: wysiwygX, y: wysiwygY } = sceneCoordsToViewportCoords(\n          { sceneX: elementCenterX, sceneY: elementCenterY },\n          state,\n          canvas,\n          scale,\n        );\n        return { wysiwygX, wysiwygY, elementCenterX, elementCenterY };\n      }\n    }\n  }\n\n  private savePointer = (x: number, y: number, button: \"up\" | \"down\") => {\n    if (!x || !y) {\n      return;\n    }\n    const pointerCoords = viewportCoordsToSceneCoords(\n      { clientX: x, clientY: y },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (isNaN(pointerCoords.x) || isNaN(pointerCoords.y)) {\n      // sometimes the pointer goes off screen\n      return;\n    }\n    this.portal.socket &&\n      // do not broadcast when more than 1 pointer since that shows flickering on the other side\n      gesture.pointers.size < 2 &&\n      this.broadcastMouseLocation({\n        pointerCoords,\n        button,\n      });\n  };\n\n  private resetShouldCacheIgnoreZoomDebounced = debounce(() => {\n    this.setState({ shouldCacheIgnoreZoom: false });\n  }, 300);\n\n  private saveDebounced = debounce(() => {\n    saveToLocalStorage(\n      globalSceneState.getElementsIncludingDeleted(),\n      this.state,\n    );\n  }, 300);\n}\n\n// -----------------------------------------------------------------------------\n// TEST HOOKS\n// -----------------------------------------------------------------------------\n\ndeclare global {\n  interface Window {\n    h: {\n      elements: readonly ExcalidrawElement[];\n      state: AppState;\n      setState: React.Component<any, AppState>[\"setState\"];\n      history: SceneHistory;\n      app: InstanceType<typeof App>;\n    };\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.h = {} as Window[\"h\"];\n\n  Object.defineProperties(window.h, {\n    elements: {\n      get() {\n        return globalSceneState.getElementsIncludingDeleted();\n      },\n      set(elements: ExcalidrawElement[]) {\n        return globalSceneState.replaceAllElements(elements);\n      },\n    },\n    history: {\n      get: () => history,\n    },\n  });\n}\n\nexport default App;\n","// time in milliseconds\nexport const TAP_TWICE_TIMEOUT = 300;\nexport const INITAL_SCENE_UPDATE_TIMEOUT = 5000;\nexport const SYNC_FULL_SCENE_INTERVAL_MS = 20000;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport nanoid from \"nanoid\";\nimport { fileSave } from \"browser-nativefs\";\n// @ts-ignore\nimport GIF from \"gif.js/dist/gif\";\n\nimport \"./Claymate.css\";\nimport { Island } from \"./excalidraw/src/components/Island\";\nimport { globalSceneState } from \"./excalidraw/src/scene\";\nimport { exportToCanvas } from \"./excalidraw/src/scene/export\";\n\ntype Snapshot = {\n  id: string;\n  width: number;\n  height: number;\n  imageData: ImageData;\n};\n\nconst createSnapshot = (size?: { width: number; height: number }): Snapshot => {\n  const elements = globalSceneState.getElements();\n  const canvas = exportToCanvas(elements, {} as any, {\n    exportBackground: true,\n    exportPadding: 10,\n    viewBackgroundColor: \"#fff\",\n    scale: window.devicePixelRatio,\n    shouldAddWatermark: false,\n  });\n  const width = size ? size.width : canvas.width;\n  const height = size ? size.height : canvas.height;\n  const ctx = canvas.getContext(\"2d\");\n  return {\n    id: nanoid(),\n    width,\n    height,\n    imageData: ctx.getImageData(0, 0, width, height),\n  };\n};\n\nconst Preview: React.FC<{ snapshot: Snapshot }> = ({ snapshot }) => {\n  const ref = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    if (!ref.current) return;\n    const ctx = ref.current.getContext(\"2d\");\n    if (!ctx) return;\n    ctx.putImageData(snapshot.imageData, 0, 0);\n  }, [snapshot]);\n  return <canvas ref={ref} width={snapshot.width} height={snapshot.height} />;\n};\n\nconst Claymate: React.FC = () => {\n  const [snapshots, setSnapshots] = useState<Snapshot[]>([]);\n  const exportGif = () => {\n    const gif = new GIF();\n    snapshots.forEach((snapshot) => {\n      //gif.addFrame(snapshot.imageData,{delay: 2000});\n      //gif.addFrame(snapshot.imageData);\n      gif.addFrame(snapshot.imageData, {delay: 2000});\n    });\n    gif.on(\"finished\", async (blob: Blob) => {\n      await fileSave(blob, {\n        fileName: \"excalidraw-claymate.gif\",\n      });\n    });\n    gif.render();\n  };\n  const addSnapshot = () => {\n    const snapshot = createSnapshot(\n      snapshots[0] && {\n        width: snapshots[0].width,\n        height: snapshots[0].height,\n      }\n    );\n    setSnapshots((prev) => [...prev, snapshot]);\n  };\n  const deleteSnapshot = (id: string) => {\n    setSnapshots((prev) => prev.filter((item) => item.id !== id));\n  };\n  const moveLeft = (id: string) => {\n    setSnapshots((prev) => {\n      const index = prev.findIndex((item) => item.id === id);\n      const tmp = [...prev];\n      tmp[index - 1] = prev[index];\n      tmp[index] = prev[index - 1];\n      return tmp;\n    });\n  };\n  const moveRight = (id: string) => {\n    setSnapshots((prev) => {\n      const index = prev.findIndex((item) => item.id === id);\n      const tmp = [...prev];\n      tmp[index + 1] = prev[index];\n      tmp[index] = prev[index + 1];\n      return tmp;\n    });\n  };\n  return (\n    <Island className=\"Claymate\">\n      <div className=\"Claymate-buttons\">\n        <button type=\"button\" onClick={addSnapshot}>\n          Add snapshot\n        </button>\n        <button\n          type=\"button\"\n          onClick={exportGif}\n          disabled={snapshots.length === 0}\n        >\n          Export GIF\n        </button>\n      </div>\n      <div className=\"Claymate-snapshots\">\n        {snapshots.map((snapshot, index) => (\n          <div key={snapshot.id} className=\"Claymate-snapshot\">\n            <Preview snapshot={snapshot} />\n            <button\n              type=\"button\"\n              className=\"Claymate-delete\"\n              aria-label=\"Delete\"\n              onClick={() => deleteSnapshot(snapshot.id)}\n            >\n              &#x2716;\n            </button>\n            <button\n              type=\"button\"\n              className=\"Claymate-left\"\n              aria-label=\"Move Left\"\n              disabled={index === 0}\n              onClick={() => moveLeft(snapshot.id)}\n            >\n              &#x2b05;\n            </button>\n            <button\n              type=\"button\"\n              className=\"Claymate-right\"\n              aria-label=\"Move Right\"\n              disabled={index === snapshots.length - 1}\n              onClick={() => moveRight(snapshot.id)}\n            >\n              &#x27a1;\n            </button>\n          </div>\n        ))}\n      </div>\n    </Island>\n  );\n};\n\nexport default Claymate;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport \"./Excalidraw.scss\";\nimport \"./excalidraw/src/css/styles.scss\";\nimport ExcalidrawApp from \"./excalidraw/src/components/App\";\nimport Claymate from \"./Claymate\";\n\nconst App: React.FC = () => (\n  <div className=\"ClaymateApp\">\n    <ExcalidrawApp />\n    <Claymate />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}